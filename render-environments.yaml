# Portal Services API - Render Blueprint (Multiple Environments)
# Configuração para diferentes ambientes (dev, staging, production)
# 
# Como usar:
# 1. Renomeie este arquivo para render.yaml
# 2. Ajuste as configurações conforme necessário
# 3. Use no Render Blueprint

services:
  # PostgreSQL Database (Development)
  - type: pserv
    name: portal-services-db-dev
    plan: starter
    envVars:
      - key: POSTGRES_USER
        value: admin
      - key: POSTGRES_PASSWORD
        generateValue: true
      - key: POSTGRES_DB
        value: portalservicesdb_dev
    autoDeploy: true
    region: oregon

  # Portal Services API (Development)
  - type: web
    name: portal-services-api-dev
    runtime: node
    plan: starter
    buildCommand: cd appserver && npm install && npm run build && npm run init-db
    startCommand: cd appserver && npm start
    envVars:
      - key: NODE_ENV
        value: development
      - key: PORT
        value: 10000
      - key: DB_HOST
        fromService:
          type: pserv
          name: portal-services-db-dev
          property: host
      - key: DB_PORT
        fromService:
          type: pserv
          name: portal-services-db-dev
          property: port
      - key: DB_NAME
        fromService:
          type: pserv
          name: portal-services-db-dev
          property: database
      - key: DB_USER
        fromService:
          type: pserv
          name: portal-services-db-dev
          property: user
      - key: DB_PASSWORD
        fromService:
          type: pserv
          name: portal-services-db-dev
          property: password
      - key: DB_SSL
        value: "true"
      - key: API_URL
        value: https://portal-services-api-dev.onrender.com
      - key: API_BASE_URL
        value: https://portal-services-api-dev.onrender.com
      - key: FRONTEND_URL
        value: https://portal-services-api-dev.onrender.com
      - key: JWT_SECRET
        generateValue: true
      - key: SESSION_SECRET
        generateValue: true
      - key: LOG_LEVEL
        value: debug
    healthCheckPath: /health
    autoDeploy: true
    pullRequestPreviewsEnabled: true
    region: oregon

  # PostgreSQL Database (Production)
  - type: pserv
    name: portal-services-db-prod
    plan: starter
    envVars:
      - key: POSTGRES_USER
        value: admin
      - key: POSTGRES_PASSWORD
        generateValue: true
      - key: POSTGRES_DB
        value: portalservicesdb_prod
    autoDeploy: false  # Deploy manual para produção
    region: oregon

  # Portal Services API (Production)
  - type: web
    name: portal-services-api-prod
    runtime: node
    plan: starter
    buildCommand: cd appserver && npm install && npm run build && npm run init-db
    startCommand: cd appserver && npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: DB_HOST
        fromService:
          type: pserv
          name: portal-services-db-prod
          property: host
      - key: DB_PORT
        fromService:
          type: pserv
          name: portal-services-db-prod
          property: port
      - key: DB_NAME
        fromService:
          type: pserv
          name: portal-services-db-prod
          property: database
      - key: DB_USER
        fromService:
          type: pserv
          name: portal-services-db-prod
          property: user
      - key: DB_PASSWORD
        fromService:
          type: pserv
          name: portal-services-db-prod
          property: password
      - key: DB_SSL
        value: "true"
      - key: API_URL
        value: https://portal-services-api.onrender.com
      - key: API_BASE_URL
        value: https://portal-services-api.onrender.com
      - key: FRONTEND_URL
        value: https://portal-services-api.onrender.com
      - key: JWT_SECRET
        generateValue: true
      - key: SESSION_SECRET
        generateValue: true
      - key: LOG_LEVEL
        value: info
      - key: MAX_REQUEST_SIZE
        value: 10mb
      - key: REQUEST_TIMEOUT
        value: 30000
    healthCheckPath: /health
    autoDeploy: false  # Deploy manual para produção
    pullRequestPreviewsEnabled: false
    region: oregon

# Environment Groups
envVarGroups:
  - name: portal-services-shared
    envVars:
      - key: COMPANY_NAME
        value: Portal Services
      - key: COMPANY_EMAIL
        value: contato@portalservices.com
      - key: COMPANY_PHONE
        value: "(11) 99999-9999"
      - key: DEFAULT_QUOTATION_VALIDITY
        value: "30"
      - key: EMAIL_AUTO_RESPONSE
        value: "true"

# Custom Domains (Production)
customDomains:
  - domain: api.portalservices.com
    service: portal-services-api-prod
  - domain: dev-api.portalservices.com
    service: portal-services-api-dev

# Cron Jobs (Production)
cronJobs:
  - name: portal-services-cleanup-prod
    schedule: "0 2 * * *"  # Diariamente às 2h
    command: cd appserver && node scripts/cleanup.js
    envVars:
      - key: NODE_ENV
        value: production
    region: oregon
