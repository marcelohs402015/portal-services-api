# Portal Services API - Dockerfile para Render
# Otimizado para deploy automático com PostgreSQL gerenciado

FROM node:18-alpine

# Instalar dependências do sistema
RUN apk add --no-cache python3 make g++

# Definir diretório de trabalho
WORKDIR /app

# Copiar package.json e package-lock.json
COPY appserver/package*.json ./

# Instalar dependências
RUN npm ci --only=production && npm cache clean --force

# Copiar código fonte
COPY appserver/ .

# Build da aplicação TypeScript
RUN npm run build

# Remover arquivos desnecessários para reduzir tamanho da imagem
RUN rm -rf src/ tsconfig*.json *.md docs/ tests/ && \
    rm -rf node_modules/@types && \
    npm ci --only=production && \
    npm cache clean --force

# Criar diretório de logs
RUN mkdir -p logs

# Criar usuário não-root para segurança
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Alterar propriedade do diretório da aplicação
RUN chown -R nodejs:nodejs /app
USER nodejs

# Expor porta (Render usa porta dinâmica)
EXPOSE 10000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD node healthcheck.js

# Comando de inicialização
CMD ["node", "dist/server.js"]