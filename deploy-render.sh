#!/bin/bash

# =====================================================
# Portal Services - Deploy Script for Render.com
# Sistema de gest√£o de servi√ßos e or√ßamentos com IA
# =====================================================

echo "üöÄ Portal Services - Deploy para Render.com"
echo "==========================================="

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para log colorido
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# Verificar se estamos no diret√≥rio correto
if [ ! -f "package.json" ]; then
    error "Execute este script na raiz do projeto Portal Services"
    exit 1
fi

# Verificar se o git est√° configurado
if ! git status &> /dev/null; then
    error "Este n√£o √© um reposit√≥rio Git v√°lido"
    exit 1
fi

log "Verificando status do Git..."
if [ -n "$(git status --porcelain)" ]; then
    warning "H√° mudan√ßas n√£o commitadas. Fazendo commit autom√°tico..."
    
    # Adicionar todas as mudan√ßas
    git add .
    
    # Commit com mensagem autom√°tica
    git commit -m "feat: Deploy para Render.com - $(date +'%Y-%m-%d %H:%M:%S')"
    
    success "Mudan√ßas commitadas automaticamente"
fi

# Verificar se estamos na branch main
current_branch=$(git branch --show-current)
if [ "$current_branch" != "main" ]; then
    warning "Voc√™ est√° na branch '$current_branch'. Mudando para 'main'..."
    git checkout main
fi

log "Verificando se o reposit√≥rio remoto est√° configurado..."
if ! git remote get-url origin &> /dev/null; then
    error "Reposit√≥rio remoto 'origin' n√£o configurado"
    echo "Configure com: git remote add origin <seu-repositorio-git>"
    exit 1
fi

# Verificar se h√° commits para push
if [ "$(git rev-list --count origin/main..HEAD)" -eq 0 ]; then
    warning "N√£o h√° commits novos para enviar"
else
    log "Enviando commits para o reposit√≥rio remoto..."
    git push origin main
    
    if [ $? -eq 0 ]; then
        success "Commits enviados com sucesso para o reposit√≥rio remoto"
    else
        error "Falha ao enviar commits para o reposit√≥rio remoto"
        exit 1
    fi
fi

# Verificar se o render.yaml existe
if [ ! -f "render.yaml" ]; then
    error "Arquivo render.yaml n√£o encontrado"
    exit 1
fi

success "Arquivo render.yaml encontrado"

# Mostrar informa√ß√µes do deploy
echo ""
log "üìã Informa√ß√µes do Deploy:"
echo "   ‚Ä¢ Reposit√≥rio: $(git remote get-url origin)"
echo "   ‚Ä¢ Branch: $(git branch --show-current)"
echo "   ‚Ä¢ √öltimo commit: $(git log -1 --pretty=format:'%h - %s (%cr)')"
echo "   ‚Ä¢ Arquivo de configura√ß√£o: render.yaml"

echo ""
log "üéØ Pr√≥ximos passos no Render.com:"
echo "   1. Acesse https://dashboard.render.com"
echo "   2. Clique em 'New +' ‚Üí 'Blueprint'"
echo "   3. Conecte seu reposit√≥rio GitHub"
echo "   4. Selecione este reposit√≥rio"
echo "   5. O Render detectar√° automaticamente o render.yaml"
echo "   6. Clique em 'Apply' para criar todos os servi√ßos"

echo ""
log "üìä Servi√ßos que ser√£o criados:"
echo "   ‚Ä¢ üóÑÔ∏è  Database: portal-services-db (PostgreSQL)"
echo "   ‚Ä¢ üîß Backend: portal-services-backend (Node.js API)"
echo "   ‚Ä¢ üé® Frontend: portal-services-frontend (React Static)"
echo "   ‚Ä¢ ‚öôÔ∏è  DB Setup: portal-services-db-setup (Cron Job)"
echo "   ‚Ä¢ üîç Health Check: portal-services-health-check (Cron Job)"

echo ""
log "üîß Configura√ß√µes importantes:"
echo "   ‚Ä¢ Runtime: Node.js"
echo "   ‚Ä¢ Plan: Starter (gratuito)"
echo "   ‚Ä¢ Region: Oregon"
echo "   ‚Ä¢ Auto-deploy: Habilitado"
echo "   ‚Ä¢ Health Check: /health"

echo ""
warning "‚ö†Ô∏è  Lembre-se de configurar as vari√°veis de ambiente:"
echo "   ‚Ä¢ GMAIL_CLIENT_ID"
echo "   ‚Ä¢ GMAIL_CLIENT_SECRET" 
echo "   ‚Ä¢ GMAIL_REFRESH_TOKEN"

echo ""
success "üéâ Deploy preparado com sucesso!"
echo "   Acesse: https://dashboard.render.com"
echo "   Crie um novo Blueprint e conecte este reposit√≥rio"

echo ""
log "üìö Documenta√ß√£o:"
echo "   ‚Ä¢ Render Blueprint: https://render.com/docs/blueprint-spec"
echo "   ‚Ä¢ Portal Services: README.md"

exit 0
