{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-13T19:12:31.796Z"}
{"level":"info","message":"Starting server in data mode: real ...","service":"Server","timestamp":"2025-09-13T19:12:31.781Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-13T19:12:31.796Z"}
{"error":"password authentication failed for user \"admin\"","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-13T19:12:31.880Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-13T19:12:31.882Z"}
{"level":"error","message":"Failed to initialize database in real mode","service":"Server","timestamp":"2025-09-13T19:12:31.883Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-13T19:13:32.416Z"}
{"level":"info","message":"Starting server in data mode: real ...","service":"Server","timestamp":"2025-09-13T19:13:32.408Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-13T19:13:32.415Z"}
{"error":"password authentication failed for user \"admin\"","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-13T19:13:32.483Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-13T19:13:32.484Z"}
{"level":"error","message":"Failed to initialize database in real mode","service":"Server","timestamp":"2025-09-13T19:13:32.484Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-13T19:14:21.699Z"}
{"level":"info","message":"Starting server in data mode: real ...","service":"Server","timestamp":"2025-09-13T19:14:21.645Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-13T19:14:21.694Z"}
{"error":"password authentication failed for user \"admin\"","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-13T19:14:21.822Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-13T19:14:21.824Z"}
{"level":"error","message":"Failed to initialize database in real mode","service":"Server","timestamp":"2025-09-13T19:14:21.825Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-13T19:15:26.288Z"}
{"level":"info","message":"Starting server in data mode: real ...","service":"Server","timestamp":"2025-09-13T19:15:26.253Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-13T19:15:26.286Z"}
{"error":"password authentication failed for user \"admin\"","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-13T19:15:26.420Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-13T19:15:26.422Z"}
{"level":"error","message":"Failed to initialize database in real mode","service":"Server","timestamp":"2025-09-13T19:15:26.423Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-13T19:22:40.956Z"}
{"level":"info","message":"Starting server in data mode: real ...","service":"Server","timestamp":"2025-09-13T19:22:40.844Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-13T19:22:40.949Z"}
{"error":"password authentication failed for user \"admin\"","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-13T19:22:41.491Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-13T19:22:41.505Z"}
{"error":"password authentication failed for user \"admin\"","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-13T19:22:41.653Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-13T19:22:41.656Z"}
{"level":"error","message":"Failed to initialize database in real mode","service":"Server","timestamp":"2025-09-13T19:22:41.671Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-13T19:24:03.198Z"}
{"level":"info","message":"Starting server in data mode: real ...","service":"Server","timestamp":"2025-09-13T19:24:03.185Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-13T19:24:03.196Z"}
{"duration":110,"level":"debug","message":"Executed query in 110ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-13T19:24:03.309Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-13T19:24:03.311Z"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-13T19:24:03.323Z"}
{"duration":40,"level":"debug","message":"Executed query in 40ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-13T19:24:03.363Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-13T19:24:03.364Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-13T19:24:03.365Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-13T19:24:03.369Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-13T19:24:03.373Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-13T19:24:03.373Z"}
{"level":"info","message":"Categories routes mounted","service":"APIRoutes","timestamp":"2025-09-13T19:24:03.375Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all real DB-backed routes enabled.","service":"Server","timestamp":"2025-09-13T19:24:03.383Z"}
{"level":"info","message":"Services routes mounted","service":"APIRoutes","timestamp":"2025-09-13T19:24:03.377Z"}
{"level":"info","message":"Clients routes mounted","service":"APIRoutes","timestamp":"2025-09-13T19:24:03.379Z"}
{"level":"info","message":"API routes configured successfully","service":"APIRoutes","timestamp":"2025-09-13T19:24:03.379Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-13T19:24:03.384Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-13T19:24:03.389Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-13T19:24:03.389Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-13T19:24:03.390Z"}
{"level":"info","message":"Received shutdown signal, closing server...","service":"Server","timestamp":"2025-09-13T19:24:32.557Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-13T19:25:58.496Z"}
{"level":"info","message":"Starting server in data mode: real ...","service":"Server","timestamp":"2025-09-13T19:25:58.459Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-13T19:25:58.492Z"}
{"duration":121,"level":"debug","message":"Executed query in 121ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-13T19:25:58.620Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-13T19:25:58.621Z"}
{"duration":10,"level":"debug","message":"Executed query in 10ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-13T19:25:58.634Z"}
{"duration":21,"level":"debug","message":"Executed query in 21ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-13T19:25:58.658Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-13T19:25:58.659Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-13T19:25:58.661Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-13T19:25:58.669Z"}
{"duration":1,"level":"debug","message":"Executed query in 1ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-13T19:25:58.672Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-13T19:25:58.673Z"}
{"level":"info","message":"Categories routes mounted","service":"APIRoutes","timestamp":"2025-09-13T19:25:58.676Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all real DB-backed routes enabled.","service":"Server","timestamp":"2025-09-13T19:25:58.694Z"}
{"level":"info","message":"Services routes mounted","service":"APIRoutes","timestamp":"2025-09-13T19:25:58.677Z"}
{"level":"info","message":"Clients routes mounted","service":"APIRoutes","timestamp":"2025-09-13T19:25:58.679Z"}
{"level":"info","message":"API routes configured successfully","service":"APIRoutes","timestamp":"2025-09-13T19:25:58.681Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-13T19:25:58.695Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-13T19:25:58.708Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-13T19:25:58.709Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-13T19:25:58.709Z"}
{"level":"info","message":"Received shutdown signal, closing server...","service":"Server","timestamp":"2025-09-13T19:26:18.873Z"}
{"level":"info","message":"🚀 Starting Categories API Server...","service":"CategoryServer","timestamp":"2025-09-13T19:44:47.891Z"}
{"level":"info","message":"✅ Database connected","service":"CategoryServer","timestamp":"2025-09-13T19:44:48.090Z"}
{"level":"info","message":"🎉 Categories API Server running on http://localhost:3001","service":"CategoryServer","timestamp":"2025-09-13T19:44:48.250Z"}
{"level":"info","message":"📋 Available endpoints:","service":"CategoryServer","timestamp":"2025-09-13T19:44:48.259Z"}
{"level":"info","message":"   GET    /api/health","service":"CategoryServer","timestamp":"2025-09-13T19:44:48.260Z"}
{"level":"info","message":"   GET    /api/categories","service":"CategoryServer","timestamp":"2025-09-13T19:44:48.272Z"}
{"level":"info","message":"   GET    /api/categories/:id","service":"CategoryServer","timestamp":"2025-09-13T19:44:48.288Z"}
{"level":"info","message":"   POST   /api/categories","service":"CategoryServer","timestamp":"2025-09-13T19:44:48.289Z"}
{"level":"info","message":"   PUT    /api/categories/:id","service":"CategoryServer","timestamp":"2025-09-13T19:44:48.299Z"}
{"level":"info","message":"   DELETE /api/categories/:id","service":"CategoryServer","timestamp":"2025-09-13T19:44:48.326Z"}
{"level":"info","message":"📋 Listing categories","service":"CategoryServer","timestamp":"2025-09-13T19:46:02.452Z"}
{"duration":666,"level":"debug","message":"Executed query in 666ms","rowCount":5,"service":"Database","text":"\n          SELECT \n            id, name, description, keywords, patterns, domains, \n            color, active, created_at, updated_at \n          FROM categories \n          WHERE 1=1\n         ORDER BY name ASC","timestamp":"2025-09-13T19:46:03.149Z"}
{"level":"info","message":"✅ Found 5 categories","service":"CategoryServer","timestamp":"2025-09-13T19:46:03.162Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-13T20:45:40.807Z"}
{"level":"info","message":"Starting server in data mode: real ...","service":"Server","timestamp":"2025-09-13T20:45:40.777Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-13T20:45:40.806Z"}
{"duration":129,"level":"debug","message":"Executed query in 129ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-13T20:45:40.938Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-13T20:45:40.939Z"}
{"duration":22,"level":"debug","message":"Executed query in 22ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-13T20:45:40.965Z"}
{"duration":87,"level":"debug","message":"Executed query in 87ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-13T20:45:41.053Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-13T20:45:41.054Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-13T20:45:41.055Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-13T20:45:41.063Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-13T20:45:41.067Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-13T20:45:41.068Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all real DB-backed routes enabled.","service":"Server","timestamp":"2025-09-13T20:45:41.068Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-13T20:45:41.069Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-13T20:45:41.080Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-13T20:45:41.081Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-13T20:45:41.081Z"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-13T20:46:13.469Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-13T20:46:16.546Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-13T20:46:19.573Z","userAgent":"curl/8.5.0"}
{"duration":32,"level":"debug","message":"Executed query in 32ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-13T20:46:19.606Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-13T20:46:27.569Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-13T20:46:30.356Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-13T20:47:01.148Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-13T20:47:04.227Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/stats","service":"Server","timestamp":"2025-09-13T20:47:07.886Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-13T20:47:32.108Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /mode","service":"Server","timestamp":"2025-09-13T20:47:34.754Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/admin","service":"Server","timestamp":"2025-09-13T20:47:38.274Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-13T20:48:09.177Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats","service":"Server","timestamp":"2025-09-13T20:48:09.263Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-13T20:48:09.272Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-13T20:48:09.276Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":23,"level":"debug","message":"Executed query in 23ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-13T20:48:09.300Z"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-13T20:48:14.874Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats","service":"Server","timestamp":"2025-09-13T20:48:14.918Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-13T20:48:14.930Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-13T20:48:14.944Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-13T20:48:14.959Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-13T20:50:18.311Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-13T21:00:58.740Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats","service":"Server","timestamp":"2025-09-13T21:00:58.943Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-13T21:00:58.950Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-13T21:00:58.972Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":59,"level":"debug","message":"Executed query in 59ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-13T21:00:59.036Z"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-13T21:06:51.919Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-13T21:06:57.748Z","userAgent":"curl/8.5.0"}
{"duration":40,"level":"debug","message":"Executed query in 40ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-13T21:06:57.790Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-13T21:08:57.983Z","userAgent":"curl/8.5.0"}
{"duration":34,"level":"debug","message":"Executed query in 34ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-13T21:08:58.018Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-13T21:09:04.209Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-13T21:09:19.022Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-13T21:09:20.253Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-13T21:09:22.294Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-13T21:09:23.507Z","userAgent":"curl/8.5.0"}
{"level":"info","message":"Received shutdown signal, closing server...","service":"Server","timestamp":"2025-09-13T21:10:05.639Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-13T21:10:10.145Z"}
{"level":"info","message":"Starting server in data mode: real ...","service":"Server","timestamp":"2025-09-13T21:10:10.124Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-13T21:10:10.144Z"}
{"duration":134,"level":"debug","message":"Executed query in 134ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-13T21:10:10.280Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-13T21:10:10.282Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-13T21:10:10.297Z"}
{"duration":26,"level":"debug","message":"Executed query in 26ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-13T21:10:10.324Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-13T21:10:10.325Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-13T21:10:10.326Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-13T21:10:10.330Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-13T21:10:10.342Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-13T21:10:10.343Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all real DB-backed routes enabled.","service":"Server","timestamp":"2025-09-13T21:10:10.357Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-13T21:10:10.358Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-13T21:10:10.367Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-13T21:10:10.370Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-13T21:10:10.370Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-13T21:10:31.395Z","userAgent":"curl/8.5.0"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":0,"service":"Database","text":"SELECT * FROM services WHERE 1=1 ORDER BY name ASC","timestamp":"2025-09-13T21:10:31.411Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-13T21:10:32.591Z","userAgent":"curl/8.5.0"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients ORDER BY name ASC","timestamp":"2025-09-13T21:10:32.608Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-13T21:10:33.807Z","userAgent":"curl/8.5.0"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":0,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-13T21:10:33.814Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-13T21:10:35.295Z","userAgent":"curl/8.5.0"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":0,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-13T21:10:35.318Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-13T21:10:36.802Z","userAgent":"curl/8.5.0"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":0,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-13T21:10:36.828Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-13T21:10:36.839Z"}
{"ip":"::1","level":"info","message":"POST /api/services","service":"Server","timestamp":"2025-09-13T21:10:44.601Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"POST /api/services","service":"Server","timestamp":"2025-09-13T21:10:52.163Z","userAgent":"curl/8.5.0"}
{"error":"column \"duration\" of relation \"services\" does not exist","level":"error","message":"Query error","params":["Instalação Elétrica","Instalação completa de sistemas elétricos","Eletricista",500,null,true],"service":"Database","text":"INSERT INTO services (name, description, category, price, duration, active) VALUES ($1, $2, $3, $4, $5, $6) RETURNING *","timestamp":"2025-09-13T21:10:52.179Z"}
{"level":"error","message":"Failed to create service","service":"ServicesRoutesReal","timestamp":"2025-09-13T21:10:52.181Z"}
{"ip":"::1","level":"info","message":"POST /api/services","service":"Server","timestamp":"2025-09-13T21:11:13.828Z","userAgent":"curl/8.5.0"}
{"error":"column \"duration\" of relation \"services\" does not exist","level":"error","message":"Query error","params":["Instalação Elétrica","Instalação completa de sistemas elétricos","Eletricista",500,"2 hours",true],"service":"Database","text":"INSERT INTO services (name, description, category, price, duration, active) VALUES ($1, $2, $3, $4, $5, $6) RETURNING *","timestamp":"2025-09-13T21:11:13.864Z"}
{"level":"error","message":"Failed to create service","service":"ServicesRoutesReal","timestamp":"2025-09-13T21:11:13.865Z"}
{"ip":"::1","level":"info","message":"POST /api/services","service":"Server","timestamp":"2025-09-13T21:11:54.772Z","userAgent":"curl/8.5.0"}
{"error":"column \"duration\" of relation \"services\" does not exist","level":"error","message":"Query error","params":["Instalação Elétrica","Instalação completa de sistemas elétricos","Eletricista",500,null,true],"service":"Database","text":"INSERT INTO services (name, description, category, price, duration, active) VALUES ($1, $2, $3, $4, $5, $6) RETURNING *","timestamp":"2025-09-13T21:11:54.856Z"}
{"level":"error","message":"Failed to create service","service":"ServicesRoutesReal","timestamp":"2025-09-13T21:11:54.857Z"}
{"level":"info","message":"Received shutdown signal, closing server...","service":"Server","timestamp":"2025-09-13T21:12:13.183Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-13T21:12:16.501Z"}
{"level":"info","message":"Starting server in data mode: real ...","service":"Server","timestamp":"2025-09-13T21:12:16.456Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-13T21:12:16.495Z"}
{"duration":151,"level":"debug","message":"Executed query in 151ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-13T21:12:16.655Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-13T21:12:16.656Z"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-13T21:12:16.672Z"}
{"duration":21,"level":"debug","message":"Executed query in 21ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-13T21:12:16.695Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-13T21:12:16.700Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-13T21:12:16.703Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-13T21:12:16.708Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-13T21:12:16.721Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-13T21:12:16.722Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all real DB-backed routes enabled.","service":"Server","timestamp":"2025-09-13T21:12:16.740Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-13T21:12:16.740Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-13T21:12:16.758Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-13T21:12:16.759Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-13T21:12:16.764Z"}
{"level":"info","message":"Received shutdown signal, closing server...","service":"Server","timestamp":"2025-09-13T21:12:29.787Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-13T21:12:32.473Z"}
{"level":"info","message":"Starting server in data mode: real ...","service":"Server","timestamp":"2025-09-13T21:12:32.441Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-13T21:12:32.471Z"}
{"duration":165,"level":"debug","message":"Executed query in 165ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-13T21:12:32.640Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-13T21:12:32.641Z"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-13T21:12:32.656Z"}
{"duration":23,"level":"debug","message":"Executed query in 23ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-13T21:12:32.681Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-13T21:12:32.684Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-13T21:12:32.687Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-13T21:12:32.692Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-13T21:12:32.702Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-13T21:12:32.704Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all real DB-backed routes enabled.","service":"Server","timestamp":"2025-09-13T21:12:32.716Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-13T21:12:32.719Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-13T21:12:32.726Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-13T21:12:32.727Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-13T21:12:32.728Z"}
{"ip":"::1","level":"info","message":"POST /api/services","service":"Server","timestamp":"2025-09-13T21:12:49.850Z","userAgent":"curl/8.5.0"}
{"duration":38,"level":"debug","message":"Executed query in 38ms","rowCount":1,"service":"Database","text":"INSERT INTO services (id, name, description, category, price, estimated_time, active, unit, materials) VALUES (gen_random_uuid(), $1, $2, $3, $4, $5, $6, $7, $8) RETURNING *","timestamp":"2025-09-13T21:12:49.902Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-13T21:13:00.629Z","userAgent":"curl/8.5.0"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":1,"service":"Database","text":"SELECT * FROM services WHERE 1=1 ORDER BY name ASC","timestamp":"2025-09-13T21:13:00.649Z"}
{"ip":"::1","level":"info","message":"GET /api/services/e1b8aa38-a8a2-49c5-b385-5cf0bca76319","service":"Server","timestamp":"2025-09-13T21:13:02.247Z","userAgent":"curl/8.5.0"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":1,"service":"Database","text":"SELECT * FROM services WHERE id = $1","timestamp":"2025-09-13T21:13:02.263Z"}
{"ip":"::1","level":"info","message":"PUT /api/services/e1b8aa38-a8a2-49c5-b385-5cf0bca76319","service":"Server","timestamp":"2025-09-13T21:13:03.672Z","userAgent":"curl/8.5.0"}
{"duration":18,"level":"debug","message":"Executed query in 18ms","rowCount":1,"service":"Database","text":"UPDATE services SET price = $1, estimated_time = $2, updated_at = CURRENT_TIMESTAMP WHERE id = $3 RETURNING *","timestamp":"2025-09-13T21:13:03.696Z"}
{"ip":"::1","level":"info","message":"DELETE /api/services/e1b8aa38-a8a2-49c5-b385-5cf0bca76319","service":"Server","timestamp":"2025-09-13T21:13:18.413Z","userAgent":"curl/8.5.0"}
{"duration":30,"level":"debug","message":"Executed query in 30ms","rowCount":1,"service":"Database","text":"DELETE FROM services WHERE id = $1","timestamp":"2025-09-13T21:13:18.445Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-13T21:13:41.535Z","userAgent":"curl/8.5.0"}
{"duration":22,"level":"debug","message":"Executed query in 22ms","rowCount":1,"service":"Database","text":"INSERT INTO clients (name, email, phone, address) VALUES ($1, $2, $3, $4) RETURNING *","timestamp":"2025-09-13T21:13:41.560Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-13T21:13:42.483Z","userAgent":"curl/8.5.0"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"SELECT * FROM clients ORDER BY name ASC","timestamp":"2025-09-13T21:13:42.493Z"}
{"ip":"::1","level":"info","message":"POST /api/quotations","service":"Server","timestamp":"2025-09-13T21:13:52.104Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-13T21:13:54.009Z","userAgent":"curl/8.5.0"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":0,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-13T21:13:54.016Z"}
{"ip":"::1","level":"info","message":"GET /api/stats","service":"Server","timestamp":"2025-09-13T21:13:54.344Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-13T21:13:54.410Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":77,"level":"debug","message":"Executed query in 77ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          COALESCE(category, 'sem_categoria') as category,\n          COUNT(*) as count,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_count\n        FROM emails \n        GROUP BY category\n        ORDER BY count DESC\n      ","timestamp":"2025-09-13T21:13:54.437Z"}
{"duration":244,"level":"debug","message":"Executed query in 244ms","rowCount":0,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-13T21:13:54.661Z"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-13T21:13:54.676Z"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-13T21:13:59.745Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats","service":"Server","timestamp":"2025-09-13T21:14:00.125Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          COALESCE(category, 'sem_categoria') as category,\n          COUNT(*) as count,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_count\n        FROM emails \n        GROUP BY category\n        ORDER BY count DESC\n      ","timestamp":"2025-09-13T21:14:00.136Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-13T21:14:00.178Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-13T21:14:00.195Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":19,"level":"debug","message":"Executed query in 19ms","rowCount":0,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-13T21:14:00.211Z"}
{"duration":18,"level":"debug","message":"Executed query in 18ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-13T21:14:00.225Z"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-13T21:14:00.230Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-13T21:14:03.812Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-13T21:14:03.838Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":40,"level":"debug","message":"Executed query in 40ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-13T21:14:03.856Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-13T21:14:03.892Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":69,"level":"debug","message":"Executed query in 69ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-13T21:14:03.928Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-13T21:14:03.950Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":56,"level":"debug","message":"Executed query in 56ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-13T21:14:03.986Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-13T21:14:03.994Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-13T21:14:04.010Z"}
{"duration":19,"level":"debug","message":"Executed query in 19ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-13T21:14:04.032Z"}
{"duration":32,"level":"debug","message":"Executed query in 32ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-13T21:14:04.066Z"}
{"ip":"::1","level":"info","message":"POST /api/quotations","service":"Server","timestamp":"2025-09-13T21:14:19.749Z","userAgent":"curl/8.5.0"}
{"error":"null value in column \"id\" of relation \"quotations\" violates not-null constraint","level":"error","message":"Query error","params":["João Silva","joao@email.com","11999999999",null,"[{\"name\":\"Instalação Elétrica\",\"price\":1500}]",1500,"draft",null,""],"service":"Database","text":"INSERT INTO quotations (client_name, client_email, client_phone, client_address, services, total, status, valid_until, notes) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9) RETURNING *","timestamp":"2025-09-13T21:14:19.768Z"}
{"level":"error","message":"Failed to create quotation","service":"QuotationsRoutesReal","timestamp":"2025-09-13T21:14:19.781Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-13T21:14:32.690Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":239,"level":"debug","message":"Executed query in 239ms","rowCount":0,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-13T21:14:32.942Z"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-13T21:14:32.960Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-13T21:22:49.930Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":154,"level":"debug","message":"Executed query in 154ms","rowCount":0,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-13T21:22:50.103Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-13T21:22:50.109Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-13T21:23:24.527Z"}
{"level":"info","message":"Starting server in data mode: real ...","service":"Server","timestamp":"2025-09-13T21:23:24.505Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-13T21:23:24.525Z"}
{"duration":113,"level":"debug","message":"Executed query in 113ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-13T21:23:24.642Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-13T21:23:24.643Z"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-13T21:23:24.656Z"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-13T21:23:24.675Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-13T21:23:24.676Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-13T21:23:24.678Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-13T21:23:24.681Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-13T21:23:24.692Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-13T21:23:24.695Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all real DB-backed routes enabled.","service":"Server","timestamp":"2025-09-13T21:23:24.707Z"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-13T21:24:22.766Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-13T21:25:47.739Z","userAgent":"curl/8.5.0"}
{"duration":67,"level":"debug","message":"Executed query in 67ms","rowCount":0,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-13T21:25:47.809Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-13T21:25:47.816Z"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-13T21:26:03.310Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-13T21:26:03.340Z","userAgent":"curl/8.5.0"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-13T21:26:03.345Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-13T21:27:17.574Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":116,"level":"debug","message":"Executed query in 116ms","rowCount":0,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-13T21:27:17.692Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-13T21:27:17.709Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"POST /api/emails","service":"Server","timestamp":"2025-09-13T21:27:32.822Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":1,"service":"Database","text":"INSERT INTO emails (gmail_id, subject, sender, date, body, category, processed)\n         VALUES ($1, $2, $3, $4, $5, $6, $7)\n         RETURNING *","timestamp":"2025-09-13T21:27:32.839Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"POST /api/emails","service":"Server","timestamp":"2025-09-13T21:27:34.586Z","userAgent":"bruno-runtime/2.10.1"}
{"error":"duplicate key value violates unique constraint \"emails_gmail_id_key\"","level":"error","message":"Query error","params":["unique-gmaivvvl-id-123","Assunto do Email","Nome do Remetente <remetente@email.com>","2025-09-12T13:35:49.795Z","Corpo do email...","Eletricista",false],"service":"Database","text":"INSERT INTO emails (gmail_id, subject, sender, date, body, category, processed)\n         VALUES ($1, $2, $3, $4, $5, $6, $7)\n         RETURNING *","timestamp":"2025-09-13T21:27:34.593Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-13T21:27:49.899Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":97,"level":"debug","message":"Executed query in 97ms","rowCount":1,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-13T21:27:49.999Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-13T21:27:50.011Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-13T21:28:05.874Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-13T21:28:05.881Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-13T21:28:29.269Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":0,"service":"Database","text":"SELECT * FROM services WHERE 1=1 ORDER BY name ASC","timestamp":"2025-09-13T21:28:29.290Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"POST /api/services","service":"Server","timestamp":"2025-09-13T21:28:39.695Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":1,"service":"Database","text":"INSERT INTO services (id, name, description, category, price, estimated_time, active, unit, materials) VALUES (gen_random_uuid(), $1, $2, $3, $4, $5, $6, $7, $8) RETURNING *","timestamp":"2025-09-13T21:28:39.712Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-13T21:28:43.398Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT * FROM services WHERE 1=1 ORDER BY name ASC","timestamp":"2025-09-13T21:28:43.401Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"POST /api/emails","service":"Server","timestamp":"2025-09-13T21:28:58.661Z","userAgent":"bruno-runtime/2.10.1"}
{"error":"duplicate key value violates unique constraint \"emails_gmail_id_key\"","level":"error","message":"Query error","params":["unique-gmaivvvl-id-123","Assunto do Email","Nome do Remetente <remetente@email.com>","2025-09-12T13:35:49.795Z","Corpo do email...","Eletricista",false],"service":"Database","text":"INSERT INTO emails (gmail_id, subject, sender, date, body, category, processed)\n         VALUES ($1, $2, $3, $4, $5, $6, $7)\n         RETURNING *","timestamp":"2025-09-13T21:28:58.731Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"POST /api/emails","service":"Server","timestamp":"2025-09-13T21:29:02.686Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":44,"level":"debug","message":"Executed query in 44ms","rowCount":1,"service":"Database","text":"INSERT INTO emails (gmail_id, subject, sender, date, body, category, processed)\n         VALUES ($1, $2, $3, $4, $5, $6, $7)\n         RETURNING *","timestamp":"2025-09-13T21:29:02.731Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"POST /api/emails","service":"Server","timestamp":"2025-09-13T21:29:05.531Z","userAgent":"bruno-runtime/2.10.1"}
{"error":"duplicate key value violates unique constraint \"emails_gmail_id_key\"","level":"error","message":"Query error","params":["unique-gmaixxxxvvvl-id-123","Assunto do Email","Nome do Remetente <remetente@email.com>","2025-09-12T13:35:49.795Z","Corpo do email...","Eletricista",false],"service":"Database","text":"INSERT INTO emails (gmail_id, subject, sender, date, body, category, processed)\n         VALUES ($1, $2, $3, $4, $5, $6, $7)\n         RETURNING *","timestamp":"2025-09-13T21:29:05.579Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"POST /api/emails","service":"Server","timestamp":"2025-09-13T21:29:09.113Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":73,"level":"debug","message":"Executed query in 73ms","rowCount":1,"service":"Database","text":"INSERT INTO emails (gmail_id, subject, sender, date, body, category, processed)\n         VALUES ($1, $2, $3, $4, $5, $6, $7)\n         RETURNING *","timestamp":"2025-09-13T21:29:09.188Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-13T21:29:13.136Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-13T21:29:13.148Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-13T21:29:13.156Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-13T21:29:29.377Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-13T21:29:29.380Z"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-13T21:29:29.394Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-13T21:29:31.596Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-13T21:29:31.602Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-13T21:29:32.865Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT * FROM services WHERE 1=1 ORDER BY name ASC","timestamp":"2025-09-13T21:29:32.869Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-13T21:29:34.593Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":0,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-13T21:29:34.598Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-13T21:29:34.613Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-13T21:29:34.631Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":1,"service":"Database","text":"SELECT * FROM clients ORDER BY name ASC","timestamp":"2025-09-13T21:29:34.637Z"}
{"duration":69,"level":"debug","message":"Executed query in 69ms","rowCount":1,"service":"Database","text":"SELECT * FROM services WHERE 1=1 ORDER BY name ASC","timestamp":"2025-09-13T21:29:34.702Z"}
{"ip":"::1","level":"info","message":"POST /api/quotations","service":"Server","timestamp":"2025-09-13T21:29:43.327Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"error":"null value in column \"id\" of relation \"quotations\" violates not-null constraint","level":"error","message":"Query error","params":["João Silva","joao@email.com","11999999999","Rua das Flores, 123","[{\"service_id\":0,\"quantity\":1,\"unit_price\":150}]",150,"draft","2025-10-13",""],"service":"Database","text":"INSERT INTO quotations (client_name, client_email, client_phone, client_address, services, total, status, valid_until, notes) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9) RETURNING *","timestamp":"2025-09-13T21:29:43.333Z"}
{"level":"error","message":"Failed to create quotation","service":"QuotationsRoutesReal","timestamp":"2025-09-13T21:29:43.336Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-13T21:29:43.382Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":0,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-13T21:29:43.395Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-13T21:29:43.436Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":0,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-13T21:29:43.447Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"POST /api/quotations","service":"Server","timestamp":"2025-09-13T21:29:58.374Z","userAgent":"bruno-runtime/2.10.1"}
{"error":"null value in column \"id\" of relation \"quotations\" violates not-null constraint","level":"error","message":"Query error","params":["João da Silva","joao@teste.com","123456789","Rua das Flores, 123 - Centro","[{\"service_id\":1,\"quantity\":2,\"unit_price\":150}]",300,"draft","2025-12-31","Cotação de teste"],"service":"Database","text":"INSERT INTO quotations (client_name, client_email, client_phone, client_address, services, total, status, valid_until, notes) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9) RETURNING *","timestamp":"2025-09-13T21:29:58.378Z"}
{"level":"error","message":"Failed to create quotation","service":"QuotationsRoutesReal","timestamp":"2025-09-13T21:29:58.379Z"}
{"level":"info","message":"Received shutdown signal, closing server...","service":"Server","timestamp":"2025-09-13T21:31:18.138Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-13T21:31:24.765Z"}
{"level":"info","message":"Starting server in data mode: real ...","service":"Server","timestamp":"2025-09-13T21:31:24.712Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-13T21:31:24.764Z"}
{"duration":190,"level":"debug","message":"Executed query in 190ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-13T21:31:24.958Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-13T21:31:24.962Z"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-13T21:31:24.981Z"}
{"duration":27,"level":"debug","message":"Executed query in 27ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-13T21:31:25.010Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-13T21:31:25.012Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-13T21:31:25.013Z"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-13T21:31:25.027Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-13T21:31:25.033Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-13T21:31:25.042Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all real DB-backed routes enabled.","service":"Server","timestamp":"2025-09-13T21:31:25.061Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-13T21:31:25.062Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-13T21:31:25.080Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-13T21:31:25.081Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-13T21:31:25.081Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-13T21:31:28.776Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":43,"level":"debug","message":"Executed query in 43ms","rowCount":1,"service":"Database","text":"SELECT * FROM clients ORDER BY name ASC","timestamp":"2025-09-13T21:31:28.858Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-13T21:31:33.194Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":0,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-13T21:31:33.219Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"POST /api/appointments","service":"Server","timestamp":"2025-09-13T21:31:37.320Z","userAgent":"bruno-runtime/2.10.1"}
{"error":"column \"service_id\" of relation \"appointments\" does not exist","level":"error","message":"Query error","params":["2025-01-15","14:00",60,"Teste de agendamento","scheduled",1,1,""],"service":"Database","text":"INSERT INTO appointments (date, time, duration, notes, status, client_id, service_id, address) VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING *","timestamp":"2025-09-13T21:31:37.371Z"}
{"level":"error","message":"Failed to create appointment","service":"AppointmentsRoutesReal","timestamp":"2025-09-13T21:31:37.377Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-13T21:31:59.132Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":128,"level":"debug","message":"Executed query in 128ms","rowCount":0,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-13T21:31:59.273Z"}
{"ip":"::1","level":"info","message":"POST /api/quotations","service":"Server","timestamp":"2025-09-13T21:31:59.336Z","userAgent":"curl/8.5.0"}
{"duration":64,"level":"debug","message":"Executed query in 64ms","rowCount":1,"service":"Database","text":"INSERT INTO quotations (id, client_name, client_email, client_phone, client_address, services, subtotal, discount, total, status, valid_until, notes) VALUES (gen_random_uuid(), $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING *","timestamp":"2025-09-13T21:31:59.415Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"POST /api/quotations","service":"Server","timestamp":"2025-09-13T21:32:05.462Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":24,"level":"debug","message":"Executed query in 24ms","rowCount":1,"service":"Database","text":"INSERT INTO quotations (id, client_name, client_email, client_phone, client_address, services, subtotal, discount, total, status, valid_until, notes) VALUES (gen_random_uuid(), $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING *","timestamp":"2025-09-13T21:32:05.492Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-13T21:32:10.459Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":2,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-13T21:32:10.478Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-13T21:32:14.629Z","userAgent":"curl/8.5.0"}
{"duration":38,"level":"debug","message":"Executed query in 38ms","rowCount":2,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-13T21:32:14.670Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"POST /api/appointments","service":"Server","timestamp":"2025-09-13T21:32:20.487Z","userAgent":"bruno-runtime/2.10.1"}
{"error":"column \"service_id\" of relation \"appointments\" does not exist","level":"error","message":"Query error","params":["2025-01-15","14:00",60,"Teste de agendamento","scheduled",1,1,""],"service":"Database","text":"INSERT INTO appointments (date, time, duration, notes, status, client_id, service_id, address) VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING *","timestamp":"2025-09-13T21:32:20.494Z"}
{"level":"error","message":"Failed to create appointment","service":"AppointmentsRoutesReal","timestamp":"2025-09-13T21:32:20.499Z"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-13T21:33:05.759Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-13T21:33:06.317Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-13T21:33:06.406Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-13T21:33:06.503Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-13T21:33:06.530Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":413,"level":"debug","message":"Executed query in 413ms","rowCount":2,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-13T21:33:06.731Z"}
{"duration":364,"level":"debug","message":"Executed query in 364ms","rowCount":1,"service":"Database","text":"SELECT * FROM clients ORDER BY name ASC","timestamp":"2025-09-13T21:33:06.896Z"}
{"duration":493,"level":"debug","message":"Executed query in 493ms","rowCount":1,"service":"Database","text":"SELECT * FROM services WHERE 1=1 ORDER BY name ASC","timestamp":"2025-09-13T21:33:06.916Z"}
{"duration":426,"level":"debug","message":"Executed query in 426ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-13T21:33:06.934Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-13T21:33:11.020Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-13T21:33:11.025Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":19,"level":"debug","message":"Executed query in 19ms","rowCount":1,"service":"Database","text":"SELECT * FROM services WHERE 1=1 ORDER BY name ASC","timestamp":"2025-09-13T21:33:11.041Z"}
{"duration":22,"level":"debug","message":"Executed query in 22ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-13T21:33:11.059Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-13T21:33:14.379Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":0,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-13T21:33:14.391Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"POST /api/appointments","service":"Server","timestamp":"2025-09-13T21:33:29.459Z","userAgent":"bruno-runtime/2.10.1"}
{"error":"column \"service_id\" of relation \"appointments\" does not exist","level":"error","message":"Query error","params":["2025-01-15","14:00",60,"Teste de agendamento","scheduled",1,1,""],"service":"Database","text":"INSERT INTO appointments (date, time, duration, notes, status, client_id, service_id, address) VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING *","timestamp":"2025-09-13T21:33:29.471Z"}
{"level":"error","message":"Failed to create appointment","service":"AppointmentsRoutesReal","timestamp":"2025-09-13T21:33:29.478Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"POST /api/appointments","service":"Server","timestamp":"2025-09-13T21:34:21.581Z","userAgent":"bruno-runtime/2.10.1"}
{"error":"column \"service_id\" of relation \"appointments\" does not exist","level":"error","message":"Query error","params":["2025-01-15","14:00",60,"Teste de agendamento","scheduled",1,1,""],"service":"Database","text":"INSERT INTO appointments (date, time, duration, notes, status, client_id, service_id, address) VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING *","timestamp":"2025-09-13T21:34:21.900Z"}
{"level":"error","message":"Failed to create appointment","service":"AppointmentsRoutesReal","timestamp":"2025-09-13T21:34:21.933Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-13T21:34:37.533Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":107,"level":"debug","message":"Executed query in 107ms","rowCount":0,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-13T21:34:37.652Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-13T21:34:42.007Z","userAgent":"bruno-runtime/2.10.1"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"POST /api/appointments","service":"Server","timestamp":"2025-09-13T21:34:46.738Z","userAgent":"bruno-runtime/2.10.1"}
{"error":"column \"service_id\" of relation \"appointments\" does not exist","level":"error","message":"Query error","params":["2025-01-15","14:00",60,"Teste de agendamento","scheduled",1,1,""],"service":"Database","text":"INSERT INTO appointments (date, time, duration, notes, status, client_id, service_id, address) VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING *","timestamp":"2025-09-13T21:34:46.791Z"}
{"level":"error","message":"Failed to create appointment","service":"AppointmentsRoutesReal","timestamp":"2025-09-13T21:34:46.796Z"}
{"level":"info","message":"Received shutdown signal, closing server...","service":"Server","timestamp":"2025-09-13T21:34:58.817Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-13T21:35:01.900Z"}
{"level":"info","message":"Starting server in data mode: real ...","service":"Server","timestamp":"2025-09-13T21:35:01.857Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-13T21:35:01.898Z"}
{"duration":174,"level":"debug","message":"Executed query in 174ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-13T21:35:02.078Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-13T21:35:02.084Z"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-13T21:35:02.101Z"}
{"duration":21,"level":"debug","message":"Executed query in 21ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-13T21:35:02.123Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-13T21:35:02.125Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-13T21:35:02.132Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-13T21:35:02.139Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-13T21:35:02.153Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-13T21:35:02.154Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all real DB-backed routes enabled.","service":"Server","timestamp":"2025-09-13T21:35:02.173Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-13T21:35:02.174Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-13T21:35:02.201Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-13T21:35:02.202Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-13T21:35:02.202Z"}
{"ip":"::1","level":"info","message":"POST /api/appointments","service":"Server","timestamp":"2025-09-13T21:35:23.324Z","userAgent":"curl/8.5.0"}
{"duration":24,"level":"debug","message":"Executed query in 24ms","rowCount":1,"service":"Database","text":"INSERT INTO appointments (id, client_id, client_name, service_ids, service_names, date, time, duration, address, notes, status) VALUES (gen_random_uuid(), $1, $2, $3, $4, $5, $6, $7, $8, $9, $10) RETURNING *","timestamp":"2025-09-13T21:35:23.359Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-13T21:35:32.811Z","userAgent":"curl/8.5.0"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":1,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-13T21:35:32.822Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"POST /api/appointments","service":"Server","timestamp":"2025-09-13T21:36:16.894Z","userAgent":"bruno-runtime/2.10.1"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"POST /api/appointments","service":"Server","timestamp":"2025-09-13T21:36:18.376Z","userAgent":"bruno-runtime/2.10.1"}
{"ip":"::1","level":"info","message":"POST /api/appointments","service":"Server","timestamp":"2025-09-13T21:36:38.535Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":120,"level":"debug","message":"Executed query in 120ms","rowCount":1,"service":"Database","text":"INSERT INTO appointments (id, client_id, client_name, service_ids, service_names, date, time, duration, address, notes, status) VALUES (gen_random_uuid(), $1, $2, $3, $4, $5, $6, $7, $8, $9, $10) RETURNING *","timestamp":"2025-09-13T21:36:38.663Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-13T21:36:38.695Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":2,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-13T21:36:38.709Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-13T21:36:38.741Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","rowCount":2,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-13T21:36:38.768Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-13T21:36:38.914Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":10,"level":"debug","message":"Executed query in 10ms","rowCount":1,"service":"Database","text":"SELECT * FROM clients ORDER BY name ASC","timestamp":"2025-09-13T21:36:38.940Z"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"POST /api/appointments","service":"Server","timestamp":"2025-09-13T21:36:51.785Z","userAgent":"bruno-runtime/2.10.1"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-13T21:36:55.639Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":2,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-13T21:36:55.655Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-13T21:37:14.079Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-13T21:37:14.101Z"}
{"duration":25,"level":"debug","message":"Executed query in 25ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-13T21:37:14.138Z"}
{"duration":30,"level":"debug","message":"Executed query in 30ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-13T21:37:14.173Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-13T21:37:14.207Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-13T21:37:14.218Z"}
{"duration":21,"level":"debug","message":"Executed query in 21ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-13T21:37:14.241Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-13T21:37:14.253Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":75,"level":"debug","message":"Executed query in 75ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-13T21:37:14.317Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-13T21:37:14.391Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-13T21:37:14.422Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-13T21:37:52.886Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":82,"level":"debug","message":"Executed query in 82ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-13T21:37:52.980Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-13T21:37:52.983Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-13T21:38:02.394Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats","service":"Server","timestamp":"2025-09-13T21:38:02.435Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":55,"level":"debug","message":"Executed query in 55ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-13T21:38:02.456Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-13T21:38:02.473Z"}
{"duration":202,"level":"debug","message":"Executed query in 202ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COALESCE(category, 'sem_categoria') as category,\n          COUNT(*) as count,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_count\n        FROM emails \n        GROUP BY category\n        ORDER BY count DESC\n      ","timestamp":"2025-09-13T21:38:02.640Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-13T21:38:45.908Z","userAgent":"curl/8.5.0"}
{"duration":130,"level":"debug","message":"Executed query in 130ms","rowCount":1,"service":"Database","text":"SELECT * FROM clients ORDER BY name ASC","timestamp":"2025-09-13T21:38:46.041Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-13T21:38:54.154Z","userAgent":"curl/8.5.0"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":2,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-13T21:38:54.168Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-13T21:38:55.570Z","userAgent":"curl/8.5.0"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":2,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-13T21:38:55.582Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-13T21:39:06.083Z","userAgent":"curl/8.5.0"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","rowCount":1,"service":"Database","text":"SELECT * FROM clients ORDER BY name ASC","timestamp":"2025-09-13T21:39:06.096Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-13T21:39:16.682Z","userAgent":"curl/8.5.0"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT * FROM clients ORDER BY name ASC","timestamp":"2025-09-13T21:39:16.689Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-13T21:39:25.566Z","userAgent":"curl/8.5.0"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":2,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-13T21:39:25.575Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-13T21:39:34.314Z","userAgent":"curl/8.5.0"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":2,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-13T21:39:34.323Z"}
{"ip":"::1","level":"info","message":"GET /api/stats","service":"Server","timestamp":"2025-09-13T21:39:59.230Z","userAgent":"curl/8.5.0"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COALESCE(category, 'sem_categoria') as category,\n          COUNT(*) as count,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_count\n        FROM emails \n        GROUP BY category\n        ORDER BY count DESC\n      ","timestamp":"2025-09-13T21:39:59.239Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-13T21:40:09.198Z","userAgent":"curl/8.5.0"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-13T21:40:09.207Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-13T21:40:09.210Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-13T21:40:09.224Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-13T21:40:09.227Z"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-13T21:40:09.240Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-13T21:40:09.243Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-13T21:40:09.252Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-13T21:40:23.208Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-13T21:40:25.047Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-13T21:40:28.218Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-13T21:41:19.137Z","userAgent":"curl/8.5.0"}
{"duration":50,"level":"debug","message":"Executed query in 50ms","rowCount":1,"service":"Database","text":"SELECT * FROM services WHERE 1=1 ORDER BY name ASC","timestamp":"2025-09-13T21:41:19.189Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-13T21:41:29.809Z","userAgent":"curl/8.5.0"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT * FROM services WHERE 1=1 ORDER BY name ASC","timestamp":"2025-09-13T21:41:29.813Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-13T21:41:49.059Z","userAgent":"curl/8.5.0"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-13T21:41:49.066Z"}
{"duration":1,"level":"debug","message":"Executed query in 1ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-13T21:41:49.068Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-13T21:44:20.245Z","userAgent":"curl/8.5.0"}
{"duration":85,"level":"debug","message":"Executed query in 85ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-13T21:44:20.337Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-13T21:44:20.352Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-13T21:44:20.365Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-13T21:44:20.370Z"}
{"duration":10,"level":"debug","message":"Executed query in 10ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-13T21:44:20.381Z"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-13T21:44:20.399Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-13T21:44:20.415Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-13T21:44:34.263Z","userAgent":"curl/8.5.0"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":2,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-13T21:44:34.267Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-13T21:45:29.989Z","userAgent":"curl/8.5.0"}
{"duration":80,"level":"debug","message":"Executed query in 80ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-13T21:45:30.070Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-13T21:45:30.077Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-13T21:45:30.092Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-13T21:45:30.099Z"}
{"duration":22,"level":"debug","message":"Executed query in 22ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-13T21:45:30.123Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-13T21:45:30.132Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-13T21:45:30.139Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-13T21:46:22.559Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-13T21:46:22.647Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-13T21:46:22.707Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":293,"level":"debug","message":"Executed query in 293ms","rowCount":2,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-13T21:46:22.855Z"}
{"duration":274,"level":"debug","message":"Executed query in 274ms","rowCount":1,"service":"Database","text":"SELECT * FROM clients ORDER BY name ASC","timestamp":"2025-09-13T21:46:22.925Z"}
{"duration":251,"level":"debug","message":"Executed query in 251ms","rowCount":1,"service":"Database","text":"SELECT * FROM services WHERE 1=1 ORDER BY name ASC","timestamp":"2025-09-13T21:46:22.960Z"}
{"ip":"::1","level":"info","message":"GET /api/stats","service":"Server","timestamp":"2025-09-13T21:46:27.385Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-13T21:46:27.389Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COALESCE(category, 'sem_categoria') as category,\n          COUNT(*) as count,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_count\n        FROM emails \n        GROUP BY category\n        ORDER BY count DESC\n      ","timestamp":"2025-09-13T21:46:27.393Z"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-13T21:46:27.408Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-13T21:46:27.416Z"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-13T21:49:34.630Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats","service":"Server","timestamp":"2025-09-13T21:49:35.199Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-13T21:49:35.266Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-13T21:49:35.393Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":299,"level":"debug","message":"Executed query in 299ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COALESCE(category, 'sem_categoria') as category,\n          COUNT(*) as count,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_count\n        FROM emails \n        GROUP BY category\n        ORDER BY count DESC\n      ","timestamp":"2025-09-13T21:49:35.500Z"}
{"duration":275,"level":"debug","message":"Executed query in 275ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-13T21:49:35.557Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-13T21:49:35.562Z"}
{"duration":190,"level":"debug","message":"Executed query in 190ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-13T21:49:35.602Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-13T21:49:51.568Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-13T21:49:51.577Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":24,"level":"debug","message":"Executed query in 24ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-13T21:49:51.596Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-13T21:49:51.606Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":52,"level":"debug","message":"Executed query in 52ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-13T21:49:51.651Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-13T21:49:51.675Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":63,"level":"debug","message":"Executed query in 63ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-13T21:49:51.719Z"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-13T21:49:51.740Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-13T21:49:51.749Z"}
{"duration":25,"level":"debug","message":"Executed query in 25ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-13T21:49:51.781Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-13T21:49:51.799Z"}
{"ip":"::1","level":"info","message":"GET /api/stats","service":"Server","timestamp":"2025-09-13T21:50:21.839Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-13T21:50:21.875Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":214,"level":"debug","message":"Executed query in 214ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COALESCE(category, 'sem_categoria') as category,\n          COUNT(*) as count,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_count\n        FROM emails \n        GROUP BY category\n        ORDER BY count DESC\n      ","timestamp":"2025-09-13T21:50:22.060Z"}
{"duration":253,"level":"debug","message":"Executed query in 253ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-13T21:50:22.135Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-13T21:50:22.150Z"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-13T21:50:51.743Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats","service":"Server","timestamp":"2025-09-13T21:50:51.859Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":19,"level":"debug","message":"Executed query in 19ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COALESCE(category, 'sem_categoria') as category,\n          COUNT(*) as count,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_count\n        FROM emails \n        GROUP BY category\n        ORDER BY count DESC\n      ","timestamp":"2025-09-13T21:50:51.883Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-13T21:50:51.911Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":18,"level":"debug","message":"Executed query in 18ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-13T21:50:51.931Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-13T21:50:51.937Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":29,"level":"debug","message":"Executed query in 29ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-13T21:50:51.962Z"}
{"duration":23,"level":"debug","message":"Executed query in 23ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-13T21:50:51.983Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-13T23:02:19.230Z"}
{"level":"info","message":"Starting server in data mode: real ...","service":"Server","timestamp":"2025-09-13T23:02:19.211Z"}
{"error":"connect ECONNREFUSED ::1:5432","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-13T23:02:19.291Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-13T23:02:19.293Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-13T23:02:19.229Z"}
{"error":"connect ECONNREFUSED ::1:5432","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-13T23:02:19.302Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-13T23:02:19.304Z"}
{"level":"error","message":"Failed to initialize database in real mode","service":"Server","timestamp":"2025-09-13T23:02:19.305Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-13T23:07:38.806Z"}
{"level":"info","message":"Starting server in data mode: real ...","service":"Server","timestamp":"2025-09-13T23:07:38.795Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-13T23:07:38.805Z"}
{"duration":220,"level":"debug","message":"Executed query in 220ms","rowCount":0,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-13T23:07:39.027Z"}
{"duration":66,"level":"debug","message":"Executed query in 66ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-13T23:07:39.094Z"}
{"duration":50,"level":"debug","message":"Executed query in 50ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS categories (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) UNIQUE NOT NULL,\n      description TEXT,\n      keywords JSONB NOT NULL DEFAULT '[]',\n      patterns JSONB NOT NULL DEFAULT '[]',\n      domains JSONB NOT NULL DEFAULT '[]',\n      color VARCHAR(7) NOT NULL DEFAULT '#3B82F6',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-13T23:07:39.144Z"}
{"duration":30,"level":"debug","message":"Executed query in 30ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS services (\n      id VARCHAR(255) PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      description TEXT NOT NULL,\n      category VARCHAR(100) NOT NULL,\n      price DECIMAL(10,2) NOT NULL DEFAULT 0,\n      unit VARCHAR(50) NOT NULL DEFAULT 'hour',\n      estimated_time VARCHAR(100),\n      materials JSONB DEFAULT '[]',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-13T23:07:39.174Z"}
{"duration":29,"level":"debug","message":"Executed query in 29ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS clients (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      email VARCHAR(255) NOT NULL,\n      phone VARCHAR(50),\n      address TEXT,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-13T23:07:39.203Z"}
{"duration":34,"level":"debug","message":"Executed query in 34ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS quotations (\n      id VARCHAR(255) PRIMARY KEY,\n      client_email VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      client_phone VARCHAR(50),\n      client_address TEXT,\n      services JSONB NOT NULL DEFAULT '[]',\n      subtotal DECIMAL(10,2) NOT NULL DEFAULT 0,\n      discount DECIMAL(10,2) NOT NULL DEFAULT 0,\n      total DECIMAL(10,2) NOT NULL DEFAULT 0,\n      status VARCHAR(50) NOT NULL DEFAULT 'draft',\n      valid_until DATE,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-13T23:07:39.238Z"}
{"duration":37,"level":"debug","message":"Executed query in 37ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS appointments (\n      id VARCHAR(255) PRIMARY KEY,\n      client_id VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      service_ids JSONB DEFAULT '[]',\n      service_names JSONB DEFAULT '[]',\n      date DATE NOT NULL,\n      time TIME NOT NULL,\n      duration INTEGER DEFAULT 120,\n      address TEXT,\n      notes TEXT,\n      status VARCHAR(50) NOT NULL DEFAULT 'scheduled',\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-13T23:07:39.275Z"}
{"duration":211,"level":"debug","message":"Executed query in 211ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-13T23:07:39.488Z"}
{"duration":40,"level":"debug","message":"Executed query in 40ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-13T23:07:39.531Z"}
{"level":"info","message":"Migrations completed","service":"DBMigrations","timestamp":"2025-09-13T23:07:39.531Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-13T23:07:39.532Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-13T23:07:39.537Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-13T23:07:39.539Z"}
{"level":"info","message":"Database is empty, seeding default data...","service":"DataSeeder","timestamp":"2025-09-13T23:07:39.540Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"INSERT INTO categories (name, description, color) \n         VALUES ($1, $2, $3)","timestamp":"2025-09-13T23:07:39.549Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"INSERT INTO categories (name, description, color) \n         VALUES ($1, $2, $3)","timestamp":"2025-09-13T23:07:39.555Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"INSERT INTO categories (name, description, color) \n         VALUES ($1, $2, $3)","timestamp":"2025-09-13T23:07:39.561Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"INSERT INTO categories (name, description, color) \n         VALUES ($1, $2, $3)","timestamp":"2025-09-13T23:07:39.567Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"INSERT INTO categories (name, description, color) \n         VALUES ($1, $2, $3)","timestamp":"2025-09-13T23:07:39.574Z"}
{"level":"info","message":"Seeded 5 default categories","service":"DataSeeder","timestamp":"2025-09-13T23:07:39.574Z"}
{"error":"column \"duration\" of relation \"services\" does not exist","level":"error","message":"Query error","params":["Instalação Elétrica","Instalação completa de sistema elétrico residencial","Eletricista",80,"4-8 horas"],"service":"Database","text":"INSERT INTO services (name, description, category, price, duration) \n         VALUES ($1, $2, $3, $4, $5)","timestamp":"2025-09-13T23:07:39.579Z"}
{"level":"error","message":"Failed to seed default data:","service":"DataSeeder","timestamp":"2025-09-13T23:07:39.579Z"}
{"level":"error","message":"Failed to initialize database in real mode","service":"Server","timestamp":"2025-09-13T23:07:39.580Z"}
{"level":"info","message":"🚀 Starting Categories API Server...","service":"CategoryServer","timestamp":"2025-09-14T10:38:03.485Z"}
{"level":"info","message":"✅ Database connected","service":"CategoryServer","timestamp":"2025-09-14T10:38:03.507Z"}
{"level":"info","message":"🎉 Categories API Server running on http://localhost:3001","service":"CategoryServer","timestamp":"2025-09-14T10:38:03.527Z"}
{"level":"info","message":"📋 Available endpoints:","service":"CategoryServer","timestamp":"2025-09-14T10:38:03.533Z"}
{"level":"info","message":"   GET    /api/health","service":"CategoryServer","timestamp":"2025-09-14T10:38:03.534Z"}
{"level":"info","message":"   GET    /api/categories","service":"CategoryServer","timestamp":"2025-09-14T10:38:03.535Z"}
{"level":"info","message":"   GET    /api/categories/:id","service":"CategoryServer","timestamp":"2025-09-14T10:38:03.536Z"}
{"level":"info","message":"   POST   /api/categories","service":"CategoryServer","timestamp":"2025-09-14T10:38:03.536Z"}
{"level":"info","message":"   PUT    /api/categories/:id","service":"CategoryServer","timestamp":"2025-09-14T10:38:03.537Z"}
{"level":"info","message":"   DELETE /api/categories/:id","service":"CategoryServer","timestamp":"2025-09-14T10:38:03.537Z"}
{"level":"info","message":"📋 Listing categories","service":"CategoryServer","timestamp":"2025-09-14T10:38:15.662Z"}
{"error":"connect ECONNREFUSED 127.0.0.1:5432","level":"error","message":"Query error","params":[],"service":"Database","text":"\n          SELECT \n            id, name, description, keywords, patterns, domains, \n            color, active, created_at, updated_at \n          FROM categories \n          WHERE 1=1\n         ORDER BY name ASC","timestamp":"2025-09-14T10:38:15.690Z"}
{"level":"error","message":"❌ Error listing categories:","service":"CategoryServer","timestamp":"2025-09-14T10:38:15.691Z"}
{"level":"info","message":"🔍 Getting category 1","service":"CategoryServer","timestamp":"2025-09-14T10:38:15.717Z"}
{"error":"connect ECONNREFUSED 127.0.0.1:5432","level":"error","message":"Query error","params":[1],"service":"Database","text":"SELECT \n            id, name, description, keywords, patterns, domains, \n            color, active, created_at, updated_at \n          FROM categories \n          WHERE id = $1","timestamp":"2025-09-14T10:38:15.725Z"}
{"level":"error","message":"❌ Error getting category:","service":"CategoryServer","timestamp":"2025-09-14T10:38:15.725Z"}
{"level":"info","message":"🔍 Getting category 1","service":"CategoryServer","timestamp":"2025-09-14T10:41:01.403Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","params":[1],"service":"Database","text":"SELECT \n            id, name, description, keywords, patterns, domains, \n            color, active, created_at, updated_at \n          FROM categories \n          WHERE id = $1","timestamp":"2025-09-14T10:41:01.443Z"}
{"level":"error","message":"❌ Error getting category:","service":"CategoryServer","timestamp":"2025-09-14T10:41:01.444Z"}
{"level":"info","message":"➕ Creating category: Teste API","service":"CategoryServer","timestamp":"2025-09-14T10:41:01.492Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","params":["Teste API","Teste de API","[]","[]","[]","#FF0000",true],"service":"Database","text":"INSERT INTO categories (name, description, keywords, patterns, domains, color, active) \n           VALUES ($1, $2, $3, $4, $5, $6, $7) \n           RETURNING id, name, description, keywords, patterns, domains, color, active, created_at, updated_at","timestamp":"2025-09-14T10:41:01.507Z"}
{"level":"error","message":"❌ Error creating category:","service":"CategoryServer","timestamp":"2025-09-14T10:41:01.508Z"}
{"level":"info","message":"🚀 Iniciando Postal Services Complete Server...","service":"CompleteServer","timestamp":"2025-09-14T10:48:41.119Z"}
{"level":"info","message":"✅ Database connected","service":"CompleteServer","timestamp":"2025-09-14T10:48:41.197Z"}
{"level":"info","message":"🎉 Postal Services Complete Server running on port 3001","service":"CompleteServer","timestamp":"2025-09-14T10:48:41.304Z"}
{"level":"info","message":"📍 Health check: http://localhost:3001/health","service":"CompleteServer","timestamp":"2025-09-14T10:48:41.307Z"}
{"level":"info","message":"📍 API base URL: http://localhost:3001/api","service":"CompleteServer","timestamp":"2025-09-14T10:48:41.310Z"}
{"level":"info","message":"📋 Available APIs: emails, categories, services, clients, appointments, quotations, stats","service":"CompleteServer","timestamp":"2025-09-14T10:48:41.319Z"}
{"level":"info","message":"📧 Listando emails","service":"CompleteServer","timestamp":"2025-09-14T10:49:18.461Z"}
{"error":"relation \"emails\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n          SELECT id, subject, sender, recipient, body, status, created_at, updated_at \n          FROM emails \n          ORDER BY created_at DESC \n          LIMIT 50\n        ","timestamp":"2025-09-14T10:49:18.849Z"}
{"code":"42P01","file":"parse_relation.c","length":106,"level":"error","line":"1392","message":"Erro ao listar emails: relation \"emails\" does not exist","name":"error","position":"104","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"emails\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:84:24)","timestamp":"2025-09-14T10:49:18.929Z"}
{"level":"info","message":"📧 Criando email: Teste","service":"CompleteServer","timestamp":"2025-09-14T10:49:19.271Z"}
{"error":"relation \"emails\" does not exist","level":"error","message":"Query error","params":["Teste","test@test.com","client@test.com","Email de teste","pending"],"service":"Database","text":"\n          INSERT INTO emails (subject, sender, recipient, body, status, created_at, updated_at)\n          VALUES ($1, $2, $3, $4, $5, NOW(), NOW())\n          RETURNING *\n        ","timestamp":"2025-09-14T10:49:19.379Z"}
{"code":"42P01","file":"parse_relation.c","length":105,"level":"error","line":"1392","message":"Erro ao criar email: relation \"emails\" does not exist","name":"error","position":"24","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"emails\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:139:24)","timestamp":"2025-09-14T10:49:19.452Z"}
{"level":"info","message":"📋 Listando categorias","service":"CompleteServer","timestamp":"2025-09-14T10:49:19.606Z"}
{"error":"relation \"categories\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n          SELECT id, name, description, color, active, created_at, updated_at \n          FROM categories \n          WHERE active = true \n          ORDER BY name ASC\n        ","timestamp":"2025-09-14T10:49:19.714Z"}
{"code":"42P01","file":"parse_relation.c","length":109,"level":"error","line":"1392","message":"Erro ao listar categorias: relation \"categories\" does not exist","name":"error","position":"96","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"categories\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:165:24)","timestamp":"2025-09-14T10:49:19.749Z"}
{"level":"info","message":"📋 Criando categoria: Teste API","service":"CompleteServer","timestamp":"2025-09-14T10:49:19.912Z"}
{"error":"relation \"categories\" does not exist","level":"error","message":"Query error","params":["Teste API","Categoria de teste","#FF0000"],"service":"Database","text":"\n          INSERT INTO categories (name, description, color, active, created_at, updated_at)\n          VALUES ($1, $2, $3, true, NOW(), NOW())\n          RETURNING *\n        ","timestamp":"2025-09-14T10:49:20.004Z"}
{"code":"42P01","file":"parse_relation.c","length":109,"level":"error","line":"1392","message":"Erro ao criar categoria: relation \"categories\" does not exist","name":"error","position":"24","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"categories\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:220:24)","timestamp":"2025-09-14T10:49:20.025Z"}
{"level":"info","message":"📋 Buscando categoria 1","service":"CompleteServer","timestamp":"2025-09-14T10:49:20.143Z"}
{"error":"relation \"categories\" does not exist","level":"error","message":"Query error","params":["1"],"service":"Database","text":"\n          SELECT * FROM categories WHERE id = $1\n        ","timestamp":"2025-09-14T10:49:20.228Z"}
{"code":"42P01","file":"parse_relation.c","length":109,"level":"error","line":"1392","message":"Erro ao buscar categoria: relation \"categories\" does not exist","name":"error","position":"26","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"categories\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:191:24)","timestamp":"2025-09-14T10:49:20.241Z"}
{"level":"info","message":"🔧 Listando serviços","service":"CompleteServer","timestamp":"2025-09-14T10:49:20.362Z"}
{"error":"relation \"services\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n          SELECT s.id, s.name, s.description, s.price, s.duration, s.active,\n                 c.name as category_name, c.color as category_color,\n                 s.created_at, s.updated_at\n          FROM services s\n          LEFT JOIN categories c ON s.category_id = c.id\n          WHERE s.active = true\n          ORDER BY s.name ASC\n        ","timestamp":"2025-09-14T10:49:20.458Z"}
{"code":"42P01","file":"parse_relation.c","length":108,"level":"error","line":"1392","message":"Erro ao listar serviços: relation \"services\" does not exist","name":"error","position":"207","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"services\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:316:24)","timestamp":"2025-09-14T10:49:20.477Z"}
{"level":"info","message":"🔧 Criando serviço: Serviço Teste","service":"CompleteServer","timestamp":"2025-09-14T10:49:20.605Z"}
{"error":"relation \"services\" does not exist","level":"error","message":"Query error","params":["Serviço Teste","Descrição do serviço",100,60,1],"service":"Database","text":"\n          INSERT INTO services (name, description, price, duration, category_id, active, created_at, updated_at)\n          VALUES ($1, $2, $3, $4, $5, true, NOW(), NOW())\n          RETURNING *\n        ","timestamp":"2025-09-14T10:49:20.731Z"}
{"code":"42P01","file":"parse_relation.c","length":107,"level":"error","line":"1392","message":"Erro ao criar serviço: relation \"services\" does not exist","name":"error","position":"24","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"services\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:377:24)","timestamp":"2025-09-14T10:49:20.760Z"}
{"level":"info","message":"👥 Listando clientes","service":"CompleteServer","timestamp":"2025-09-14T10:49:20.941Z"}
{"error":"relation \"clients\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n          SELECT id, name, email, phone, address, created_at, updated_at\n          FROM clients\n          ORDER BY name ASC\n        ","timestamp":"2025-09-14T10:49:21.040Z"}
{"code":"42P01","file":"parse_relation.c","length":106,"level":"error","line":"1392","message":"Erro ao listar clientes: relation \"clients\" does not exist","name":"error","position":"90","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:403:24)","timestamp":"2025-09-14T10:49:21.053Z"}
{"level":"info","message":"👥 Criando cliente: Cliente Teste","service":"CompleteServer","timestamp":"2025-09-14T10:49:21.181Z"}
{"error":"relation \"clients\" does not exist","level":"error","message":"Query error","params":["Cliente Teste","cliente@test.com","11999999999","Rua Teste, 123"],"service":"Database","text":"\n          INSERT INTO clients (name, email, phone, address, created_at, updated_at)\n          VALUES ($1, $2, $3, $4, NOW(), NOW())\n          RETURNING *\n        ","timestamp":"2025-09-14T10:49:21.257Z"}
{"code":"42P01","file":"parse_relation.c","length":106,"level":"error","line":"1392","message":"Erro ao criar cliente: relation \"clients\" does not exist","name":"error","position":"24","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:457:24)","timestamp":"2025-09-14T10:49:21.272Z"}
{"level":"info","message":"📅 Listando agendamentos","service":"CompleteServer","timestamp":"2025-09-14T10:49:21.364Z"}
{"error":"relation \"appointments\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n          SELECT a.id, a.title, a.description, a.start_date, a.end_date, a.status,\n                 c.name as client_name, c.email as client_email,\n                 s.name as service_name,\n                 a.created_at, a.updated_at\n          FROM appointments a\n          LEFT JOIN clients c ON a.client_id = c.id\n          LEFT JOIN services s ON a.service_id = s.id\n          ORDER BY a.start_date ASC\n        ","timestamp":"2025-09-14T10:49:21.429Z"}
{"code":"42P01","file":"parse_relation.c","length":112,"level":"error","line":"1392","message":"Erro ao listar agendamentos: relation \"appointments\" does not exist","name":"error","position":"250","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"appointments\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:483:24)","timestamp":"2025-09-14T10:49:21.437Z"}
{"level":"info","message":"📅 Criando agendamento: Agendamento Teste","service":"CompleteServer","timestamp":"2025-09-14T10:49:21.565Z"}
{"error":"relation \"appointments\" does not exist","level":"error","message":"Query error","params":["Agendamento Teste","Descrição do agendamento","2024-01-01T10:00:00Z","2024-01-01T11:00:00Z",1,1,"scheduled"],"service":"Database","text":"\n          INSERT INTO appointments (title, description, start_date, end_date, client_id, service_id, status, created_at, updated_at)\n          VALUES ($1, $2, $3, $4, $5, $6, $7, NOW(), NOW())\n          RETURNING *\n        ","timestamp":"2025-09-14T10:49:21.661Z"}
{"code":"42P01","file":"parse_relation.c","length":111,"level":"error","line":"1392","message":"Erro ao criar agendamento: relation \"appointments\" does not exist","name":"error","position":"24","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"appointments\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:547:24)","timestamp":"2025-09-14T10:49:21.668Z"}
{"level":"info","message":"💰 Listando orçamentos","service":"CompleteServer","timestamp":"2025-09-14T10:49:21.796Z"}
{"error":"relation \"quotations\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n          SELECT q.id, q.title, q.description, q.total_amount, q.status,\n                 c.name as client_name, c.email as client_email,\n                 q.created_at, q.updated_at\n          FROM quotations q\n          LEFT JOIN clients c ON q.client_id = c.id\n          ORDER BY q.created_at DESC\n        ","timestamp":"2025-09-14T10:49:21.921Z"}
{"code":"42P01","file":"parse_relation.c","length":110,"level":"error","line":"1392","message":"Erro ao listar orçamentos: relation \"quotations\" does not exist","name":"error","position":"199","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"quotations\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:573:24)","timestamp":"2025-09-14T10:49:21.935Z"}
{"level":"info","message":"💰 Criando orçamento: Orçamento Teste","service":"CompleteServer","timestamp":"2025-09-14T10:49:22.082Z"}
{"error":"relation \"quotations\" does not exist","level":"error","message":"Query error","params":["Orçamento Teste","Descrição do orçamento",500,1,"draft"],"service":"Database","text":"\n          INSERT INTO quotations (title, description, total_amount, client_id, status, created_at, updated_at)\n          VALUES ($1, $2, $3, $4, $5, NOW(), NOW())\n          RETURNING *\n        ","timestamp":"2025-09-14T10:49:22.185Z"}
{"code":"42P01","file":"parse_relation.c","length":109,"level":"error","line":"1392","message":"Erro ao criar orçamento: relation \"quotations\" does not exist","name":"error","position":"24","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"quotations\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:633:24)","timestamp":"2025-09-14T10:49:22.189Z"}
{"level":"info","message":"📊 Gerando estatísticas","service":"CompleteServer","timestamp":"2025-09-14T10:49:22.315Z"}
{"error":"relation \"clients\" does not exist","level":"error","message":"Query error","service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T10:49:22.619Z"}
{"code":"42P01","file":"parse_relation.c","length":106,"level":"error","line":"1392","message":"Erro ao gerar estatísticas: relation \"clients\" does not exist","name":"error","position":"31","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at async Promise.all (index 0)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:661:96)","timestamp":"2025-09-14T10:49:22.638Z"}
{"error":"relation \"quotations\" does not exist","level":"error","message":"Query error","service":"Database","text":"SELECT COUNT(*) as count FROM quotations","timestamp":"2025-09-14T10:49:22.675Z"}
{"error":"relation \"appointments\" does not exist","level":"error","message":"Query error","service":"Database","text":"SELECT COUNT(*) as count FROM appointments","timestamp":"2025-09-14T10:49:22.711Z"}
{"error":"relation \"emails\" does not exist","level":"error","message":"Query error","service":"Database","text":"SELECT COUNT(*) as count FROM emails","timestamp":"2025-09-14T10:49:22.725Z"}
{"error":"relation \"services\" does not exist","level":"error","message":"Query error","service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T10:49:22.729Z"}
{"level":"info","message":"Received shutdown signal, closing server...","service":"CompleteServer","timestamp":"2025-09-14T10:54:04.900Z"}
{"level":"info","message":"🚀 Iniciando Postal Services Complete Server...","service":"CompleteServer","timestamp":"2025-09-14T10:54:14.479Z"}
{"level":"info","message":"✅ Database connected","service":"CompleteServer","timestamp":"2025-09-14T10:54:14.497Z"}
{"level":"info","message":"🎉 Postal Services Complete Server running on port 3001","service":"CompleteServer","timestamp":"2025-09-14T10:54:14.513Z"}
{"level":"info","message":"📍 Health check: http://localhost:3001/health","service":"CompleteServer","timestamp":"2025-09-14T10:54:14.516Z"}
{"level":"info","message":"📍 API base URL: http://localhost:3001/api","service":"CompleteServer","timestamp":"2025-09-14T10:54:14.519Z"}
{"level":"info","message":"📋 Available APIs: emails, categories, services, clients, appointments, quotations, stats","service":"CompleteServer","timestamp":"2025-09-14T10:54:14.521Z"}
{"level":"info","message":"📧 Listando emails","service":"CompleteServer","timestamp":"2025-09-14T10:54:32.452Z"}
{"error":"relation \"emails\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n          SELECT id, subject, sender, recipient, body, status, created_at, updated_at \n          FROM emails \n          ORDER BY created_at DESC \n          LIMIT 50\n        ","timestamp":"2025-09-14T10:54:32.528Z"}
{"code":"42P01","file":"parse_relation.c","length":106,"level":"error","line":"1392","message":"Erro ao listar emails: relation \"emails\" does not exist","name":"error","position":"104","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"emails\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:84:24)","timestamp":"2025-09-14T10:54:32.544Z"}
{"level":"info","message":"📧 Criando email: Teste","service":"CompleteServer","timestamp":"2025-09-14T10:54:32.619Z"}
{"error":"relation \"emails\" does not exist","level":"error","message":"Query error","params":["Teste","test@test.com","client@test.com","Email de teste","pending"],"service":"Database","text":"\n          INSERT INTO emails (subject, sender, recipient, body, status, created_at, updated_at)\n          VALUES ($1, $2, $3, $4, $5, NOW(), NOW())\n          RETURNING *\n        ","timestamp":"2025-09-14T10:54:32.656Z"}
{"code":"42P01","file":"parse_relation.c","length":105,"level":"error","line":"1392","message":"Erro ao criar email: relation \"emails\" does not exist","name":"error","position":"24","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"emails\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:139:24)","timestamp":"2025-09-14T10:54:32.688Z"}
{"level":"info","message":"📋 Listando categorias","service":"CompleteServer","timestamp":"2025-09-14T10:54:32.741Z"}
{"error":"relation \"categories\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n          SELECT id, name, description, color, active, created_at, updated_at \n          FROM categories \n          WHERE active = true \n          ORDER BY name ASC\n        ","timestamp":"2025-09-14T10:54:32.772Z"}
{"code":"42P01","file":"parse_relation.c","length":109,"level":"error","line":"1392","message":"Erro ao listar categorias: relation \"categories\" does not exist","name":"error","position":"96","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"categories\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:165:24)","timestamp":"2025-09-14T10:54:32.777Z"}
{"level":"info","message":"📋 Criando categoria: Teste API","service":"CompleteServer","timestamp":"2025-09-14T10:54:32.811Z"}
{"error":"relation \"categories\" does not exist","level":"error","message":"Query error","params":["Teste API","Categoria de teste","#FF0000"],"service":"Database","text":"\n          INSERT INTO categories (name, description, color, active, created_at, updated_at)\n          VALUES ($1, $2, $3, true, NOW(), NOW())\n          RETURNING *\n        ","timestamp":"2025-09-14T10:54:32.839Z"}
{"code":"42P01","file":"parse_relation.c","length":109,"level":"error","line":"1392","message":"Erro ao criar categoria: relation \"categories\" does not exist","name":"error","position":"24","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"categories\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:220:24)","timestamp":"2025-09-14T10:54:32.842Z"}
{"level":"info","message":"📋 Buscando categoria 1","service":"CompleteServer","timestamp":"2025-09-14T10:54:32.875Z"}
{"error":"relation \"categories\" does not exist","level":"error","message":"Query error","params":["1"],"service":"Database","text":"\n          SELECT * FROM categories WHERE id = $1\n        ","timestamp":"2025-09-14T10:54:32.897Z"}
{"code":"42P01","file":"parse_relation.c","length":109,"level":"error","line":"1392","message":"Erro ao buscar categoria: relation \"categories\" does not exist","name":"error","position":"26","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"categories\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:191:24)","timestamp":"2025-09-14T10:54:32.902Z"}
{"level":"info","message":"🔧 Listando serviços","service":"CompleteServer","timestamp":"2025-09-14T10:54:32.941Z"}
{"error":"relation \"services\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n          SELECT s.id, s.name, s.description, s.price, s.duration, s.active,\n                 c.name as category_name, c.color as category_color,\n                 s.created_at, s.updated_at\n          FROM services s\n          LEFT JOIN categories c ON s.category_id = c.id\n          WHERE s.active = true\n          ORDER BY s.name ASC\n        ","timestamp":"2025-09-14T10:54:32.972Z"}
{"code":"42P01","file":"parse_relation.c","length":108,"level":"error","line":"1392","message":"Erro ao listar serviços: relation \"services\" does not exist","name":"error","position":"207","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"services\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:316:24)","timestamp":"2025-09-14T10:54:32.977Z"}
{"level":"info","message":"🔧 Criando serviço: Serviço Teste","service":"CompleteServer","timestamp":"2025-09-14T10:54:33.024Z"}
{"error":"relation \"services\" does not exist","level":"error","message":"Query error","params":["Serviço Teste","Descrição do serviço",100,60,1],"service":"Database","text":"\n          INSERT INTO services (name, description, price, duration, category_id, active, created_at, updated_at)\n          VALUES ($1, $2, $3, $4, $5, true, NOW(), NOW())\n          RETURNING *\n        ","timestamp":"2025-09-14T10:54:33.051Z"}
{"code":"42P01","file":"parse_relation.c","length":107,"level":"error","line":"1392","message":"Erro ao criar serviço: relation \"services\" does not exist","name":"error","position":"24","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"services\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:377:24)","timestamp":"2025-09-14T10:54:33.057Z"}
{"level":"info","message":"👥 Listando clientes","service":"CompleteServer","timestamp":"2025-09-14T10:54:33.093Z"}
{"error":"relation \"clients\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n          SELECT id, name, email, phone, address, created_at, updated_at\n          FROM clients\n          ORDER BY name ASC\n        ","timestamp":"2025-09-14T10:54:33.118Z"}
{"code":"42P01","file":"parse_relation.c","length":106,"level":"error","line":"1392","message":"Erro ao listar clientes: relation \"clients\" does not exist","name":"error","position":"90","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:403:24)","timestamp":"2025-09-14T10:54:33.121Z"}
{"level":"info","message":"👥 Criando cliente: Cliente Teste","service":"CompleteServer","timestamp":"2025-09-14T10:54:33.154Z"}
{"error":"relation \"clients\" does not exist","level":"error","message":"Query error","params":["Cliente Teste","cliente@test.com","11999999999","Rua Teste, 123"],"service":"Database","text":"\n          INSERT INTO clients (name, email, phone, address, created_at, updated_at)\n          VALUES ($1, $2, $3, $4, NOW(), NOW())\n          RETURNING *\n        ","timestamp":"2025-09-14T10:54:33.177Z"}
{"code":"42P01","file":"parse_relation.c","length":106,"level":"error","line":"1392","message":"Erro ao criar cliente: relation \"clients\" does not exist","name":"error","position":"24","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:457:24)","timestamp":"2025-09-14T10:54:33.184Z"}
{"level":"info","message":"📅 Listando agendamentos","service":"CompleteServer","timestamp":"2025-09-14T10:54:33.225Z"}
{"error":"relation \"appointments\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n          SELECT a.id, a.title, a.description, a.start_date, a.end_date, a.status,\n                 c.name as client_name, c.email as client_email,\n                 s.name as service_name,\n                 a.created_at, a.updated_at\n          FROM appointments a\n          LEFT JOIN clients c ON a.client_id = c.id\n          LEFT JOIN services s ON a.service_id = s.id\n          ORDER BY a.start_date ASC\n        ","timestamp":"2025-09-14T10:54:33.262Z"}
{"code":"42P01","file":"parse_relation.c","length":112,"level":"error","line":"1392","message":"Erro ao listar agendamentos: relation \"appointments\" does not exist","name":"error","position":"250","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"appointments\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:483:24)","timestamp":"2025-09-14T10:54:33.271Z"}
{"level":"info","message":"📅 Criando agendamento: Agendamento Teste","service":"CompleteServer","timestamp":"2025-09-14T10:54:33.318Z"}
{"error":"relation \"appointments\" does not exist","level":"error","message":"Query error","params":["Agendamento Teste","Descrição do agendamento","2024-01-01T10:00:00Z","2024-01-01T11:00:00Z",1,1,"scheduled"],"service":"Database","text":"\n          INSERT INTO appointments (title, description, start_date, end_date, client_id, service_id, status, created_at, updated_at)\n          VALUES ($1, $2, $3, $4, $5, $6, $7, NOW(), NOW())\n          RETURNING *\n        ","timestamp":"2025-09-14T10:54:33.343Z"}
{"code":"42P01","file":"parse_relation.c","length":111,"level":"error","line":"1392","message":"Erro ao criar agendamento: relation \"appointments\" does not exist","name":"error","position":"24","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"appointments\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:547:24)","timestamp":"2025-09-14T10:54:33.346Z"}
{"level":"info","message":"💰 Listando orçamentos","service":"CompleteServer","timestamp":"2025-09-14T10:54:33.390Z"}
{"error":"relation \"quotations\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n          SELECT q.id, q.title, q.description, q.total_amount, q.status,\n                 c.name as client_name, c.email as client_email,\n                 q.created_at, q.updated_at\n          FROM quotations q\n          LEFT JOIN clients c ON q.client_id = c.id\n          ORDER BY q.created_at DESC\n        ","timestamp":"2025-09-14T10:54:33.418Z"}
{"code":"42P01","file":"parse_relation.c","length":110,"level":"error","line":"1392","message":"Erro ao listar orçamentos: relation \"quotations\" does not exist","name":"error","position":"199","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"quotations\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:573:24)","timestamp":"2025-09-14T10:54:33.424Z"}
{"level":"info","message":"💰 Criando orçamento: Orçamento Teste","service":"CompleteServer","timestamp":"2025-09-14T10:54:33.467Z"}
{"error":"relation \"quotations\" does not exist","level":"error","message":"Query error","params":["Orçamento Teste","Descrição do orçamento",500,1,"draft"],"service":"Database","text":"\n          INSERT INTO quotations (title, description, total_amount, client_id, status, created_at, updated_at)\n          VALUES ($1, $2, $3, $4, $5, NOW(), NOW())\n          RETURNING *\n        ","timestamp":"2025-09-14T10:54:33.493Z"}
{"code":"42P01","file":"parse_relation.c","length":109,"level":"error","line":"1392","message":"Erro ao criar orçamento: relation \"quotations\" does not exist","name":"error","position":"24","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"quotations\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:633:24)","timestamp":"2025-09-14T10:54:33.496Z"}
{"level":"info","message":"📊 Gerando estatísticas","service":"CompleteServer","timestamp":"2025-09-14T10:54:33.543Z"}
{"error":"relation \"appointments\" does not exist","level":"error","message":"Query error","service":"Database","text":"SELECT COUNT(*) as count FROM appointments","timestamp":"2025-09-14T10:54:33.597Z"}
{"code":"42P01","file":"parse_relation.c","length":111,"level":"error","line":"1392","message":"Erro ao gerar estatísticas: relation \"appointments\" does not exist","name":"error","position":"31","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"appointments\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at async Promise.all (index 2)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:661:96)","timestamp":"2025-09-14T10:54:33.607Z"}
{"error":"relation \"services\" does not exist","level":"error","message":"Query error","service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T10:54:33.611Z"}
{"error":"relation \"quotations\" does not exist","level":"error","message":"Query error","service":"Database","text":"SELECT COUNT(*) as count FROM quotations","timestamp":"2025-09-14T10:54:33.624Z"}
{"error":"relation \"clients\" does not exist","level":"error","message":"Query error","service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T10:54:33.626Z"}
{"error":"relation \"emails\" does not exist","level":"error","message":"Query error","service":"Database","text":"SELECT COUNT(*) as count FROM emails","timestamp":"2025-09-14T10:54:33.635Z"}
{"level":"info","message":"📋 Listando categorias","service":"CompleteServer","timestamp":"2025-09-14T10:55:05.713Z"}
{"error":"relation \"categories\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n          SELECT id, name, description, color, active, created_at, updated_at \n          FROM categories \n          WHERE active = true \n          ORDER BY name ASC\n        ","timestamp":"2025-09-14T10:55:05.743Z"}
{"code":"42P01","file":"parse_relation.c","length":109,"level":"error","line":"1392","message":"Erro ao listar categorias: relation \"categories\" does not exist","name":"error","position":"96","routine":"parserOpenTable","service":"CompleteServer","severity":"ERROR","stack":"error: relation \"categories\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at <anonymous> (/home/mstech/projetos/app-email-attendant/appserver/server-complete.ts:165:24)","timestamp":"2025-09-14T10:55:05.746Z"}
{"level":"info","message":"Received shutdown signal, closing server...","service":"CompleteServer","timestamp":"2025-09-14T10:55:13.391Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T12:16:37.231Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T12:16:37.047Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T12:16:37.214Z"}
{"duration":794,"level":"debug","message":"Executed query in 794ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T12:16:38.042Z"}
{"level":"info","message":"Tables already exist: appointments, categories, clients, emails, quotations, services. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T12:16:38.058Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T12:16:38.209Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T12:16:38.212Z"}
{"duration":122,"level":"debug","message":"Executed query in 122ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:16:38.348Z"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS categories (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) UNIQUE NOT NULL,\n      description TEXT,\n      keywords JSONB NOT NULL DEFAULT '[]',\n      patterns JSONB NOT NULL DEFAULT '[]',\n      domains JSONB NOT NULL DEFAULT '[]',\n      color VARCHAR(7) NOT NULL DEFAULT '#3B82F6',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:16:38.368Z"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS services (\n      id VARCHAR(255) PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      description TEXT NOT NULL,\n      category VARCHAR(100) NOT NULL,\n      price DECIMAL(10,2) NOT NULL DEFAULT 0,\n      unit VARCHAR(50) NOT NULL DEFAULT 'hour',\n      estimated_time VARCHAR(100),\n      materials JSONB DEFAULT '[]',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:16:38.397Z"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS clients (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      email VARCHAR(255) NOT NULL,\n      phone VARCHAR(50),\n      address TEXT,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:16:38.428Z"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS quotations (\n      id VARCHAR(255) PRIMARY KEY,\n      client_email VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      client_phone VARCHAR(50),\n      client_address TEXT,\n      services JSONB NOT NULL DEFAULT '[]',\n      subtotal DECIMAL(10,2) NOT NULL DEFAULT 0,\n      discount DECIMAL(10,2) NOT NULL DEFAULT 0,\n      total DECIMAL(10,2) NOT NULL DEFAULT 0,\n      status VARCHAR(50) NOT NULL DEFAULT 'draft',\n      valid_until DATE,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:16:38.446Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS appointments (\n      id VARCHAR(255) PRIMARY KEY,\n      client_id VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      service_ids JSONB DEFAULT '[]',\n      service_names JSONB DEFAULT '[]',\n      date DATE NOT NULL,\n      time TIME NOT NULL,\n      duration INTEGER DEFAULT 120,\n      address TEXT,\n      notes TEXT,\n      status VARCHAR(50) NOT NULL DEFAULT 'scheduled',\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:16:38.462Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T12:16:38.488Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T12:16:38.492Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T12:16:38.504Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T12:17:42.772Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T12:17:42.595Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T12:17:42.769Z"}
{"duration":604,"level":"debug","message":"Executed query in 604ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T12:17:43.393Z"}
{"level":"info","message":"Tables already exist: appointments, categories, clients, emails, quotations, services. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T12:17:43.405Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T12:17:43.438Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T12:17:43.441Z"}
{"duration":79,"level":"debug","message":"Executed query in 79ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:17:43.533Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS categories (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) UNIQUE NOT NULL,\n      description TEXT,\n      keywords JSONB NOT NULL DEFAULT '[]',\n      patterns JSONB NOT NULL DEFAULT '[]',\n      domains JSONB NOT NULL DEFAULT '[]',\n      color VARCHAR(7) NOT NULL DEFAULT '#3B82F6',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:17:43.549Z"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS services (\n      id VARCHAR(255) PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      description TEXT NOT NULL,\n      category VARCHAR(100) NOT NULL,\n      price DECIMAL(10,2) NOT NULL DEFAULT 0,\n      unit VARCHAR(50) NOT NULL DEFAULT 'hour',\n      estimated_time VARCHAR(100),\n      materials JSONB DEFAULT '[]',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:17:43.571Z"}
{"duration":18,"level":"debug","message":"Executed query in 18ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS clients (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      email VARCHAR(255) NOT NULL,\n      phone VARCHAR(50),\n      address TEXT,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:17:43.618Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS quotations (\n      id VARCHAR(255) PRIMARY KEY,\n      client_email VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      client_phone VARCHAR(50),\n      client_address TEXT,\n      services JSONB NOT NULL DEFAULT '[]',\n      subtotal DECIMAL(10,2) NOT NULL DEFAULT 0,\n      discount DECIMAL(10,2) NOT NULL DEFAULT 0,\n      total DECIMAL(10,2) NOT NULL DEFAULT 0,\n      status VARCHAR(50) NOT NULL DEFAULT 'draft',\n      valid_until DATE,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:17:43.646Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS appointments (\n      id VARCHAR(255) PRIMARY KEY,\n      client_id VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      service_ids JSONB DEFAULT '[]',\n      service_names JSONB DEFAULT '[]',\n      date DATE NOT NULL,\n      time TIME NOT NULL,\n      duration INTEGER DEFAULT 120,\n      address TEXT,\n      notes TEXT,\n      status VARCHAR(50) NOT NULL DEFAULT 'scheduled',\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:17:43.663Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T12:17:43.695Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T12:17:43.697Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T12:17:43.699Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T12:18:19.199Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T12:18:19.096Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T12:18:19.184Z"}
{"duration":529,"level":"debug","message":"Executed query in 529ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T12:18:19.745Z"}
{"level":"info","message":"Tables already exist: appointments, categories, clients, emails, quotations, services. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T12:18:19.759Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T12:18:19.786Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T12:18:19.790Z"}
{"duration":90,"level":"debug","message":"Executed query in 90ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:18:19.882Z"}
{"duration":20,"level":"debug","message":"Executed query in 20ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS categories (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) UNIQUE NOT NULL,\n      description TEXT,\n      keywords JSONB NOT NULL DEFAULT '[]',\n      patterns JSONB NOT NULL DEFAULT '[]',\n      domains JSONB NOT NULL DEFAULT '[]',\n      color VARCHAR(7) NOT NULL DEFAULT '#3B82F6',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:18:19.914Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS services (\n      id VARCHAR(255) PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      description TEXT NOT NULL,\n      category VARCHAR(100) NOT NULL,\n      price DECIMAL(10,2) NOT NULL DEFAULT 0,\n      unit VARCHAR(50) NOT NULL DEFAULT 'hour',\n      estimated_time VARCHAR(100),\n      materials JSONB DEFAULT '[]',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:18:19.940Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS clients (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      email VARCHAR(255) NOT NULL,\n      phone VARCHAR(50),\n      address TEXT,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:18:19.957Z"}
{"duration":21,"level":"debug","message":"Executed query in 21ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS quotations (\n      id VARCHAR(255) PRIMARY KEY,\n      client_email VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      client_phone VARCHAR(50),\n      client_address TEXT,\n      services JSONB NOT NULL DEFAULT '[]',\n      subtotal DECIMAL(10,2) NOT NULL DEFAULT 0,\n      discount DECIMAL(10,2) NOT NULL DEFAULT 0,\n      total DECIMAL(10,2) NOT NULL DEFAULT 0,\n      status VARCHAR(50) NOT NULL DEFAULT 'draft',\n      valid_until DATE,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:18:19.979Z"}
{"duration":27,"level":"debug","message":"Executed query in 27ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS appointments (\n      id VARCHAR(255) PRIMARY KEY,\n      client_id VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      service_ids JSONB DEFAULT '[]',\n      service_names JSONB DEFAULT '[]',\n      date DATE NOT NULL,\n      time TIME NOT NULL,\n      duration INTEGER DEFAULT 120,\n      address TEXT,\n      notes TEXT,\n      status VARCHAR(50) NOT NULL DEFAULT 'scheduled',\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:18:20.009Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T12:18:20.021Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T12:18:20.024Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T12:18:20.037Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T12:20:01.265Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T12:20:01.230Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T12:20:01.264Z"}
{"duration":165,"level":"debug","message":"Executed query in 165ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T12:20:01.432Z"}
{"level":"info","message":"Tables already exist: appointments, categories, clients, emails, quotations, services. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T12:20:01.433Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T12:20:01.453Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T12:20:01.462Z"}
{"duration":35,"level":"debug","message":"Executed query in 35ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:20:01.498Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS categories (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) UNIQUE NOT NULL,\n      description TEXT,\n      keywords JSONB NOT NULL DEFAULT '[]',\n      patterns JSONB NOT NULL DEFAULT '[]',\n      domains JSONB NOT NULL DEFAULT '[]',\n      color VARCHAR(7) NOT NULL DEFAULT '#3B82F6',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:20:01.503Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS services (\n      id VARCHAR(255) PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      description TEXT NOT NULL,\n      category VARCHAR(100) NOT NULL,\n      price DECIMAL(10,2) NOT NULL DEFAULT 0,\n      unit VARCHAR(50) NOT NULL DEFAULT 'hour',\n      estimated_time VARCHAR(100),\n      materials JSONB DEFAULT '[]',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:20:01.516Z"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS clients (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      email VARCHAR(255) NOT NULL,\n      phone VARCHAR(50),\n      address TEXT,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:20:01.533Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS quotations (\n      id VARCHAR(255) PRIMARY KEY,\n      client_email VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      client_phone VARCHAR(50),\n      client_address TEXT,\n      services JSONB NOT NULL DEFAULT '[]',\n      subtotal DECIMAL(10,2) NOT NULL DEFAULT 0,\n      discount DECIMAL(10,2) NOT NULL DEFAULT 0,\n      total DECIMAL(10,2) NOT NULL DEFAULT 0,\n      status VARCHAR(50) NOT NULL DEFAULT 'draft',\n      valid_until DATE,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:20:01.539Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS appointments (\n      id VARCHAR(255) PRIMARY KEY,\n      client_id VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      service_ids JSONB DEFAULT '[]',\n      service_names JSONB DEFAULT '[]',\n      date DATE NOT NULL,\n      time TIME NOT NULL,\n      duration INTEGER DEFAULT 120,\n      address TEXT,\n      notes TEXT,\n      status VARCHAR(50) NOT NULL DEFAULT 'scheduled',\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:20:01.544Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T12:20:01.563Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T12:20:01.565Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T12:20:01.567Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T12:29:00.315Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T12:29:00.136Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T12:29:00.303Z"}
{"duration":1629,"level":"debug","message":"Executed query in 1629ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T12:29:01.950Z"}
{"level":"info","message":"Tables already exist: appointments, categories, clients, emails, quotations, services. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T12:29:01.963Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T12:29:02.075Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T12:29:02.092Z"}
{"duration":109,"level":"debug","message":"Executed query in 109ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:29:02.204Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS categories (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) UNIQUE NOT NULL,\n      description TEXT,\n      keywords JSONB NOT NULL DEFAULT '[]',\n      patterns JSONB NOT NULL DEFAULT '[]',\n      domains JSONB NOT NULL DEFAULT '[]',\n      color VARCHAR(7) NOT NULL DEFAULT '#3B82F6',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:29:02.228Z"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS services (\n      id VARCHAR(255) PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      description TEXT NOT NULL,\n      category VARCHAR(100) NOT NULL,\n      price DECIMAL(10,2) NOT NULL DEFAULT 0,\n      unit VARCHAR(50) NOT NULL DEFAULT 'hour',\n      estimated_time VARCHAR(100),\n      materials JSONB DEFAULT '[]',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:29:02.271Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS clients (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      email VARCHAR(255) NOT NULL,\n      phone VARCHAR(50),\n      address TEXT,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:29:02.297Z"}
{"duration":18,"level":"debug","message":"Executed query in 18ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS quotations (\n      id VARCHAR(255) PRIMARY KEY,\n      client_email VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      client_phone VARCHAR(50),\n      client_address TEXT,\n      services JSONB NOT NULL DEFAULT '[]',\n      subtotal DECIMAL(10,2) NOT NULL DEFAULT 0,\n      discount DECIMAL(10,2) NOT NULL DEFAULT 0,\n      total DECIMAL(10,2) NOT NULL DEFAULT 0,\n      status VARCHAR(50) NOT NULL DEFAULT 'draft',\n      valid_until DATE,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:29:02.318Z"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS appointments (\n      id VARCHAR(255) PRIMARY KEY,\n      client_id VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      service_ids JSONB DEFAULT '[]',\n      service_names JSONB DEFAULT '[]',\n      date DATE NOT NULL,\n      time TIME NOT NULL,\n      duration INTEGER DEFAULT 120,\n      address TEXT,\n      notes TEXT,\n      status VARCHAR(50) NOT NULL DEFAULT 'scheduled',\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:29:02.333Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T12:29:02.371Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T12:29:02.372Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T12:29:02.391Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T12:29:30.550Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T12:29:30.291Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T12:29:30.507Z"}
{"duration":751,"level":"debug","message":"Executed query in 751ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T12:29:31.319Z"}
{"level":"info","message":"Tables already exist: appointments, categories, clients, emails, quotations, services. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T12:29:31.333Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T12:29:31.399Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T12:29:31.404Z"}
{"duration":117,"level":"debug","message":"Executed query in 117ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:29:31.544Z"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS categories (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) UNIQUE NOT NULL,\n      description TEXT,\n      keywords JSONB NOT NULL DEFAULT '[]',\n      patterns JSONB NOT NULL DEFAULT '[]',\n      domains JSONB NOT NULL DEFAULT '[]',\n      color VARCHAR(7) NOT NULL DEFAULT '#3B82F6',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:29:31.566Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS services (\n      id VARCHAR(255) PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      description TEXT NOT NULL,\n      category VARCHAR(100) NOT NULL,\n      price DECIMAL(10,2) NOT NULL DEFAULT 0,\n      unit VARCHAR(50) NOT NULL DEFAULT 'hour',\n      estimated_time VARCHAR(100),\n      materials JSONB DEFAULT '[]',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:29:31.593Z"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS clients (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      email VARCHAR(255) NOT NULL,\n      phone VARCHAR(50),\n      address TEXT,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:29:31.614Z"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS quotations (\n      id VARCHAR(255) PRIMARY KEY,\n      client_email VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      client_phone VARCHAR(50),\n      client_address TEXT,\n      services JSONB NOT NULL DEFAULT '[]',\n      subtotal DECIMAL(10,2) NOT NULL DEFAULT 0,\n      discount DECIMAL(10,2) NOT NULL DEFAULT 0,\n      total DECIMAL(10,2) NOT NULL DEFAULT 0,\n      status VARCHAR(50) NOT NULL DEFAULT 'draft',\n      valid_until DATE,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:29:31.644Z"}
{"duration":28,"level":"debug","message":"Executed query in 28ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS appointments (\n      id VARCHAR(255) PRIMARY KEY,\n      client_id VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      service_ids JSONB DEFAULT '[]',\n      service_names JSONB DEFAULT '[]',\n      date DATE NOT NULL,\n      time TIME NOT NULL,\n      duration INTEGER DEFAULT 120,\n      address TEXT,\n      notes TEXT,\n      status VARCHAR(50) NOT NULL DEFAULT 'scheduled',\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:29:31.673Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T12:29:31.682Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T12:29:31.691Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T12:29:31.693Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T12:31:15.132Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T12:31:15.030Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T12:31:15.117Z"}
{"duration":368,"level":"debug","message":"Executed query in 368ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T12:31:15.505Z"}
{"level":"info","message":"Tables already exist: appointments, categories, clients, emails, quotations, services. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T12:31:15.507Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T12:31:15.561Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T12:31:15.565Z"}
{"duration":87,"level":"debug","message":"Executed query in 87ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:31:15.667Z"}
{"duration":10,"level":"debug","message":"Executed query in 10ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS categories (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) UNIQUE NOT NULL,\n      description TEXT,\n      keywords JSONB NOT NULL DEFAULT '[]',\n      patterns JSONB NOT NULL DEFAULT '[]',\n      domains JSONB NOT NULL DEFAULT '[]',\n      color VARCHAR(7) NOT NULL DEFAULT '#3B82F6',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:31:15.687Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS services (\n      id VARCHAR(255) PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      description TEXT NOT NULL,\n      category VARCHAR(100) NOT NULL,\n      price DECIMAL(10,2) NOT NULL DEFAULT 0,\n      unit VARCHAR(50) NOT NULL DEFAULT 'hour',\n      estimated_time VARCHAR(100),\n      materials JSONB DEFAULT '[]',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:31:15.695Z"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS clients (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      email VARCHAR(255) NOT NULL,\n      phone VARCHAR(50),\n      address TEXT,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:31:15.712Z"}
{"duration":28,"level":"debug","message":"Executed query in 28ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS quotations (\n      id VARCHAR(255) PRIMARY KEY,\n      client_email VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      client_phone VARCHAR(50),\n      client_address TEXT,\n      services JSONB NOT NULL DEFAULT '[]',\n      subtotal DECIMAL(10,2) NOT NULL DEFAULT 0,\n      discount DECIMAL(10,2) NOT NULL DEFAULT 0,\n      total DECIMAL(10,2) NOT NULL DEFAULT 0,\n      status VARCHAR(50) NOT NULL DEFAULT 'draft',\n      valid_until DATE,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:31:15.741Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS appointments (\n      id VARCHAR(255) PRIMARY KEY,\n      client_id VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      service_ids JSONB DEFAULT '[]',\n      service_names JSONB DEFAULT '[]',\n      date DATE NOT NULL,\n      time TIME NOT NULL,\n      duration INTEGER DEFAULT 120,\n      address TEXT,\n      notes TEXT,\n      status VARCHAR(50) NOT NULL DEFAULT 'scheduled',\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:31:15.750Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T12:31:15.773Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T12:31:15.776Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T12:31:15.788Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T12:32:07.443Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T12:32:07.303Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T12:32:07.442Z"}
{"duration":997,"level":"debug","message":"Executed query in 997ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T12:32:08.457Z"}
{"level":"info","message":"Tables already exist: appointments, categories, clients, emails, quotations, services. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T12:32:08.469Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T12:32:08.509Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T12:32:08.511Z"}
{"duration":104,"level":"debug","message":"Executed query in 104ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:32:08.616Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS categories (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) UNIQUE NOT NULL,\n      description TEXT,\n      keywords JSONB NOT NULL DEFAULT '[]',\n      patterns JSONB NOT NULL DEFAULT '[]',\n      domains JSONB NOT NULL DEFAULT '[]',\n      color VARCHAR(7) NOT NULL DEFAULT '#3B82F6',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:32:08.642Z"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS services (\n      id VARCHAR(255) PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      description TEXT NOT NULL,\n      category VARCHAR(100) NOT NULL,\n      price DECIMAL(10,2) NOT NULL DEFAULT 0,\n      unit VARCHAR(50) NOT NULL DEFAULT 'hour',\n      estimated_time VARCHAR(100),\n      materials JSONB DEFAULT '[]',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:32:08.658Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS clients (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      email VARCHAR(255) NOT NULL,\n      phone VARCHAR(50),\n      address TEXT,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:32:08.674Z"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS quotations (\n      id VARCHAR(255) PRIMARY KEY,\n      client_email VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      client_phone VARCHAR(50),\n      client_address TEXT,\n      services JSONB NOT NULL DEFAULT '[]',\n      subtotal DECIMAL(10,2) NOT NULL DEFAULT 0,\n      discount DECIMAL(10,2) NOT NULL DEFAULT 0,\n      total DECIMAL(10,2) NOT NULL DEFAULT 0,\n      status VARCHAR(50) NOT NULL DEFAULT 'draft',\n      valid_until DATE,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:32:08.691Z"}
{"duration":18,"level":"debug","message":"Executed query in 18ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS appointments (\n      id VARCHAR(255) PRIMARY KEY,\n      client_id VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      service_ids JSONB DEFAULT '[]',\n      service_names JSONB DEFAULT '[]',\n      date DATE NOT NULL,\n      time TIME NOT NULL,\n      duration INTEGER DEFAULT 120,\n      address TEXT,\n      notes TEXT,\n      status VARCHAR(50) NOT NULL DEFAULT 'scheduled',\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:32:08.710Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T12:32:08.729Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T12:32:08.739Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T12:32:08.754Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T12:33:00.048Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T12:32:59.851Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T12:33:00.031Z"}
{"duration":1466,"level":"debug","message":"Executed query in 1466ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T12:33:01.528Z"}
{"level":"info","message":"Tables already exist: appointments, categories, clients, emails, quotations, services. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T12:33:01.531Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T12:33:01.594Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T12:33:01.602Z"}
{"duration":211,"level":"debug","message":"Executed query in 211ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:33:01.824Z"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS categories (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) UNIQUE NOT NULL,\n      description TEXT,\n      keywords JSONB NOT NULL DEFAULT '[]',\n      patterns JSONB NOT NULL DEFAULT '[]',\n      domains JSONB NOT NULL DEFAULT '[]',\n      color VARCHAR(7) NOT NULL DEFAULT '#3B82F6',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:33:01.851Z"}
{"duration":26,"level":"debug","message":"Executed query in 26ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS services (\n      id VARCHAR(255) PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      description TEXT NOT NULL,\n      category VARCHAR(100) NOT NULL,\n      price DECIMAL(10,2) NOT NULL DEFAULT 0,\n      unit VARCHAR(50) NOT NULL DEFAULT 'hour',\n      estimated_time VARCHAR(100),\n      materials JSONB DEFAULT '[]',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:33:01.884Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS clients (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      email VARCHAR(255) NOT NULL,\n      phone VARCHAR(50),\n      address TEXT,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:33:01.913Z"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS quotations (\n      id VARCHAR(255) PRIMARY KEY,\n      client_email VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      client_phone VARCHAR(50),\n      client_address TEXT,\n      services JSONB NOT NULL DEFAULT '[]',\n      subtotal DECIMAL(10,2) NOT NULL DEFAULT 0,\n      discount DECIMAL(10,2) NOT NULL DEFAULT 0,\n      total DECIMAL(10,2) NOT NULL DEFAULT 0,\n      status VARCHAR(50) NOT NULL DEFAULT 'draft',\n      valid_until DATE,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:33:01.935Z"}
{"duration":21,"level":"debug","message":"Executed query in 21ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS appointments (\n      id VARCHAR(255) PRIMARY KEY,\n      client_id VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      service_ids JSONB DEFAULT '[]',\n      service_names JSONB DEFAULT '[]',\n      date DATE NOT NULL,\n      time TIME NOT NULL,\n      duration INTEGER DEFAULT 120,\n      address TEXT,\n      notes TEXT,\n      status VARCHAR(50) NOT NULL DEFAULT 'scheduled',\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:33:01.987Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T12:33:02.081Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T12:33:02.161Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T12:33:02.289Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T12:33:21.871Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T12:33:21.744Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T12:33:21.865Z"}
{"duration":816,"level":"debug","message":"Executed query in 816ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T12:33:22.698Z"}
{"level":"info","message":"Tables already exist: appointments, categories, clients, emails, quotations, services. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T12:33:22.729Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T12:33:22.795Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T12:33:22.807Z"}
{"duration":256,"level":"debug","message":"Executed query in 256ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:33:23.064Z"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS categories (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) UNIQUE NOT NULL,\n      description TEXT,\n      keywords JSONB NOT NULL DEFAULT '[]',\n      patterns JSONB NOT NULL DEFAULT '[]',\n      domains JSONB NOT NULL DEFAULT '[]',\n      color VARCHAR(7) NOT NULL DEFAULT '#3B82F6',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:33:23.080Z"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS services (\n      id VARCHAR(255) PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      description TEXT NOT NULL,\n      category VARCHAR(100) NOT NULL,\n      price DECIMAL(10,2) NOT NULL DEFAULT 0,\n      unit VARCHAR(50) NOT NULL DEFAULT 'hour',\n      estimated_time VARCHAR(100),\n      materials JSONB DEFAULT '[]',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:33:23.096Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS clients (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      email VARCHAR(255) NOT NULL,\n      phone VARCHAR(50),\n      address TEXT,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:33:23.111Z"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS quotations (\n      id VARCHAR(255) PRIMARY KEY,\n      client_email VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      client_phone VARCHAR(50),\n      client_address TEXT,\n      services JSONB NOT NULL DEFAULT '[]',\n      subtotal DECIMAL(10,2) NOT NULL DEFAULT 0,\n      discount DECIMAL(10,2) NOT NULL DEFAULT 0,\n      total DECIMAL(10,2) NOT NULL DEFAULT 0,\n      status VARCHAR(50) NOT NULL DEFAULT 'draft',\n      valid_until DATE,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:33:23.124Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS appointments (\n      id VARCHAR(255) PRIMARY KEY,\n      client_id VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      service_ids JSONB DEFAULT '[]',\n      service_names JSONB DEFAULT '[]',\n      date DATE NOT NULL,\n      time TIME NOT NULL,\n      duration INTEGER DEFAULT 120,\n      address TEXT,\n      notes TEXT,\n      status VARCHAR(50) NOT NULL DEFAULT 'scheduled',\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T12:33:23.127Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T12:33:23.184Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T12:33:23.277Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T12:33:23.280Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T15:18:22.164Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T15:18:22.152Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T15:18:22.163Z"}
{"error":"password authentication failed for user \"admin\"","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T15:18:22.247Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T15:18:22.250Z"}
{"error":"password authentication failed for user \"admin\"","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:18:22.266Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T15:18:22.267Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T15:18:22.268Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T15:19:04.761Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T15:19:04.751Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T15:19:04.761Z"}
{"error":"password authentication failed for user \"admin\"","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T15:19:04.824Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T15:19:04.825Z"}
{"error":"password authentication failed for user \"admin\"","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:19:04.839Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T15:19:04.841Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T15:19:04.842Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T15:20:13.531Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T15:20:13.520Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T15:20:13.530Z"}
{"error":"password authentication failed for user \"admin\"","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T15:20:13.600Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T15:20:13.602Z"}
{"error":"password authentication failed for user \"admin\"","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:20:13.617Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T15:20:13.618Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T15:20:13.620Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T15:28:48.273Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T15:28:48.248Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T15:28:48.271Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T15:28:48.356Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T15:28:48.357Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:28:48.387Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T15:28:48.387Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T15:28:48.389Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T15:38:29.842Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T15:38:29.801Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T15:38:29.835Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T15:38:29.979Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T15:38:29.981Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:38:30.030Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T15:38:30.033Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T15:38:30.040Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T15:45:26.666Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T15:45:26.657Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T15:45:26.666Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T15:45:26.732Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T15:45:26.733Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:45:26.755Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T15:45:26.756Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T15:45:26.758Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T15:47:00.134Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T15:47:00.070Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T15:47:00.131Z"}
{"duration":186,"level":"debug","message":"Executed query in 186ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T15:47:00.325Z"}
{"level":"info","message":"Tables already exist: appointments, categories, clients, emails, quotations, services. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T15:47:00.335Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T15:47:00.354Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T15:47:00.356Z"}
{"duration":45,"level":"debug","message":"Executed query in 45ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:47:00.402Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS categories (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) UNIQUE NOT NULL,\n      description TEXT,\n      keywords JSONB NOT NULL DEFAULT '[]',\n      patterns JSONB NOT NULL DEFAULT '[]',\n      domains JSONB NOT NULL DEFAULT '[]',\n      color VARCHAR(7) NOT NULL DEFAULT '#3B82F6',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:47:00.405Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS services (\n      id VARCHAR(255) PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      description TEXT NOT NULL,\n      category VARCHAR(100) NOT NULL,\n      price DECIMAL(10,2) NOT NULL DEFAULT 0,\n      unit VARCHAR(50) NOT NULL DEFAULT 'hour',\n      estimated_time VARCHAR(100),\n      materials JSONB DEFAULT '[]',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:47:00.413Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS clients (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      email VARCHAR(255) NOT NULL,\n      phone VARCHAR(50),\n      address TEXT,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:47:00.420Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS quotations (\n      id VARCHAR(255) PRIMARY KEY,\n      client_email VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      client_phone VARCHAR(50),\n      client_address TEXT,\n      services JSONB NOT NULL DEFAULT '[]',\n      subtotal DECIMAL(10,2) NOT NULL DEFAULT 0,\n      discount DECIMAL(10,2) NOT NULL DEFAULT 0,\n      total DECIMAL(10,2) NOT NULL DEFAULT 0,\n      status VARCHAR(50) NOT NULL DEFAULT 'draft',\n      valid_until DATE,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:47:00.423Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS appointments (\n      id VARCHAR(255) PRIMARY KEY,\n      client_id VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      service_ids JSONB DEFAULT '[]',\n      service_names JSONB DEFAULT '[]',\n      date DATE NOT NULL,\n      time TIME NOT NULL,\n      duration INTEGER DEFAULT 120,\n      address TEXT,\n      notes TEXT,\n      status VARCHAR(50) NOT NULL DEFAULT 'scheduled',\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:47:00.434Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T15:47:00.446Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T15:47:00.447Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T15:47:00.450Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T15:48:27.924Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T15:48:27.863Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T15:48:27.920Z"}
{"duration":144,"level":"debug","message":"Executed query in 144ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T15:48:28.071Z"}
{"level":"info","message":"Tables already exist: appointments, categories, clients, emails, quotations, services. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T15:48:28.072Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T15:48:28.081Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T15:48:28.083Z"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:48:28.101Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS categories (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) UNIQUE NOT NULL,\n      description TEXT,\n      keywords JSONB NOT NULL DEFAULT '[]',\n      patterns JSONB NOT NULL DEFAULT '[]',\n      domains JSONB NOT NULL DEFAULT '[]',\n      color VARCHAR(7) NOT NULL DEFAULT '#3B82F6',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:48:28.104Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS services (\n      id VARCHAR(255) PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      description TEXT NOT NULL,\n      category VARCHAR(100) NOT NULL,\n      price DECIMAL(10,2) NOT NULL DEFAULT 0,\n      unit VARCHAR(50) NOT NULL DEFAULT 'hour',\n      estimated_time VARCHAR(100),\n      materials JSONB DEFAULT '[]',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:48:28.107Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS clients (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      email VARCHAR(255) NOT NULL,\n      phone VARCHAR(50),\n      address TEXT,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:48:28.110Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS quotations (\n      id VARCHAR(255) PRIMARY KEY,\n      client_email VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      client_phone VARCHAR(50),\n      client_address TEXT,\n      services JSONB NOT NULL DEFAULT '[]',\n      subtotal DECIMAL(10,2) NOT NULL DEFAULT 0,\n      discount DECIMAL(10,2) NOT NULL DEFAULT 0,\n      total DECIMAL(10,2) NOT NULL DEFAULT 0,\n      status VARCHAR(50) NOT NULL DEFAULT 'draft',\n      valid_until DATE,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:48:28.114Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS appointments (\n      id VARCHAR(255) PRIMARY KEY,\n      client_id VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      service_ids JSONB DEFAULT '[]',\n      service_names JSONB DEFAULT '[]',\n      date DATE NOT NULL,\n      time TIME NOT NULL,\n      duration INTEGER DEFAULT 120,\n      address TEXT,\n      notes TEXT,\n      status VARCHAR(50) NOT NULL DEFAULT 'scheduled',\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:48:28.120Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T15:48:28.124Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T15:48:28.126Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T15:48:28.128Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T15:50:30.946Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T15:50:30.890Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T15:50:30.939Z"}
{"duration":278,"level":"debug","message":"Executed query in 278ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T15:50:31.231Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T15:50:31.235Z"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T15:50:31.259Z"}
{"duration":39,"level":"debug","message":"Executed query in 39ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T15:50:31.305Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T15:50:31.307Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T15:50:31.311Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T15:50:31.323Z"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T15:50:31.341Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T15:50:31.343Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T15:50:31.552Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T15:53:14.480Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T15:53:14.465Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T15:53:14.479Z"}
{"duration":59,"level":"debug","message":"Executed query in 59ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T15:53:14.541Z"}
{"level":"info","message":"Tables already exist: appointments, categories, clients, emails, quotations, services. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T15:53:14.543Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T15:53:14.549Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T15:53:14.550Z"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:53:14.561Z"}
{"duration":1,"level":"debug","message":"Executed query in 1ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS categories (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) UNIQUE NOT NULL,\n      description TEXT,\n      keywords JSONB NOT NULL DEFAULT '[]',\n      patterns JSONB NOT NULL DEFAULT '[]',\n      domains JSONB NOT NULL DEFAULT '[]',\n      color VARCHAR(7) NOT NULL DEFAULT '#3B82F6',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:53:14.562Z"}
{"duration":1,"level":"debug","message":"Executed query in 1ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS services (\n      id VARCHAR(255) PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      description TEXT NOT NULL,\n      category VARCHAR(100) NOT NULL,\n      price DECIMAL(10,2) NOT NULL DEFAULT 0,\n      unit VARCHAR(50) NOT NULL DEFAULT 'hour',\n      estimated_time VARCHAR(100),\n      materials JSONB DEFAULT '[]',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:53:14.564Z"}
{"duration":1,"level":"debug","message":"Executed query in 1ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS clients (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      email VARCHAR(255) NOT NULL,\n      phone VARCHAR(50),\n      address TEXT,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:53:14.565Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS quotations (\n      id VARCHAR(255) PRIMARY KEY,\n      client_email VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      client_phone VARCHAR(50),\n      client_address TEXT,\n      services JSONB NOT NULL DEFAULT '[]',\n      subtotal DECIMAL(10,2) NOT NULL DEFAULT 0,\n      discount DECIMAL(10,2) NOT NULL DEFAULT 0,\n      total DECIMAL(10,2) NOT NULL DEFAULT 0,\n      status VARCHAR(50) NOT NULL DEFAULT 'draft',\n      valid_until DATE,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:53:14.568Z"}
{"duration":1,"level":"debug","message":"Executed query in 1ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS appointments (\n      id VARCHAR(255) PRIMARY KEY,\n      client_id VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      service_ids JSONB DEFAULT '[]',\n      service_names JSONB DEFAULT '[]',\n      date DATE NOT NULL,\n      time TIME NOT NULL,\n      duration INTEGER DEFAULT 120,\n      address TEXT,\n      notes TEXT,\n      status VARCHAR(50) NOT NULL DEFAULT 'scheduled',\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:53:14.570Z"}
{"error":"column \"gmail_id\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T15:53:14.575Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T15:53:14.577Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T15:53:14.578Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T15:54:18.619Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T15:54:18.609Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T15:54:18.618Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T15:54:18.679Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T15:54:18.684Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T15:54:18.709Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T15:54:18.710Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T15:54:18.715Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T15:56:20.864Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T15:56:20.831Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T15:56:20.863Z"}
{"duration":149,"level":"debug","message":"Executed query in 149ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T15:56:21.014Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T15:56:21.015Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T15:56:21.032Z"}
{"duration":26,"level":"debug","message":"Executed query in 26ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T15:56:21.060Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T15:56:21.061Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T15:56:21.062Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T15:56:21.067Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T15:56:21.079Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T15:56:21.081Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T15:56:21.150Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T15:56:59.911Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T15:56:59.865Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T15:56:59.908Z"}
{"duration":218,"level":"debug","message":"Executed query in 218ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T15:57:00.133Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T15:57:00.135Z"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T15:57:00.161Z"}
{"duration":28,"level":"debug","message":"Executed query in 28ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T15:57:00.192Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T15:57:00.194Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T15:57:00.197Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T15:57:00.210Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T15:57:00.216Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T15:57:00.218Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T15:57:00.332Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T16:01:02.909Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T16:01:02.887Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T16:01:02.907Z"}
{"duration":231,"level":"debug","message":"Executed query in 231ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T16:01:03.145Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T16:01:03.157Z"}
{"duration":19,"level":"debug","message":"Executed query in 19ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T16:01:03.181Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T16:01:03.197Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T16:01:03.199Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T16:01:03.200Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T16:01:03.205Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T16:01:03.220Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T16:01:03.316Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T16:01:25.505Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T16:01:25.487Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T16:01:25.503Z"}
{"duration":174,"level":"debug","message":"Executed query in 174ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T16:01:25.682Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T16:01:25.691Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T16:01:25.711Z"}
{"duration":18,"level":"debug","message":"Executed query in 18ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T16:01:25.730Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T16:01:25.731Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T16:01:25.733Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T16:01:25.738Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T16:01:25.744Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T16:01:25.751Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T16:01:25.833Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T16:02:43.945Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T16:02:43.935Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T16:02:43.945Z"}
{"duration":81,"level":"debug","message":"Executed query in 81ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T16:02:44.027Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T16:02:44.027Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T16:02:44.032Z"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T16:02:44.044Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T16:02:44.044Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T16:02:44.045Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T16:02:44.048Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T16:02:44.051Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T16:02:44.051Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T16:02:44.084Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T16:05:00.148Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T16:05:00.099Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T16:05:00.146Z"}
{"duration":165,"level":"debug","message":"Executed query in 165ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T16:05:00.315Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T16:05:00.316Z"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T16:05:00.331Z"}
{"duration":18,"level":"debug","message":"Executed query in 18ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T16:05:00.350Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T16:05:00.351Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T16:05:00.356Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T16:05:00.366Z"}
{"duration":10,"level":"debug","message":"Executed query in 10ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T16:05:00.380Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T16:05:00.382Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T16:05:00.449Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-14T16:05:00.451Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-14T16:05:00.465Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-14T16:05:00.465Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-14T16:05:00.466Z"}
{"level":"info","message":"Setting up API routes","service":"APIRoutes","timestamp":"2025-09-14T16:05:00.395Z"}
{"level":"info","message":"Setting up client routes","service":"ClientRoutes","timestamp":"2025-09-14T16:05:00.445Z"}
{"level":"info","message":"Setting up service routes","service":"ServiceRoutes","timestamp":"2025-09-14T16:05:00.429Z"}
{"level":"info","message":"Setting up category routes","service":"CategoryRoutes","timestamp":"2025-09-14T16:05:00.413Z"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-14T16:05:01.732Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-14T16:05:09.169Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-14T16:05:17.466Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T16:05:27.339Z","userAgent":"curl/8.5.0"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T16:05:27.359Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T16:05:35.849Z","userAgent":"curl/8.5.0"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T16:05:35.851Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:05:35.868Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T16:05:35.875Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T16:05:42.606Z","userAgent":"curl/8.5.0"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T16:05:42.612Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:05:42.620Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T16:05:42.623Z"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-14T16:06:27.061Z","userAgent":"bruno-runtime/2.10.1"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T16:06:31.119Z","userAgent":"bruno-runtime/2.10.1"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T16:06:31.121Z"}
{"duration":29,"level":"debug","message":"Executed query in 29ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:06:31.151Z"}
{"duration":1,"level":"debug","message":"Executed query in 1ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T16:06:31.153Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T16:06:36.156Z","userAgent":"bruno-runtime/2.10.1"}
{"email":"fronxxxtend@teste.com","level":"info","message":"Creating client","name":"Cliente Teste Frontend","service":"ClientService","timestamp":"2025-09-14T16:06:36.160Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T16:06:36.167Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["Cliente Teste Frontend","fronxxxtend@teste.com","(11) 88888-8888",null,"Rua Frontend, 456",null,null,null,null,"cpf",null],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T16:06:36.178Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1075","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T16:06:36.194Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T16:06:41.995Z","userAgent":"bruno-runtime/2.10.1"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T16:06:41.996Z"}
{"duration":24,"level":"debug","message":"Executed query in 24ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:06:42.020Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T16:06:42.025Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-14T16:09:06.684Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":57,"level":"debug","message":"Executed query in 57ms","rowCount":0,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-14T16:09:06.750Z"}
{"ip":"::1","level":"info","message":"POST /api/quotations","service":"Server","timestamp":"2025-09-14T16:09:10.941Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":43,"level":"debug","message":"Executed query in 43ms","rowCount":1,"service":"Database","text":"INSERT INTO quotations (id, client_name, client_email, client_phone, client_address, services, subtotal, discount, total, status, valid_until, notes) VALUES (gen_random_uuid(), $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING *","timestamp":"2025-09-14T16:09:10.989Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-14T16:09:15.327Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":1,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-14T16:09:15.339Z"}
{"ip":"::1","level":"info","message":"POST /api/services","service":"Server","timestamp":"2025-09-14T16:09:22.932Z","userAgent":"bruno-runtime/2.10.1"}
{"level":"info","message":"Creating service","name":"Nome do Serviço","service":"ServiceService","timestamp":"2025-09-14T16:09:22.946Z"}
{"level":"error","message":"Validation error creating service:","service":"ServiceService","timestamp":"2025-09-14T16:09:22.960Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T16:09:30.923Z","userAgent":"bruno-runtime/2.10.1"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T16:09:30.924Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:09:30.928Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T16:09:30.931Z"}
{"ip":"::1","level":"info","message":"POST /api/categories","service":"Server","timestamp":"2025-09-14T16:09:42.142Z","userAgent":"bruno-runtime/2.10.1"}
{"level":"info","message":"Creating category","name":"Eletricista","service":"CategoryService","timestamp":"2025-09-14T16:09:42.146Z"}
{"duration":20,"level":"debug","message":"Executed query in 20ms","rowCount":1,"service":"Database","text":"SELECT * FROM categories WHERE name ILIKE $1 LIMIT 1","timestamp":"2025-09-14T16:09:42.179Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T16:09:48.477Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":35,"level":"debug","message":"Executed query in 35ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T16:09:48.513Z"}
{"ip":"::1","level":"info","message":"POST /api/emails","service":"Server","timestamp":"2025-09-14T16:09:55.425Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","rowCount":1,"service":"Database","text":"INSERT INTO emails (gmail_id, subject, sender, date, body, category, processed)\n         VALUES ($1, $2, $3, $4, $5, $6, $7)\n         RETURNING *","timestamp":"2025-09-14T16:09:55.440Z"}
{"ip":"::1","level":"info","message":"POST /api/emails","service":"Server","timestamp":"2025-09-14T16:10:01.224Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":26,"level":"debug","message":"Executed query in 26ms","rowCount":1,"service":"Database","text":"INSERT INTO emails (gmail_id, subject, sender, date, body, category, processed)\n         VALUES ($1, $2, $3, $4, $5, $6, $7)\n         RETURNING *","timestamp":"2025-09-14T16:10:01.252Z"}
{"ip":"::1","level":"info","message":"POST /api/emails","service":"Server","timestamp":"2025-09-14T16:10:05.221Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":1,"service":"Database","text":"INSERT INTO emails (gmail_id, subject, sender, date, body, category, processed)\n         VALUES ($1, $2, $3, $4, $5, $6, $7)\n         RETURNING *","timestamp":"2025-09-14T16:10:05.232Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-14T16:10:08.752Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:10:08.762Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-14T16:10:08.765Z"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T16:12:31.815Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories/active","service":"Server","timestamp":"2025-09-14T16:12:32.095Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting active categories","service":"CategoryService","timestamp":"2025-09-14T16:12:32.100Z"}
{"ip":"::1","level":"info","message":"GET /api/dashboard/stats","service":"Server","timestamp":"2025-09-14T16:12:32.127Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/dashboard/stats","service":"Server","timestamp":"2025-09-14T16:12:32.140Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T16:12:32.166Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"error":"column \"sort_order\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n        SELECT * FROM categories \n        WHERE active = true \n        ORDER BY sort_order ASC, name ASC\n      ","timestamp":"2025-09-14T16:12:32.195Z"}
{"code":"42703","file":"parse_relation.c","length":110,"level":"error","line":"3665","message":"Error finding active categories: column \"sort_order\" does not exist","name":"error","position":"82","routine":"errorMissingColumn","service":"CategoryRepository","severity":"ERROR","stack":"error: column \"sort_order\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at CategoryRepository.findActive (/home/mstech/projetos/app-email-attendant/appserver/repositories/CategoryRepository.ts:72:22)\n    at CategoryService.getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/services/CategoryService.ts:65:14)\n    at getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/controllers/CategoryController.ts:53:22)","timestamp":"2025-09-14T16:12:32.218Z"}
{"ip":"::1","level":"info","message":"GET /api/categories/active","service":"Server","timestamp":"2025-09-14T16:12:32.241Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting active categories","service":"CategoryService","timestamp":"2025-09-14T16:12:32.244Z"}
{"duration":137,"level":"debug","message":"Executed query in 137ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T16:12:32.304Z"}
{"error":"column \"sort_order\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n        SELECT * FROM categories \n        WHERE active = true \n        ORDER BY sort_order ASC, name ASC\n      ","timestamp":"2025-09-14T16:12:32.340Z"}
{"code":"42703","file":"parse_relation.c","length":110,"level":"error","line":"3665","message":"Error finding active categories: column \"sort_order\" does not exist","name":"error","position":"82","routine":"errorMissingColumn","service":"CategoryRepository","severity":"ERROR","stack":"error: column \"sort_order\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at CategoryRepository.findActive (/home/mstech/projetos/app-email-attendant/appserver/repositories/CategoryRepository.ts:72:22)\n    at CategoryService.getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/services/CategoryService.ts:65:14)\n    at getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/controllers/CategoryController.ts:53:22)","timestamp":"2025-09-14T16:12:32.385Z"}
{"ip":"::1","level":"info","message":"GET /api/categories/active","service":"Server","timestamp":"2025-09-14T16:12:42.616Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting active categories","service":"CategoryService","timestamp":"2025-09-14T16:12:42.616Z"}
{"error":"column \"sort_order\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n        SELECT * FROM categories \n        WHERE active = true \n        ORDER BY sort_order ASC, name ASC\n      ","timestamp":"2025-09-14T16:12:42.619Z"}
{"code":"42703","file":"parse_relation.c","length":110,"level":"error","line":"3665","message":"Error finding active categories: column \"sort_order\" does not exist","name":"error","position":"82","routine":"errorMissingColumn","service":"CategoryRepository","severity":"ERROR","stack":"error: column \"sort_order\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at CategoryRepository.findActive (/home/mstech/projetos/app-email-attendant/appserver/repositories/CategoryRepository.ts:72:22)\n    at CategoryService.getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/services/CategoryService.ts:65:14)\n    at getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/controllers/CategoryController.ts:53:22)","timestamp":"2025-09-14T16:12:42.620Z"}
{"ip":"::1","level":"info","message":"GET /api/categories/active","service":"Server","timestamp":"2025-09-14T16:12:43.296Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting active categories","service":"CategoryService","timestamp":"2025-09-14T16:12:43.297Z"}
{"error":"column \"sort_order\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n        SELECT * FROM categories \n        WHERE active = true \n        ORDER BY sort_order ASC, name ASC\n      ","timestamp":"2025-09-14T16:12:43.317Z"}
{"code":"42703","file":"parse_relation.c","length":110,"level":"error","line":"3665","message":"Error finding active categories: column \"sort_order\" does not exist","name":"error","position":"82","routine":"errorMissingColumn","service":"CategoryRepository","severity":"ERROR","stack":"error: column \"sort_order\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at CategoryRepository.findActive (/home/mstech/projetos/app-email-attendant/appserver/repositories/CategoryRepository.ts:72:22)\n    at CategoryService.getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/services/CategoryService.ts:65:14)\n    at getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/controllers/CategoryController.ts:53:22)","timestamp":"2025-09-14T16:12:43.319Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-14T16:12:44.865Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":53,"level":"debug","message":"Executed query in 53ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:12:44.919Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-14T16:12:44.927Z"}
{"ip":"::1","level":"info","message":"GET /api/categories/active","service":"Server","timestamp":"2025-09-14T16:12:45.732Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting active categories","service":"CategoryService","timestamp":"2025-09-14T16:12:45.732Z"}
{"error":"column \"sort_order\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n        SELECT * FROM categories \n        WHERE active = true \n        ORDER BY sort_order ASC, name ASC\n      ","timestamp":"2025-09-14T16:12:45.736Z"}
{"code":"42703","file":"parse_relation.c","length":110,"level":"error","line":"3665","message":"Error finding active categories: column \"sort_order\" does not exist","name":"error","position":"82","routine":"errorMissingColumn","service":"CategoryRepository","severity":"ERROR","stack":"error: column \"sort_order\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at CategoryRepository.findActive (/home/mstech/projetos/app-email-attendant/appserver/repositories/CategoryRepository.ts:72:22)\n    at CategoryService.getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/services/CategoryService.ts:65:14)\n    at getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/controllers/CategoryController.ts:53:22)","timestamp":"2025-09-14T16:12:45.744Z"}
{"ip":"::1","level":"info","message":"GET /api/dashboard/stats","service":"Server","timestamp":"2025-09-14T16:12:45.753Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/dashboard/stats","service":"Server","timestamp":"2025-09-14T16:12:45.763Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting active categories","service":"CategoryService","timestamp":"2025-09-14T16:12:45.770Z"}
{"ip":"::1","level":"info","message":"GET /api/categories/active","service":"Server","timestamp":"2025-09-14T16:12:45.769Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"error":"column \"sort_order\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n        SELECT * FROM categories \n        WHERE active = true \n        ORDER BY sort_order ASC, name ASC\n      ","timestamp":"2025-09-14T16:12:45.812Z"}
{"code":"42703","file":"parse_relation.c","length":110,"level":"error","line":"3665","message":"Error finding active categories: column \"sort_order\" does not exist","name":"error","position":"82","routine":"errorMissingColumn","service":"CategoryRepository","severity":"ERROR","stack":"error: column \"sort_order\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at CategoryRepository.findActive (/home/mstech/projetos/app-email-attendant/appserver/repositories/CategoryRepository.ts:72:22)\n    at CategoryService.getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/services/CategoryService.ts:65:14)\n    at getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/controllers/CategoryController.ts:53:22)","timestamp":"2025-09-14T16:12:45.821Z"}
{"ip":"::1","level":"info","message":"GET /api/categories/active","service":"Server","timestamp":"2025-09-14T16:12:47.879Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting active categories","service":"CategoryService","timestamp":"2025-09-14T16:12:47.880Z"}
{"ip":"::1","level":"info","message":"GET /api/dashboard/stats","service":"Server","timestamp":"2025-09-14T16:12:47.882Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/dashboard/stats","service":"Server","timestamp":"2025-09-14T16:12:47.888Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"error":"column \"sort_order\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n        SELECT * FROM categories \n        WHERE active = true \n        ORDER BY sort_order ASC, name ASC\n      ","timestamp":"2025-09-14T16:12:47.909Z"}
{"code":"42703","file":"parse_relation.c","length":110,"level":"error","line":"3665","message":"Error finding active categories: column \"sort_order\" does not exist","name":"error","position":"82","routine":"errorMissingColumn","service":"CategoryRepository","severity":"ERROR","stack":"error: column \"sort_order\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at CategoryRepository.findActive (/home/mstech/projetos/app-email-attendant/appserver/repositories/CategoryRepository.ts:72:22)\n    at CategoryService.getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/services/CategoryService.ts:65:14)\n    at getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/controllers/CategoryController.ts:53:22)","timestamp":"2025-09-14T16:12:47.911Z"}
{"ip":"::1","level":"info","message":"GET /api/categories/active","service":"Server","timestamp":"2025-09-14T16:12:47.922Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting active categories","service":"CategoryService","timestamp":"2025-09-14T16:12:47.923Z"}
{"error":"column \"sort_order\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n        SELECT * FROM categories \n        WHERE active = true \n        ORDER BY sort_order ASC, name ASC\n      ","timestamp":"2025-09-14T16:12:47.963Z"}
{"code":"42703","file":"parse_relation.c","length":110,"level":"error","line":"3665","message":"Error finding active categories: column \"sort_order\" does not exist","name":"error","position":"82","routine":"errorMissingColumn","service":"CategoryRepository","severity":"ERROR","stack":"error: column \"sort_order\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at CategoryRepository.findActive (/home/mstech/projetos/app-email-attendant/appserver/repositories/CategoryRepository.ts:72:22)\n    at CategoryService.getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/services/CategoryService.ts:65:14)\n    at getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/controllers/CategoryController.ts:53:22)","timestamp":"2025-09-14T16:12:47.970Z"}
{"ip":"::1","level":"info","message":"GET /api/categories/active","service":"Server","timestamp":"2025-09-14T16:13:03.734Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting active categories","service":"CategoryService","timestamp":"2025-09-14T16:13:03.734Z"}
{"ip":"::1","level":"info","message":"GET /api/dashboard/stats","service":"Server","timestamp":"2025-09-14T16:13:03.738Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/dashboard/stats","service":"Server","timestamp":"2025-09-14T16:13:03.748Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"error":"column \"sort_order\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n        SELECT * FROM categories \n        WHERE active = true \n        ORDER BY sort_order ASC, name ASC\n      ","timestamp":"2025-09-14T16:13:03.763Z"}
{"code":"42703","file":"parse_relation.c","length":110,"level":"error","line":"3665","message":"Error finding active categories: column \"sort_order\" does not exist","name":"error","position":"82","routine":"errorMissingColumn","service":"CategoryRepository","severity":"ERROR","stack":"error: column \"sort_order\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at CategoryRepository.findActive (/home/mstech/projetos/app-email-attendant/appserver/repositories/CategoryRepository.ts:72:22)\n    at CategoryService.getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/services/CategoryService.ts:65:14)\n    at getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/controllers/CategoryController.ts:53:22)","timestamp":"2025-09-14T16:13:03.775Z"}
{"ip":"::1","level":"info","message":"GET /api/categories/active","service":"Server","timestamp":"2025-09-14T16:13:03.796Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting active categories","service":"CategoryService","timestamp":"2025-09-14T16:13:03.798Z"}
{"error":"column \"sort_order\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n        SELECT * FROM categories \n        WHERE active = true \n        ORDER BY sort_order ASC, name ASC\n      ","timestamp":"2025-09-14T16:13:03.845Z"}
{"code":"42703","file":"parse_relation.c","length":110,"level":"error","line":"3665","message":"Error finding active categories: column \"sort_order\" does not exist","name":"error","position":"82","routine":"errorMissingColumn","service":"CategoryRepository","severity":"ERROR","stack":"error: column \"sort_order\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at CategoryRepository.findActive (/home/mstech/projetos/app-email-attendant/appserver/repositories/CategoryRepository.ts:72:22)\n    at CategoryService.getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/services/CategoryService.ts:65:14)\n    at getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/controllers/CategoryController.ts:53:22)","timestamp":"2025-09-14T16:13:03.852Z"}
{"ip":"::1","level":"info","message":"GET /api/categories/active","service":"Server","timestamp":"2025-09-14T16:13:16.376Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting active categories","service":"CategoryService","timestamp":"2025-09-14T16:13:16.377Z"}
{"ip":"::1","level":"info","message":"GET /api/dashboard/stats","service":"Server","timestamp":"2025-09-14T16:13:16.385Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/dashboard/stats","service":"Server","timestamp":"2025-09-14T16:13:16.467Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"error":"column \"sort_order\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n        SELECT * FROM categories \n        WHERE active = true \n        ORDER BY sort_order ASC, name ASC\n      ","timestamp":"2025-09-14T16:13:16.483Z"}
{"code":"42703","file":"parse_relation.c","length":110,"level":"error","line":"3665","message":"Error finding active categories: column \"sort_order\" does not exist","name":"error","position":"82","routine":"errorMissingColumn","service":"CategoryRepository","severity":"ERROR","stack":"error: column \"sort_order\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at CategoryRepository.findActive (/home/mstech/projetos/app-email-attendant/appserver/repositories/CategoryRepository.ts:72:22)\n    at CategoryService.getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/services/CategoryService.ts:65:14)\n    at getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/controllers/CategoryController.ts:53:22)","timestamp":"2025-09-14T16:13:16.485Z"}
{"ip":"::1","level":"info","message":"GET /api/categories/active","service":"Server","timestamp":"2025-09-14T16:13:16.492Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting active categories","service":"CategoryService","timestamp":"2025-09-14T16:13:16.493Z"}
{"error":"column \"sort_order\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n        SELECT * FROM categories \n        WHERE active = true \n        ORDER BY sort_order ASC, name ASC\n      ","timestamp":"2025-09-14T16:13:16.514Z"}
{"code":"42703","file":"parse_relation.c","length":110,"level":"error","line":"3665","message":"Error finding active categories: column \"sort_order\" does not exist","name":"error","position":"82","routine":"errorMissingColumn","service":"CategoryRepository","severity":"ERROR","stack":"error: column \"sort_order\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at CategoryRepository.findActive (/home/mstech/projetos/app-email-attendant/appserver/repositories/CategoryRepository.ts:72:22)\n    at CategoryService.getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/services/CategoryService.ts:65:14)\n    at getActiveCategories (/home/mstech/projetos/app-email-attendant/appserver/controllers/CategoryController.ts:53:22)","timestamp":"2025-09-14T16:13:16.517Z"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-14T16:14:35.375Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T16:14:44.377Z","userAgent":"curl/8.5.0"}
{"email":"teste@email.com","level":"info","message":"Creating client","name":"Teste Cliente","service":"ClientService","timestamp":"2025-09-14T16:14:44.379Z"}
{"duration":45,"level":"debug","message":"Executed query in 45ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T16:14:44.426Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["Teste Cliente","teste@email.com","(11) 99999-9999",null,null,null,null,null,null,"cpf",null],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T16:14:44.429Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1075","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T16:14:44.444Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T16:14:54.773Z","userAgent":"curl/8.5.0"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T16:14:54.778Z"}
{"duration":88,"level":"debug","message":"Executed query in 88ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:14:54.867Z"}
{"duration":23,"level":"debug","message":"Executed query in 23ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T16:14:54.896Z"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-14T16:15:50.276Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T16:15:56.887Z","userAgent":"curl/8.5.0"}
{"email":"teste@email.com","level":"info","message":"Creating client","name":"Teste Cliente","service":"ClientService","timestamp":"2025-09-14T16:15:56.887Z"}
{"duration":46,"level":"debug","message":"Executed query in 46ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T16:15:56.934Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["Teste Cliente","teste@email.com","(11) 99999-9999",null,null,null,null,null,null,"cpf",null],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T16:15:56.937Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1075","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T16:15:56.944Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T16:16:03.408Z","userAgent":"curl/8.5.0"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T16:16:03.408Z"}
{"duration":41,"level":"debug","message":"Executed query in 41ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:16:03.450Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T16:16:03.455Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T16:19:03.988Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T16:19:03.966Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T16:19:03.986Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T16:19:04.146Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T16:19:04.150Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T16:19:04.230Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T16:19:04.232Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T16:19:04.233Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T16:19:17.578Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T16:19:17.521Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T16:19:17.574Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T16:19:17.770Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T16:19:17.773Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T16:19:17.822Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T16:19:17.824Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T16:19:17.831Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T16:19:59.948Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T16:19:59.911Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T16:19:59.947Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T16:20:00.116Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T16:20:00.118Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T16:20:00.165Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T16:20:00.166Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T16:20:00.168Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T16:21:42.055Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T16:21:42.019Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T16:21:42.054Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T16:21:42.285Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T16:21:42.289Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T16:21:42.346Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T16:21:42.352Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T16:21:42.360Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T16:22:07.725Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T16:22:07.697Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T16:22:07.724Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T16:22:07.798Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T16:22:07.754Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T16:22:07.794Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T16:22:07.906Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T16:22:07.913Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T16:22:07.872Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T16:22:07.821Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T16:22:07.867Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T16:22:07.998Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T16:22:08.000Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T16:22:08.007Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T16:22:08.007Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T16:22:08.019Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T16:22:08.095Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T16:22:08.098Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T16:22:08.124Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T16:22:08.125Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T16:22:08.135Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T16:22:08.202Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T16:22:08.204Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T16:22:08.205Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T16:24:44.224Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T16:24:44.194Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T16:24:44.223Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T16:24:44.354Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T16:24:44.356Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T16:24:44.406Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T16:24:44.407Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T16:24:44.408Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T16:25:03.440Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T16:25:03.430Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T16:25:03.439Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T16:25:03.552Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T16:25:03.553Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T16:25:03.582Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T16:25:03.583Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T16:25:03.584Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T16:32:14.075Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T16:32:14.063Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T16:32:14.074Z"}
{"duration":88,"level":"debug","message":"Executed query in 88ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T16:32:14.164Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T16:32:14.164Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T16:32:14.169Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T16:32:14.179Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T16:32:14.179Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T16:32:14.180Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T16:32:14.183Z"}
{"duration":1,"level":"debug","message":"Executed query in 1ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T16:32:14.185Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T16:32:14.186Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T16:32:14.205Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-14T16:32:14.206Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-14T16:32:14.213Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-14T16:32:14.214Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-14T16:32:14.214Z"}
{"level":"info","message":"Setting up API routes","service":"APIRoutes","timestamp":"2025-09-14T16:32:14.188Z"}
{"level":"info","message":"Setting up category routes","service":"CategoryRoutes","timestamp":"2025-09-14T16:32:14.192Z"}
{"level":"info","message":"Setting up service routes","service":"ServiceRoutes","timestamp":"2025-09-14T16:32:14.197Z"}
{"level":"info","message":"Setting up client routes","service":"ClientRoutes","timestamp":"2025-09-14T16:32:14.201Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T16:32:31.461Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T16:32:31.446Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T16:32:31.460Z"}
{"duration":92,"level":"debug","message":"Executed query in 92ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T16:32:31.554Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T16:32:31.555Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T16:32:31.559Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T16:32:31.567Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T16:32:31.568Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T16:32:31.568Z"}
{"duration":1,"level":"debug","message":"Executed query in 1ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T16:32:31.571Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T16:32:31.573Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T16:32:31.574Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T16:32:31.593Z"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-14T16:33:55.657Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T16:34:02.997Z","userAgent":"curl/8.5.0"}
{"duration":53,"level":"debug","message":"Executed query in 53ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T16:34:03.051Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T16:34:10.667Z","userAgent":"curl/8.5.0"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T16:34:10.683Z"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T16:34:10.701Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T16:34:10.707Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T16:34:10.712Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T16:34:10.721Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T16:34:10.726Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T16:34:10.738Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T16:34:18.215Z","userAgent":"curl/8.5.0"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T16:34:18.218Z"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:34:18.233Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T16:34:18.235Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T16:34:25.661Z","userAgent":"curl/8.5.0"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T16:34:25.663Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:34:25.665Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T16:34:25.668Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-14T16:34:32.936Z","userAgent":"curl/8.5.0"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-14T16:34:32.940Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-14T16:34:48.925Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":0,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-14T16:34:48.930Z"}
{"ip":"::1","level":"info","message":"POST /api/appointments","service":"Server","timestamp":"2025-09-14T16:34:52.526Z","userAgent":"bruno-runtime/2.10.1"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-14T16:35:10.605Z","userAgent":"bruno-runtime/2.10.1"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T16:35:18.411Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T16:35:18.414Z"}
{"ip":"::1","level":"info","message":"POST /api/categories","service":"Server","timestamp":"2025-09-14T16:35:23.089Z","userAgent":"bruno-runtime/2.10.1"}
{"level":"info","message":"Creating category","name":"Eletricista","service":"CategoryService","timestamp":"2025-09-14T16:35:23.093Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT * FROM categories WHERE name ILIKE $1 LIMIT 1","timestamp":"2025-09-14T16:35:23.099Z"}
{"ip":"::1","level":"info","message":"PUT /api/categories/2","service":"Server","timestamp":"2025-09-14T16:35:27.546Z","userAgent":"bruno-runtime/2.10.1"}
{"id":"2","level":"info","message":"Updating category","service":"CategoryService","timestamp":"2025-09-14T16:35:27.548Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":0,"service":"Database","text":"SELECT * FROM categories WHERE name ILIKE $1 LIMIT 1","timestamp":"2025-09-14T16:35:27.552Z"}
{"duration":31,"level":"debug","message":"Executed query in 31ms","rowCount":1,"service":"Database","text":"\n        UPDATE categories\n        SET name = $1, description = $2, color = $3, updated_at = CURRENT_TIMESTAMP\n        WHERE id = $4\n        RETURNING *\n      ","timestamp":"2025-09-14T16:35:27.585Z"}
{"id":"2","level":"info","message":"Updated categories:","service":"CategoryRepository","timestamp":"2025-09-14T16:35:27.587Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T16:35:32.006Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T16:35:32.009Z"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T16:36:48.901Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories/active","service":"Server","timestamp":"2025-09-14T16:36:49.215Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting active categories","service":"CategoryService","timestamp":"2025-09-14T16:36:49.221Z"}
{"ip":"::1","level":"info","message":"GET /api/dashboard/stats","service":"Server","timestamp":"2025-09-14T16:36:49.251Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T16:36:49.271Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/dashboard/stats","service":"Server","timestamp":"2025-09-14T16:36:49.286Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":105,"level":"debug","message":"Executed query in 105ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T16:36:49.385Z"}
{"duration":160,"level":"debug","message":"Executed query in 160ms","rowCount":5,"service":"Database","text":"\n        SELECT * FROM categories \n        WHERE active = true \n        ORDER BY name ASC\n      ","timestamp":"2025-09-14T16:36:49.395Z"}
{"ip":"::1","level":"info","message":"GET /api/categories/active","service":"Server","timestamp":"2025-09-14T16:36:49.413Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting active categories","service":"CategoryService","timestamp":"2025-09-14T16:36:49.414Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":5,"service":"Database","text":"\n        SELECT * FROM categories \n        WHERE active = true \n        ORDER BY name ASC\n      ","timestamp":"2025-09-14T16:36:49.422Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-14T16:36:50.557Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:36:50.567Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-14T16:36:50.571Z"}
{"ip":"::1","level":"info","message":"GET /api/categories/active","service":"Server","timestamp":"2025-09-14T16:36:52.236Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting active categories","service":"CategoryService","timestamp":"2025-09-14T16:36:52.238Z"}
{"ip":"::1","level":"info","message":"GET /api/dashboard/stats","service":"Server","timestamp":"2025-09-14T16:36:52.240Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":10,"level":"debug","message":"Executed query in 10ms","rowCount":5,"service":"Database","text":"\n        SELECT * FROM categories \n        WHERE active = true \n        ORDER BY name ASC\n      ","timestamp":"2025-09-14T16:36:52.249Z"}
{"ip":"::1","level":"info","message":"GET /api/dashboard/stats","service":"Server","timestamp":"2025-09-14T16:36:52.254Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories/active","service":"Server","timestamp":"2025-09-14T16:36:52.260Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting active categories","service":"CategoryService","timestamp":"2025-09-14T16:36:52.272Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":5,"service":"Database","text":"\n        SELECT * FROM categories \n        WHERE active = true \n        ORDER BY name ASC\n      ","timestamp":"2025-09-14T16:36:52.276Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T16:39:18.870Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":148,"level":"debug","message":"Executed query in 148ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T16:39:19.022Z"}
{"duration":21,"level":"debug","message":"Executed query in 21ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T16:39:19.046Z"}
{"duration":10,"level":"debug","message":"Executed query in 10ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T16:39:19.060Z"}
{"duration":10,"level":"debug","message":"Executed query in 10ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T16:39:19.074Z"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T16:39:19.092Z"}
{"duration":21,"level":"debug","message":"Executed query in 21ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T16:39:19.115Z"}
{"duration":31,"level":"debug","message":"Executed query in 31ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T16:39:19.153Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T16:39:30.564Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":23,"level":"debug","message":"Executed query in 23ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T16:39:30.597Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T16:39:30.591Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T16:39:30.604Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T16:39:30.612Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T16:39:30.616Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T16:39:30.625Z"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T16:39:30.639Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T16:39:30.658Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":124,"level":"debug","message":"Executed query in 124ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T16:39:30.765Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T16:39:30.916Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T16:39:36.838Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T16:39:36.861Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T16:39:36.881Z"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T16:39:36.895Z"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T16:39:36.914Z"}
{"ip":"::1","level":"info","message":"GET /api/categories/active","service":"Server","timestamp":"2025-09-14T16:39:36.955Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting active categories","service":"CategoryService","timestamp":"2025-09-14T16:39:36.966Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T16:39:36.924Z"}
{"duration":53,"level":"debug","message":"Executed query in 53ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T16:39:36.991Z"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T16:39:37.012Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T16:39:37.084Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T16:39:37.125Z"}
{"duration":21,"level":"debug","message":"Executed query in 21ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T16:39:37.162Z"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T16:39:37.179Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T16:39:37.197Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T16:39:37.227Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T16:39:37.234Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T16:39:37.264Z"}
{"duration":476,"level":"debug","message":"Executed query in 476ms","rowCount":5,"service":"Database","text":"\n        SELECT * FROM categories \n        WHERE active = true \n        ORDER BY name ASC\n      ","timestamp":"2025-09-14T16:39:37.444Z"}
{"ip":"::1","level":"info","message":"GET /api/categories/active","service":"Server","timestamp":"2025-09-14T16:39:37.477Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting active categories","service":"CategoryService","timestamp":"2025-09-14T16:39:37.488Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":5,"service":"Database","text":"\n        SELECT * FROM categories \n        WHERE active = true \n        ORDER BY name ASC\n      ","timestamp":"2025-09-14T16:39:37.495Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T16:39:38.106Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T16:39:38.110Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T16:39:38.127Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T16:39:38.131Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T16:39:38.139Z"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T16:39:38.151Z"}
{"duration":19,"level":"debug","message":"Executed query in 19ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T16:39:38.171Z"}
{"duration":19,"level":"debug","message":"Executed query in 19ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T16:39:38.193Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T16:39:55.039Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T16:39:55.055Z"}
{"ip":"::1","level":"info","message":"GET /api/categories/active","service":"Server","timestamp":"2025-09-14T16:40:00.881Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting active categories","service":"CategoryService","timestamp":"2025-09-14T16:40:00.883Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":5,"service":"Database","text":"\n        SELECT * FROM categories \n        WHERE active = true \n        ORDER BY name ASC\n      ","timestamp":"2025-09-14T16:40:00.891Z"}
{"ip":"::1","level":"info","message":"GET /api/categories/active","service":"Server","timestamp":"2025-09-14T16:40:00.911Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting active categories","service":"CategoryService","timestamp":"2025-09-14T16:40:00.921Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":5,"service":"Database","text":"\n        SELECT * FROM categories \n        WHERE active = true \n        ORDER BY name ASC\n      ","timestamp":"2025-09-14T16:40:00.929Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T16:40:00.949Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":41,"level":"debug","message":"Executed query in 41ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T16:40:01.003Z"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T16:40:01.018Z"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T16:40:01.033Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T16:40:01.039Z"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T16:40:01.065Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T16:40:01.073Z"}
{"duration":19,"level":"debug","message":"Executed query in 19ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T16:40:01.095Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T16:40:01.129Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T16:40:01.138Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T16:40:01.156Z"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T16:40:01.172Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T16:40:01.177Z"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T16:40:01.190Z"}
{"duration":20,"level":"debug","message":"Executed query in 20ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T16:40:01.211Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T16:40:01.215Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T16:40:27.170Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T16:40:27.175Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T16:40:27.189Z"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T16:40:27.215Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T16:40:27.226Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T16:40:27.235Z"}
{"ip":"::1","level":"info","message":"GET /api/categories/active","service":"Server","timestamp":"2025-09-14T16:40:27.244Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting active categories","service":"CategoryService","timestamp":"2025-09-14T16:40:27.247Z"}
{"duration":47,"level":"debug","message":"Executed query in 47ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T16:40:27.283Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T16:40:27.303Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T16:40:27.321Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T16:40:27.337Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T16:40:27.346Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T16:40:27.375Z"}
{"duration":23,"level":"debug","message":"Executed query in 23ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T16:40:27.401Z"}
{"duration":18,"level":"debug","message":"Executed query in 18ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T16:40:27.435Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T16:40:27.447Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T16:40:27.452Z"}
{"duration":251,"level":"debug","message":"Executed query in 251ms","rowCount":5,"service":"Database","text":"\n        SELECT * FROM categories \n        WHERE active = true \n        ORDER BY name ASC\n      ","timestamp":"2025-09-14T16:40:27.512Z"}
{"ip":"::1","level":"info","message":"GET /api/categories/active","service":"Server","timestamp":"2025-09-14T16:40:27.544Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting active categories","service":"CategoryService","timestamp":"2025-09-14T16:40:27.547Z"}
{"duration":21,"level":"debug","message":"Executed query in 21ms","rowCount":5,"service":"Database","text":"\n        SELECT * FROM categories \n        WHERE active = true \n        ORDER BY name ASC\n      ","timestamp":"2025-09-14T16:40:27.572Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T16:44:48.790Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T16:44:48.882Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T16:44:48.922Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T16:44:48.986Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":419,"level":"debug","message":"Executed query in 419ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T16:44:49.224Z"}
{"duration":46,"level":"debug","message":"Executed query in 46ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T16:44:49.270Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T16:44:49.287Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T16:44:49.302Z"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T16:44:49.318Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T16:44:49.325Z"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T16:44:49.336Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T16:45:47.820Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T16:45:47.862Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T16:45:48.004Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T16:45:48.055Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":360,"level":"debug","message":"Executed query in 360ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T16:45:48.182Z"}
{"duration":20,"level":"debug","message":"Executed query in 20ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T16:45:48.203Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T16:45:48.210Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T16:45:48.241Z"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T16:45:48.257Z"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T16:45:48.272Z"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T16:45:48.287Z"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T16:47:03.536Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T16:47:03.914Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T16:47:03.951Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T16:47:03.998Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T16:47:04.126Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":395,"level":"debug","message":"Executed query in 395ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T16:47:04.312Z"}
{"duration":18,"level":"debug","message":"Executed query in 18ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T16:47:04.331Z"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T16:47:04.349Z"}
{"duration":22,"level":"debug","message":"Executed query in 22ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T16:47:04.372Z"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T16:47:04.391Z"}
{"duration":27,"level":"debug","message":"Executed query in 27ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T16:47:04.420Z"}
{"duration":115,"level":"debug","message":"Executed query in 115ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T16:47:04.539Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-14T16:47:12.029Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":74,"level":"debug","message":"Executed query in 74ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:47:12.123Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-14T16:47:12.130Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T16:47:13.919Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T16:47:13.939Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T16:47:14.900Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T16:47:14.906Z"}
{"duration":27,"level":"debug","message":"Executed query in 27ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:47:14.941Z"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T16:47:14.956Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-14T16:47:15.630Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":52,"level":"debug","message":"Executed query in 52ms","rowCount":1,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-14T16:47:15.684Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T16:47:15.876Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T16:47:15.899Z"}
{"duration":23,"level":"debug","message":"Executed query in 23ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:47:15.939Z"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T16:47:15.969Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T16:47:16.083Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T16:47:16.090Z"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:47:16.107Z"}
{"duration":23,"level":"debug","message":"Executed query in 23ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T16:47:16.139Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-14T16:47:16.905Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":51,"level":"debug","message":"Executed query in 51ms","rowCount":0,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-14T16:47:16.959Z"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T16:48:31.812Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T16:48:31.992Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T16:48:31.996Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T16:48:32.003Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T16:48:32.006Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T16:48:32.022Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":33,"level":"debug","message":"Executed query in 33ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T16:48:32.040Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T16:48:32.046Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T16:48:32.052Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T16:48:32.059Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T16:48:32.065Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T16:48:32.072Z"}
{"duration":51,"level":"debug","message":"Executed query in 51ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T16:48:32.073Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T16:48:32.076Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-14T16:48:38.483Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:48:38.487Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-14T16:48:38.489Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T16:48:39.330Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T16:48:39.331Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:48:39.335Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T16:48:39.338Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-14T16:48:41.277Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-14T16:48:41.280Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T16:48:41.299Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T16:48:41.301Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:48:41.312Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T16:48:41.315Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T16:48:41.773Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T16:48:41.774Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T16:48:41.776Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:48:41.778Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T16:48:41.780Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T16:48:41.783Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T16:48:59.883Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"email":"mm@hh.com","level":"info","message":"Creating client","name":"marcelo hernandes","service":"ClientService","timestamp":"2025-09-14T16:48:59.887Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T16:48:59.910Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["marcelo hernandes","mm@hh.com","112222333",null,null,null,null,null,null,"cpf",null],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T16:48:59.948Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1075","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T16:49:00.072Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T16:49:00.123Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T16:49:00.136Z"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:49:00.153Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T16:49:00.165Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T16:49:20.737Z","userAgent":"bruno-runtime/2.10.1"}
{"email":"fronxxxtend@teste.com","level":"info","message":"Creating client","name":"Cliente Teste Frontend","service":"ClientService","timestamp":"2025-09-14T16:49:20.739Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T16:49:20.743Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["Cliente Teste Frontend","fronxxxtend@teste.com","(11) 88888-8888",null,"Rua Frontend, 456",null,null,null,null,"cpf",null],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T16:49:20.745Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1075","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T16:49:20.757Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T16:49:21.748Z","userAgent":"bruno-runtime/2.10.1"}
{"email":"fronxxxtend@teste.com","level":"info","message":"Creating client","name":"Cliente Teste Frontend","service":"ClientService","timestamp":"2025-09-14T16:49:21.749Z"}
{"duration":24,"level":"debug","message":"Executed query in 24ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T16:49:21.774Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1075","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T16:49:21.790Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["Cliente Teste Frontend","fronxxxtend@teste.com","(11) 88888-8888",null,"Rua Frontend, 456",null,null,null,null,"cpf",null],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T16:49:21.781Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T16:49:22.468Z","userAgent":"bruno-runtime/2.10.1"}
{"email":"fronxxxtend@teste.com","level":"info","message":"Creating client","name":"Cliente Teste Frontend","service":"ClientService","timestamp":"2025-09-14T16:49:22.469Z"}
{"duration":21,"level":"debug","message":"Executed query in 21ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T16:49:22.491Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["Cliente Teste Frontend","fronxxxtend@teste.com","(11) 88888-8888",null,"Rua Frontend, 456",null,null,null,null,"cpf",null],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T16:49:22.493Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1075","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T16:49:22.497Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T16:49:39.553Z","userAgent":"bruno-runtime/2.10.1"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T16:49:39.555Z"}
{"duration":25,"level":"debug","message":"Executed query in 25ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:49:39.580Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T16:49:39.583Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T16:49:40.373Z","userAgent":"bruno-runtime/2.10.1"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T16:49:40.374Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:49:40.376Z"}
{"duration":1,"level":"debug","message":"Executed query in 1ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T16:49:40.378Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T16:50:41.563Z","userAgent":"curl/8.5.0"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T16:50:41.565Z"}
{"duration":40,"level":"debug","message":"Executed query in 40ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:50:41.607Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T16:50:41.610Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T16:50:50.213Z","userAgent":"curl/8.5.0"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T16:50:50.214Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:50:50.219Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T16:50:50.225Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T16:50:58.814Z","userAgent":"curl/8.5.0"}
{"email":"joao@teste.com","level":"info","message":"Creating client","name":"João da Silva","service":"ClientService","timestamp":"2025-09-14T16:50:58.815Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T16:50:58.823Z"}
{"error":"column \"document\" does not exist","level":"error","message":"Query error","params":["123.456.789-00"],"service":"Database","text":"SELECT * FROM clients WHERE document = $1 LIMIT 1","timestamp":"2025-09-14T16:50:58.826Z"}
{"code":"42703","file":"parse_relation.c","length":108,"level":"error","line":"3665","message":"Error finding client by document: column \"document\" does not exist","name":"error","position":"29","routine":"errorMissingColumn","service":"ClientRepository","severity":"ERROR","stack":"error: column \"document\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.findByDocument (/home/mstech/projetos/app-email-attendant/appserver/repositories/ClientRepository.ts:145:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:179:32)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T16:50:58.832Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["João da Silva","joao@teste.com","11999999999","1133333333","Rua das Flores, 123 - Centro","São Paulo","SP","01234-567","123.456.789-00","cpf","Cliente preferencial"],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T16:50:58.864Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1075","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T16:50:58.876Z"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-14T16:51:15.058Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T16:51:22.732Z","userAgent":"curl/8.5.0"}
{"email":"joao@teste.com","level":"info","message":"Creating client","name":"João da Silva","service":"ClientService","timestamp":"2025-09-14T16:51:22.733Z"}
{"duration":22,"level":"debug","message":"Executed query in 22ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T16:51:22.755Z"}
{"error":"column \"document\" does not exist","level":"error","message":"Query error","params":["123.456.789-00"],"service":"Database","text":"SELECT * FROM clients WHERE document = $1 LIMIT 1","timestamp":"2025-09-14T16:51:22.757Z"}
{"code":"42703","file":"parse_relation.c","length":108,"level":"error","line":"3665","message":"Error finding client by document: column \"document\" does not exist","name":"error","position":"29","routine":"errorMissingColumn","service":"ClientRepository","severity":"ERROR","stack":"error: column \"document\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.findByDocument (/home/mstech/projetos/app-email-attendant/appserver/repositories/ClientRepository.ts:145:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:179:32)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T16:51:22.762Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["João da Silva","joao@teste.com","11999999999",null,"Rua das Flores, 123 - Centro","São Paulo","SP","01234-567","123.456.789-00","cpf","Cliente preferencial"],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T16:51:22.782Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1075","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T16:51:22.786Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T16:51:28.314Z","userAgent":"bruno-runtime/2.10.1"}
{"email":"joao@teste.com","level":"info","message":"Creating client","name":"João da Silva","service":"ClientService","timestamp":"2025-09-14T16:51:28.315Z"}
{"duration":32,"level":"debug","message":"Executed query in 32ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T16:51:28.347Z"}
{"error":"column \"document\" does not exist","level":"error","message":"Query error","params":["123.456.789-00"],"service":"Database","text":"SELECT * FROM clients WHERE document = $1 LIMIT 1","timestamp":"2025-09-14T16:51:28.357Z"}
{"code":"42703","file":"parse_relation.c","length":108,"level":"error","line":"3665","message":"Error finding client by document: column \"document\" does not exist","name":"error","position":"29","routine":"errorMissingColumn","service":"ClientRepository","severity":"ERROR","stack":"error: column \"document\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.findByDocument (/home/mstech/projetos/app-email-attendant/appserver/repositories/ClientRepository.ts:145:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:179:32)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T16:51:28.362Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["João da Silva","joao@teste.com","11999999999","1133333333","Rua das Flores, 123 - Centro","São Paulo","SP","01234-567","123.456.789-00","cpf","Cliente preferencial"],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T16:51:28.405Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1075","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T16:51:28.426Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T16:51:29.331Z","userAgent":"bruno-runtime/2.10.1"}
{"email":"joao@teste.com","level":"info","message":"Creating client","name":"João da Silva","service":"ClientService","timestamp":"2025-09-14T16:51:29.332Z"}
{"duration":21,"level":"debug","message":"Executed query in 21ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T16:51:29.353Z"}
{"error":"column \"document\" does not exist","level":"error","message":"Query error","params":["123.456.789-00"],"service":"Database","text":"SELECT * FROM clients WHERE document = $1 LIMIT 1","timestamp":"2025-09-14T16:51:29.357Z"}
{"code":"42703","file":"parse_relation.c","length":108,"level":"error","line":"3665","message":"Error finding client by document: column \"document\" does not exist","name":"error","position":"29","routine":"errorMissingColumn","service":"ClientRepository","severity":"ERROR","stack":"error: column \"document\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.findByDocument (/home/mstech/projetos/app-email-attendant/appserver/repositories/ClientRepository.ts:145:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:179:32)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T16:51:29.362Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["João da Silva","joao@teste.com","11999999999","1133333333","Rua das Flores, 123 - Centro","São Paulo","SP","01234-567","123.456.789-00","cpf","Cliente preferencial"],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T16:51:29.400Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1075","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T16:51:29.404Z"}
{"level":"info","message":"Received shutdown signal, closing server...","service":"Server","timestamp":"2025-09-14T16:51:32.384Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T16:52:17.898Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T16:52:17.875Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T16:52:17.897Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T16:52:18.033Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T16:52:18.042Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T16:52:18.085Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T16:52:18.091Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T16:52:18.095Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T16:53:27.250Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T16:53:27.176Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T16:53:27.242Z"}
{"duration":253,"level":"debug","message":"Executed query in 253ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T16:53:27.508Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T16:53:27.510Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T16:53:27.534Z"}
{"duration":41,"level":"debug","message":"Executed query in 41ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T16:53:27.579Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T16:53:27.581Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T16:53:27.590Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T16:53:27.596Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T16:53:27.609Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T16:53:27.610Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T16:53:27.728Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-14T16:53:27.729Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-14T16:53:27.754Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-14T16:53:27.756Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-14T16:53:27.759Z"}
{"level":"info","message":"Setting up client routes","service":"ClientRoutes","timestamp":"2025-09-14T16:53:27.711Z"}
{"level":"info","message":"Setting up category routes","service":"CategoryRoutes","timestamp":"2025-09-14T16:53:27.644Z"}
{"level":"info","message":"Setting up service routes","service":"ServiceRoutes","timestamp":"2025-09-14T16:53:27.690Z"}
{"level":"info","message":"Setting up API routes","service":"APIRoutes","timestamp":"2025-09-14T16:53:27.620Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T16:53:34.052Z","userAgent":"bruno-runtime/2.10.1"}
{"email":"joao@teste.com","level":"info","message":"Creating client","name":"João da Silva","service":"ClientService","timestamp":"2025-09-14T16:53:34.077Z"}
{"duration":43,"level":"debug","message":"Executed query in 43ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T16:53:34.184Z"}
{"error":"column \"document\" does not exist","level":"error","message":"Query error","params":["123.456.789-00"],"service":"Database","text":"SELECT * FROM clients WHERE document = $1 LIMIT 1","timestamp":"2025-09-14T16:53:34.219Z"}
{"code":"42703","file":"parse_relation.c","length":108,"level":"error","line":"3665","message":"Error finding client by document: column \"document\" does not exist","name":"error","position":"29","routine":"errorMissingColumn","service":"ClientRepository","severity":"ERROR","stack":"error: column \"document\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.findByDocument (/home/mstech/projetos/app-email-attendant/appserver/repositories/ClientRepository.ts:145:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:179:32)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T16:53:34.314Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["João da Silva","joao@teste.com","11999999999",null,"Rua das Flores, 123 - Centro","São Paulo","SP","01234-567","123.456.789-00","cpf","Cliente preferencial"],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T16:53:34.476Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1075","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T16:53:34.517Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T16:54:15.461Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T16:54:15.469Z"}
{"duration":120,"level":"debug","message":"Executed query in 120ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:54:15.601Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T16:54:15.612Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-14T16:54:17.711Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":28,"level":"debug","message":"Executed query in 28ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:54:17.757Z"}
{"duration":19,"level":"debug","message":"Executed query in 19ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-14T16:54:17.787Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T16:54:19.952Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T16:54:19.968Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T16:54:21.305Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T16:54:21.310Z"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:54:21.330Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T16:54:21.347Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-14T16:54:22.923Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-14T16:54:22.931Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T16:54:22.996Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T16:54:22.998Z"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T16:54:23.012Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T16:54:23.023Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-14T16:54:26.500Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","rowCount":0,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-14T16:54:26.515Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T16:54:28.423Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T16:54:28.459Z"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T16:54:28.476Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T16:54:28.492Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":61,"level":"debug","message":"Executed query in 61ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T16:54:28.538Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T16:54:28.557Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":55,"level":"debug","message":"Executed query in 55ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T16:54:28.594Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T16:54:28.610Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":51,"level":"debug","message":"Executed query in 51ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T16:54:28.647Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T16:54:28.654Z"}
{"duration":19,"level":"debug","message":"Executed query in 19ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T16:54:28.675Z"}
{"level":"info","message":"Received shutdown signal, closing server...","service":"Server","timestamp":"2025-09-14T16:55:13.621Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T16:55:29.243Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T16:55:29.166Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T16:55:29.242Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T16:55:29.590Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T16:55:29.593Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T16:55:29.685Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T16:55:29.688Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T16:55:29.693Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T16:57:27.386Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T16:57:27.346Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T16:57:27.383Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T16:57:27.517Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T16:57:27.523Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T16:57:27.560Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T16:57:27.562Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T16:57:27.570Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T16:59:17.365Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T16:59:17.333Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T16:59:17.363Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T16:59:17.503Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T16:59:17.510Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T16:59:17.549Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T16:59:17.550Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T16:59:17.557Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T17:00:54.561Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T17:00:54.531Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T17:00:54.557Z"}
{"duration":501,"level":"debug","message":"Executed query in 501ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T17:00:55.075Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T17:00:55.077Z"}
{"duration":29,"level":"debug","message":"Executed query in 29ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T17:00:55.110Z"}
{"duration":75,"level":"debug","message":"Executed query in 75ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T17:00:55.186Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T17:00:55.189Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T17:00:55.190Z"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T17:00:55.211Z"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T17:00:55.229Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T17:00:55.243Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T17:00:55.357Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-14T17:00:55.359Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-14T17:00:55.382Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-14T17:00:55.385Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-14T17:00:55.389Z"}
{"level":"info","message":"Setting up API routes","service":"APIRoutes","timestamp":"2025-09-14T17:00:55.251Z"}
{"level":"info","message":"Setting up client routes","service":"ClientRoutes","timestamp":"2025-09-14T17:00:55.336Z"}
{"level":"info","message":"Setting up service routes","service":"ServiceRoutes","timestamp":"2025-09-14T17:00:55.313Z"}
{"level":"info","message":"Setting up category routes","service":"CategoryRoutes","timestamp":"2025-09-14T17:00:55.279Z"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T17:01:06.900Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T17:01:07.107Z","userAgent":"bruno-runtime/2.10.1"}
{"email":"joao@teste.com","level":"info","message":"Creating client","name":"João da Silva","service":"ClientService","timestamp":"2025-09-14T17:01:07.112Z"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T17:01:07.145Z"}
{"error":"column \"document\" does not exist","level":"error","message":"Query error","params":["123.456.789-00"],"service":"Database","text":"SELECT * FROM clients WHERE document = $1 LIMIT 1","timestamp":"2025-09-14T17:01:07.155Z"}
{"code":"42703","file":"parse_relation.c","length":108,"level":"error","line":"3665","message":"Error finding client by document: column \"document\" does not exist","name":"error","position":"29","routine":"errorMissingColumn","service":"ClientRepository","severity":"ERROR","stack":"error: column \"document\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.findByDocument (/home/mstech/projetos/app-email-attendant/appserver/repositories/ClientRepository.ts:145:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:179:32)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T17:01:07.225Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["João da Silva","joao@teste.com","11999999999","1133333333","Rua das Flores, 123 - Centro","São Paulo","SP","01234-567","123.456.789-00","cpf","Cliente preferencial"],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T17:01:07.324Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1075","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T17:01:07.347Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T17:01:07.513Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T17:01:07.544Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T17:01:07.565Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T17:01:07.575Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T17:01:07.602Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":123,"level":"debug","message":"Executed query in 123ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T17:01:07.652Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T17:01:07.662Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T17:01:07.669Z"}
{"duration":94,"level":"debug","message":"Executed query in 94ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T17:01:07.699Z"}
{"duration":37,"level":"debug","message":"Executed query in 37ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T17:01:07.707Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T17:01:07.713Z"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T17:01:07.730Z"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T17:01:07.747Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T17:01:41.992Z","userAgent":"bruno-runtime/2.10.1"}
{"email":"joao.santos@teste.com","level":"info","message":"Creating client","name":"João da Silva Santos","service":"ClientService","timestamp":"2025-09-14T17:01:41.994Z"}
{"duration":28,"level":"debug","message":"Executed query in 28ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T17:01:42.023Z"}
{"error":"column \"document\" does not exist","level":"error","message":"Query error","params":["123.456.789-00"],"service":"Database","text":"SELECT * FROM clients WHERE document = $1 LIMIT 1","timestamp":"2025-09-14T17:01:42.027Z"}
{"code":"42703","file":"parse_relation.c","length":108,"level":"error","line":"3665","message":"Error finding client by document: column \"document\" does not exist","name":"error","position":"29","routine":"errorMissingColumn","service":"ClientRepository","severity":"ERROR","stack":"error: column \"document\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.findByDocument (/home/mstech/projetos/app-email-attendant/appserver/repositories/ClientRepository.ts:145:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:179:32)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T17:01:42.037Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["João da Silva Santos","joao.santos@teste.com","11988888888","1144444444","Rua das Flores, 456 - Centro","São Paulo","SP","01234-567","123.456.789-00","cpf","Cliente VIP - Atualizado"],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T17:01:42.096Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1075","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T17:01:42.105Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T17:01:43.151Z","userAgent":"bruno-runtime/2.10.1"}
{"email":"joao.santos@teste.com","level":"info","message":"Creating client","name":"João da Silva Santos","service":"ClientService","timestamp":"2025-09-14T17:01:43.152Z"}
{"duration":22,"level":"debug","message":"Executed query in 22ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T17:01:43.175Z"}
{"error":"column \"document\" does not exist","level":"error","message":"Query error","params":["123.456.789-00"],"service":"Database","text":"SELECT * FROM clients WHERE document = $1 LIMIT 1","timestamp":"2025-09-14T17:01:43.177Z"}
{"code":"42703","file":"parse_relation.c","length":108,"level":"error","line":"3665","message":"Error finding client by document: column \"document\" does not exist","name":"error","position":"29","routine":"errorMissingColumn","service":"ClientRepository","severity":"ERROR","stack":"error: column \"document\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.findByDocument (/home/mstech/projetos/app-email-attendant/appserver/repositories/ClientRepository.ts:145:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:179:32)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T17:01:43.182Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["João da Silva Santos","joao.santos@teste.com","11988888888","1144444444","Rua das Flores, 456 - Centro","São Paulo","SP","01234-567","123.456.789-00","cpf","Cliente VIP - Atualizado"],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T17:01:43.231Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1075","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T17:01:43.250Z"}
{"level":"info","message":"Received shutdown signal, closing server...","service":"Server","timestamp":"2025-09-14T17:02:56.699Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T17:04:47.028Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T17:04:47.014Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T17:04:47.027Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T17:04:47.134Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T17:04:47.140Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T17:04:47.162Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T17:04:47.163Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T17:04:47.165Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T17:17:38.515Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T17:17:38.459Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T17:17:38.512Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T17:17:38.778Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T17:17:38.788Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T17:17:38.844Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T17:17:38.848Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T17:17:38.854Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T17:53:47.528Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T17:53:47.515Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T17:53:47.527Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T17:53:47.617Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T17:53:47.618Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T17:53:47.638Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T17:53:47.639Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T17:53:47.640Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T17:54:25.609Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T17:54:25.596Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T17:54:25.608Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T17:54:25.756Z"}
{"level":"warn","message":"Could not check existing tables, proceeding with full migration","service":"DBMigrations","timestamp":"2025-09-14T17:54:25.765Z"}
{"error":"database \"dbportalservices\" does not exist","level":"error","message":"Query error","service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T17:54:25.833Z"}
{"level":"error","message":"Migrations failed","service":"DBMigrations","timestamp":"2025-09-14T17:54:25.837Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T17:54:25.843Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T17:58:22.316Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T17:58:22.290Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T17:58:22.312Z"}
{"duration":117,"level":"debug","message":"Executed query in 117ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T17:58:22.440Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T17:58:22.442Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T17:58:22.446Z"}
{"duration":18,"level":"debug","message":"Executed query in 18ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T17:58:22.465Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T17:58:22.468Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T17:58:22.477Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T17:58:22.484Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T17:58:22.495Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T17:58:22.496Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T17:58:22.549Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-14T17:58:22.551Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-14T17:58:22.565Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-14T17:58:22.566Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-14T17:58:22.566Z"}
{"level":"info","message":"Setting up API routes","service":"APIRoutes","timestamp":"2025-09-14T17:58:22.502Z"}
{"level":"info","message":"Setting up client routes","service":"ClientRoutes","timestamp":"2025-09-14T17:58:22.547Z"}
{"level":"info","message":"Setting up category routes","service":"CategoryRoutes","timestamp":"2025-09-14T17:58:22.519Z"}
{"level":"info","message":"Setting up service routes","service":"ServiceRoutes","timestamp":"2025-09-14T17:58:22.530Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T17:59:23.216Z","userAgent":"bruno-runtime/2.10.1"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T17:59:23.227Z"}
{"duration":67,"level":"debug","message":"Executed query in 67ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T17:59:23.295Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T17:59:23.306Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T17:59:27.646Z","userAgent":"bruno-runtime/2.10.1"}
{"email":"joao.santos@teste.com","level":"info","message":"Creating client","name":"João da Silva Santos","service":"ClientService","timestamp":"2025-09-14T17:59:27.663Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T17:59:27.694Z"}
{"error":"column \"document\" does not exist","level":"error","message":"Query error","params":["123.456.789-00"],"service":"Database","text":"SELECT * FROM clients WHERE document = $1 LIMIT 1","timestamp":"2025-09-14T17:59:27.705Z"}
{"code":"42703","file":"parse_relation.c","length":108,"level":"error","line":"3716","message":"Error finding client by document: column \"document\" does not exist","name":"error","position":"29","routine":"errorMissingColumn","service":"ClientRepository","severity":"ERROR","stack":"error: column \"document\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.findByDocument (/home/mstech/projetos/app-email-attendant/appserver/repositories/ClientRepository.ts:145:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:179:32)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T17:59:27.756Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["João da Silva Santos","joao.santos@teste.com","11988888888","1144444444","Rua das Flores, 456 - Centro","São Paulo","SP","01234-567","123.456.789-00","cpf","Cliente VIP - Atualizado"],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T17:59:27.808Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1065","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T17:59:27.833Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T17:59:45.960Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T17:59:45.940Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T17:59:45.959Z"}
{"duration":126,"level":"debug","message":"Executed query in 126ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T17:59:46.087Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T17:59:46.091Z"}
{"duration":10,"level":"debug","message":"Executed query in 10ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T17:59:46.105Z"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T17:59:46.121Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T17:59:46.124Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T17:59:46.125Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T17:59:46.132Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T17:59:46.136Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T17:59:46.137Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T17:59:46.189Z"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-14T17:59:48.478Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T18:00:00.290Z","userAgent":"curl/8.5.0"}
{"duration":33,"level":"debug","message":"Executed query in 33ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T18:00:00.325Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T18:00:07.358Z","userAgent":"curl/8.5.0"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T18:00:07.360Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:00:07.368Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T18:00:07.377Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T18:00:13.531Z","userAgent":"curl/8.5.0"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T18:00:13.532Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:00:13.539Z"}
{"duration":1,"level":"debug","message":"Executed query in 1ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T18:00:13.542Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T18:00:20.058Z","userAgent":"curl/8.5.0"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T18:00:20.064Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T18:00:22.992Z","userAgent":"curl/8.5.0"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T18:00:22.995Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:00:22.998Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T18:00:23.000Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T18:00:26.296Z","userAgent":"curl/8.5.0"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T18:00:26.296Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:00:26.299Z"}
{"duration":1,"level":"debug","message":"Executed query in 1ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T18:00:26.300Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-14T18:00:31.887Z","userAgent":"curl/8.5.0"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":0,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-14T18:00:31.895Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-14T18:00:35.140Z","userAgent":"curl/8.5.0"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":0,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-14T18:00:35.147Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-14T18:00:38.512Z","userAgent":"curl/8.5.0"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":0,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:00:38.520Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-14T18:00:38.522Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T18:00:42.677Z","userAgent":"bruno-runtime/2.10.1"}
{"email":"joao.santos@teste.com","level":"info","message":"Creating client","name":"João da Silva Santos","service":"ClientService","timestamp":"2025-09-14T18:00:42.693Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T18:00:42.702Z"}
{"error":"column \"document\" does not exist","level":"error","message":"Query error","params":["123.456.789-00"],"service":"Database","text":"SELECT * FROM clients WHERE document = $1 LIMIT 1","timestamp":"2025-09-14T18:00:42.712Z"}
{"code":"42703","file":"parse_relation.c","length":108,"level":"error","line":"3716","message":"Error finding client by document: column \"document\" does not exist","name":"error","position":"29","routine":"errorMissingColumn","service":"ClientRepository","severity":"ERROR","stack":"error: column \"document\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.findByDocument (/home/mstech/projetos/app-email-attendant/appserver/repositories/ClientRepository.ts:145:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:179:32)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T18:00:42.735Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["João da Silva Santos","joao.santos@teste.com","11988888888","1144444444","Rua das Flores, 456 - Centro","São Paulo","SP","01234-567","123.456.789-00","cpf","Cliente VIP - Atualizado"],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T18:00:42.838Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1065","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T18:00:42.882Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T18:00:44.140Z","userAgent":"bruno-runtime/2.10.1"}
{"email":"joao.santos@teste.com","level":"info","message":"Creating client","name":"João da Silva Santos","service":"ClientService","timestamp":"2025-09-14T18:00:44.141Z"}
{"duration":88,"level":"debug","message":"Executed query in 88ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T18:00:44.240Z"}
{"error":"column \"document\" does not exist","level":"error","message":"Query error","params":["123.456.789-00"],"service":"Database","text":"SELECT * FROM clients WHERE document = $1 LIMIT 1","timestamp":"2025-09-14T18:00:44.247Z"}
{"code":"42703","file":"parse_relation.c","length":108,"level":"error","line":"3716","message":"Error finding client by document: column \"document\" does not exist","name":"error","position":"29","routine":"errorMissingColumn","service":"ClientRepository","severity":"ERROR","stack":"error: column \"document\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.findByDocument (/home/mstech/projetos/app-email-attendant/appserver/repositories/ClientRepository.ts:145:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:179:32)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T18:00:44.264Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["João da Silva Santos","joao.santos@teste.com","11988888888","1144444444","Rua das Flores, 456 - Centro","São Paulo","SP","01234-567","123.456.789-00","cpf","Cliente VIP - Atualizado"],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T18:00:44.345Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1065","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T18:00:44.367Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T18:00:45.239Z","userAgent":"curl/8.5.0"}
{"email":"joao@email.com","level":"info","message":"Creating client","name":"João Silva","service":"ClientService","timestamp":"2025-09-14T18:00:45.241Z"}
{"duration":53,"level":"debug","message":"Executed query in 53ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T18:00:45.296Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["João Silva","joao@email.com","(11) 99999-9999",null,"Rua das Flores, 123",null,null,null,null,"cpf",null],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T18:00:45.301Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1065","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T18:00:45.316Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T18:01:10.844Z","userAgent":"curl/8.5.0"}
{"email":"joao@email.com","level":"info","message":"Creating client","name":"João Silva","service":"ClientService","timestamp":"2025-09-14T18:01:10.845Z"}
{"duration":19,"level":"debug","message":"Executed query in 19ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T18:01:10.864Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["João Silva","joao@email.com","(11) 99999-9999",null,"Rua das Flores, 123",null,null,null,null,"cpf","Cliente teste"],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T18:01:10.866Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1065","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T18:01:10.868Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T18:01:18.435Z","userAgent":"bruno-runtime/2.10.1"}
{"email":"joao@email.com","level":"info","message":"Creating client","name":"João Silva","service":"ClientService","timestamp":"2025-09-14T18:01:18.436Z"}
{"duration":25,"level":"debug","message":"Executed query in 25ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T18:01:18.462Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["João Silva","joao@email.com","(11) 99999-9999",null,"Rua das Flores, 123",null,null,null,null,"cpf",null],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T18:01:18.465Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1065","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T18:01:18.468Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T18:01:19.253Z","userAgent":"bruno-runtime/2.10.1"}
{"email":"joao@email.com","level":"info","message":"Creating client","name":"João Silva","service":"ClientService","timestamp":"2025-09-14T18:01:19.254Z"}
{"duration":22,"level":"debug","message":"Executed query in 22ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T18:01:19.277Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["João Silva","joao@email.com","(11) 99999-9999",null,"Rua das Flores, 123",null,null,null,null,"cpf",null],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T18:01:19.280Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1065","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T18:01:19.283Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T18:01:19.535Z","userAgent":"bruno-runtime/2.10.1"}
{"email":"joao@email.com","level":"info","message":"Creating client","name":"João Silva","service":"ClientService","timestamp":"2025-09-14T18:01:19.536Z"}
{"duration":29,"level":"debug","message":"Executed query in 29ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T18:01:19.566Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["João Silva","joao@email.com","(11) 99999-9999",null,"Rua das Flores, 123",null,null,null,null,"cpf",null],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T18:01:19.568Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1065","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T18:01:19.572Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T18:01:19.757Z","userAgent":"bruno-runtime/2.10.1"}
{"email":"joao@email.com","level":"info","message":"Creating client","name":"João Silva","service":"ClientService","timestamp":"2025-09-14T18:01:19.758Z"}
{"duration":22,"level":"debug","message":"Executed query in 22ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T18:01:19.782Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["João Silva","joao@email.com","(11) 99999-9999",null,"Rua das Flores, 123",null,null,null,null,"cpf",null],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T18:01:19.787Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1065","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T18:01:19.792Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T18:01:20.001Z","userAgent":"bruno-runtime/2.10.1"}
{"email":"joao@email.com","level":"info","message":"Creating client","name":"João Silva","service":"ClientService","timestamp":"2025-09-14T18:01:20.003Z"}
{"duration":39,"level":"debug","message":"Executed query in 39ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T18:01:20.043Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["João Silva","joao@email.com","(11) 99999-9999",null,"Rua das Flores, 123",null,null,null,null,"cpf",null],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T18:01:20.047Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1065","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T18:01:20.053Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T18:01:39.450Z","userAgent":"bruno-runtime/2.10.1"}
{"email":"joao@email.com","level":"info","message":"Creating client","name":"João Silva","service":"ClientService","timestamp":"2025-09-14T18:01:39.451Z"}
{"duration":89,"level":"debug","message":"Executed query in 89ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T18:01:39.551Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["João Silva","joao@email.com","(11) 99999-9999",null,"Rua das Flores, 123",null,null,null,null,"cpf","Cliente teste"],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T18:01:39.569Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1065","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T18:01:39.582Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T18:02:58.590Z","userAgent":"curl/8.5.0"}
{"email":"joao@email.com","level":"info","message":"Creating client","name":"João Silva","service":"ClientService","timestamp":"2025-09-14T18:02:58.594Z"}
{"duration":34,"level":"debug","message":"Executed query in 34ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T18:02:58.630Z"}
{"error":"column \"phone_secondary\" of relation \"clients\" does not exist","level":"error","message":"Query error","params":["João Silva","joao@email.com","(11) 99999-9999",null,"Rua das Flores, 123",null,null,null,null,"cpf","Cliente teste"],"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, phone_secondary, address, city, state, zip_code, document, document_type, notes)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        RETURNING *\n      ","timestamp":"2025-09-14T18:02:58.637Z"}
{"code":"42703","file":"parse_target.c","length":135,"level":"error","line":"1065","message":"Error creating clients: column \"phone_secondary\" of relation \"clients\" does not exist","name":"error","position":"51","routine":"checkInsertTargets","service":"ClientRepository","severity":"ERROR","stack":"error: column \"phone_secondary\" of relation \"clients\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at ClientRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at ClientService.createClient (/home/mstech/projetos/app-email-attendant/appserver/services/ClientService.ts:188:14)\n    at createClient (/home/mstech/projetos/app-email-attendant/appserver/controllers/ClientController.ts:191:22)","timestamp":"2025-09-14T18:02:58.646Z"}
{"level":"info","message":"Received shutdown signal, closing server...","service":"Server","timestamp":"2025-09-14T18:03:05.605Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T18:03:19.241Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T18:03:19.192Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T18:03:19.239Z"}
{"duration":174,"level":"debug","message":"Executed query in 174ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T18:03:19.419Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T18:03:19.424Z"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T18:03:19.445Z"}
{"duration":18,"level":"debug","message":"Executed query in 18ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T18:03:19.465Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T18:03:19.466Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T18:03:19.474Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T18:03:19.485Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T18:03:19.497Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T18:03:19.499Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T18:03:19.599Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-14T18:03:19.600Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-14T18:03:19.615Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-14T18:03:19.616Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-14T18:03:19.617Z"}
{"level":"info","message":"Setting up API routes","service":"APIRoutes","timestamp":"2025-09-14T18:03:19.513Z"}
{"level":"info","message":"Setting up category routes","service":"CategoryRoutes","timestamp":"2025-09-14T18:03:19.543Z"}
{"level":"info","message":"Setting up service routes","service":"ServiceRoutes","timestamp":"2025-09-14T18:03:19.567Z"}
{"level":"info","message":"Setting up client routes","service":"ClientRoutes","timestamp":"2025-09-14T18:03:19.590Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T18:03:21.592Z","userAgent":"curl/8.5.0"}
{"email":"joao@email.com","level":"info","message":"Creating client","name":"João Silva","service":"ClientService","timestamp":"2025-09-14T18:03:21.595Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T18:03:21.615Z"}
{"duration":20,"level":"debug","message":"Executed query in 20ms","rowCount":1,"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, address, notes)\n        VALUES ($1, $2, $3, $4, $5)\n        RETURNING *\n      ","timestamp":"2025-09-14T18:03:21.641Z"}
{"id":1,"level":"info","message":"Created clients:","service":"ClientRepository","timestamp":"2025-09-14T18:03:21.642Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T18:03:23.038Z","userAgent":"bruno-runtime/2.10.1"}
{"email":"joao@email.com","level":"info","message":"Creating client","name":"João Silva","service":"ClientService","timestamp":"2025-09-14T18:03:23.045Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T18:03:23.067Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T18:03:24.101Z","userAgent":"bruno-runtime/2.10.1"}
{"email":"joao@email.com","level":"info","message":"Creating client","name":"João Silva","service":"ClientService","timestamp":"2025-09-14T18:03:24.104Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T18:03:24.114Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T18:03:32.376Z","userAgent":"curl/8.5.0"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T18:03:32.378Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:03:32.387Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T18:03:32.395Z"}
{"ip":"::1","level":"info","message":"POST /api/clients","service":"Server","timestamp":"2025-09-14T18:03:35.509Z","userAgent":"bruno-runtime/2.10.1"}
{"email":"joao@esssmail.com","level":"info","message":"Creating client","name":"Joãocsss Silva","service":"ClientService","timestamp":"2025-09-14T18:03:35.514Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients WHERE email = $1 LIMIT 1","timestamp":"2025-09-14T18:03:35.531Z"}
{"duration":20,"level":"debug","message":"Executed query in 20ms","rowCount":1,"service":"Database","text":"\n        INSERT INTO clients (name, email, phone, address, notes)\n        VALUES ($1, $2, $3, $4, $5)\n        RETURNING *\n      ","timestamp":"2025-09-14T18:03:35.552Z"}
{"id":2,"level":"info","message":"Created clients:","service":"ClientRepository","timestamp":"2025-09-14T18:03:35.560Z"}
{"ip":"::1","level":"info","message":"POST /api/categories","service":"Server","timestamp":"2025-09-14T18:03:37.396Z","userAgent":"curl/8.5.0"}
{"level":"info","message":"Creating category","name":"Jardineiro","service":"CategoryService","timestamp":"2025-09-14T18:03:37.398Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":0,"service":"Database","text":"SELECT * FROM categories WHERE name ILIKE $1 LIMIT 1","timestamp":"2025-09-14T18:03:37.406Z"}
{"error":"column \"sort_order\" does not exist","level":"error","message":"Query error","service":"Database","text":"SELECT COALESCE(MAX(sort_order), 0) + 1 as next_order FROM categories","timestamp":"2025-09-14T18:03:37.417Z"}
{"code":"42703","file":"parse_relation.c","length":110,"level":"error","line":"3716","message":"Error getting next sort order: column \"sort_order\" does not exist","name":"error","position":"21","routine":"errorMissingColumn","service":"CategoryRepository","severity":"ERROR","stack":"error: column \"sort_order\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at CategoryRepository.getNextSortOrder (/home/mstech/projetos/app-email-attendant/appserver/repositories/CategoryRepository.ts:140:22)\n    at CategoryService.createCategory (/home/mstech/projetos/app-email-attendant/appserver/services/CategoryService.ts:93:33)\n    at createCategory (/home/mstech/projetos/app-email-attendant/appserver/controllers/CategoryController.ts:99:22)","timestamp":"2025-09-14T18:03:37.461Z"}
{"error":"column \"icon\" of relation \"categories\" does not exist","level":"error","message":"Query error","params":["Jardineiro","Serviços de jardinagem e paisagismo","#2ECC71",null,0],"service":"Database","text":"\n        INSERT INTO categories (name, description, color, icon, sort_order)\n        VALUES ($1, $2, $3, $4, $5)\n        RETURNING *\n      ","timestamp":"2025-09-14T18:03:37.519Z"}
{"code":"42703","file":"parse_target.c","length":127,"level":"error","line":"1065","message":"Error creating categories: column \"icon\" of relation \"categories\" does not exist","name":"error","position":"60","routine":"checkInsertTargets","service":"CategoryRepository","severity":"ERROR","stack":"error: column \"icon\" of relation \"categories\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at CategoryRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at CategoryService.createCategory (/home/mstech/projetos/app-email-attendant/appserver/services/CategoryService.ts:99:14)\n    at createCategory (/home/mstech/projetos/app-email-attendant/appserver/controllers/CategoryController.ts:99:22)","timestamp":"2025-09-14T18:03:37.543Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T18:03:40.619Z","userAgent":"bruno-runtime/2.10.1"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T18:03:40.623Z"}
{"duration":74,"level":"debug","message":"Executed query in 74ms","rowCount":2,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:03:40.702Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T18:03:40.716Z"}
{"ip":"::1","level":"info","message":"POST /api/categories","service":"Server","timestamp":"2025-09-14T18:03:55.089Z","userAgent":"curl/8.5.0"}
{"level":"info","message":"Creating category","name":"Jardineiro","service":"CategoryService","timestamp":"2025-09-14T18:03:55.089Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":0,"service":"Database","text":"SELECT * FROM categories WHERE name ILIKE $1 LIMIT 1","timestamp":"2025-09-14T18:03:55.098Z"}
{"error":"column \"sort_order\" does not exist","level":"error","message":"Query error","service":"Database","text":"SELECT COALESCE(MAX(sort_order), 0) + 1 as next_order FROM categories","timestamp":"2025-09-14T18:03:55.101Z"}
{"code":"42703","file":"parse_relation.c","length":110,"level":"error","line":"3716","message":"Error getting next sort order: column \"sort_order\" does not exist","name":"error","position":"21","routine":"errorMissingColumn","service":"CategoryRepository","severity":"ERROR","stack":"error: column \"sort_order\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at CategoryRepository.getNextSortOrder (/home/mstech/projetos/app-email-attendant/appserver/repositories/CategoryRepository.ts:140:22)\n    at CategoryService.createCategory (/home/mstech/projetos/app-email-attendant/appserver/services/CategoryService.ts:93:33)\n    at createCategory (/home/mstech/projetos/app-email-attendant/appserver/controllers/CategoryController.ts:99:22)","timestamp":"2025-09-14T18:03:55.110Z"}
{"error":"column \"icon\" of relation \"categories\" does not exist","level":"error","message":"Query error","params":["Jardineiro","Serviços de jardinagem e paisagismo","#2ECC71",null,0],"service":"Database","text":"\n        INSERT INTO categories (name, description, color, icon, sort_order)\n        VALUES ($1, $2, $3, $4, $5)\n        RETURNING *\n      ","timestamp":"2025-09-14T18:03:55.140Z"}
{"code":"42703","file":"parse_target.c","length":127,"level":"error","line":"1065","message":"Error creating categories: column \"icon\" of relation \"categories\" does not exist","name":"error","position":"60","routine":"checkInsertTargets","service":"CategoryRepository","severity":"ERROR","stack":"error: column \"icon\" of relation \"categories\" does not exist\n    at /home/mstech/projetos/app-email-attendant/appserver/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Database.query (/home/mstech/projetos/app-email-attendant/appserver/database/Database.ts:39:38)\n    at CategoryRepository.create (/home/mstech/projetos/app-email-attendant/appserver/repositories/BaseRepository.ts:136:22)\n    at CategoryService.createCategory (/home/mstech/projetos/app-email-attendant/appserver/services/CategoryService.ts:99:14)\n    at createCategory (/home/mstech/projetos/app-email-attendant/appserver/controllers/CategoryController.ts:99:22)","timestamp":"2025-09-14T18:03:55.150Z"}
{"level":"info","message":"Received shutdown signal, closing server...","service":"Server","timestamp":"2025-09-14T18:05:57.583Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T18:06:30.292Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T18:06:30.279Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T18:06:30.292Z"}
{"duration":85,"level":"debug","message":"Executed query in 85ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T18:06:30.379Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T18:06:30.380Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T18:06:30.384Z"}
{"duration":10,"level":"debug","message":"Executed query in 10ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T18:06:30.394Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T18:06:30.395Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T18:06:30.396Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T18:06:30.399Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T18:06:30.402Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T18:06:30.403Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T18:06:30.434Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-14T18:06:30.435Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-14T18:06:30.441Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-14T18:06:30.441Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-14T18:06:30.442Z"}
{"level":"info","message":"Setting up API routes","service":"APIRoutes","timestamp":"2025-09-14T18:06:30.405Z"}
{"level":"info","message":"Setting up category routes","service":"CategoryRoutes","timestamp":"2025-09-14T18:06:30.410Z"}
{"level":"info","message":"Setting up service routes","service":"ServiceRoutes","timestamp":"2025-09-14T18:06:30.417Z"}
{"level":"info","message":"Setting up client routes","service":"ClientRoutes","timestamp":"2025-09-14T18:06:30.430Z"}
{"level":"info","message":"Received shutdown signal, closing server...","service":"Server","timestamp":"2025-09-14T18:07:00.875Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T18:13:18.846Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T18:13:18.799Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T18:13:18.842Z"}
{"duration":112,"level":"debug","message":"Executed query in 112ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T18:13:18.963Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T18:13:18.964Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T18:13:18.974Z"}
{"duration":28,"level":"debug","message":"Executed query in 28ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T18:13:19.003Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T18:13:19.004Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T18:13:19.005Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T18:13:19.011Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T18:13:19.015Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T18:13:19.016Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T18:13:19.047Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-14T18:13:19.048Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-14T18:13:19.054Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-14T18:13:19.054Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-14T18:13:19.055Z"}
{"level":"info","message":"Setting up API routes","service":"APIRoutes","timestamp":"2025-09-14T18:13:19.018Z"}
{"level":"info","message":"Setting up client routes","service":"ClientRoutes","timestamp":"2025-09-14T18:13:19.041Z"}
{"level":"info","message":"Setting up service routes","service":"ServiceRoutes","timestamp":"2025-09-14T18:13:19.033Z"}
{"level":"info","message":"Setting up category routes","service":"CategoryRoutes","timestamp":"2025-09-14T18:13:19.024Z"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-14T18:13:20.910Z","userAgent":"curl/8.5.0"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T18:13:38.233Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T18:13:38.099Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T18:13:38.215Z"}
{"duration":564,"level":"debug","message":"Executed query in 564ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T18:13:38.811Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T18:13:38.813Z"}
{"duration":32,"level":"debug","message":"Executed query in 32ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T18:13:38.847Z"}
{"duration":47,"level":"debug","message":"Executed query in 47ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T18:13:38.899Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T18:13:38.900Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T18:13:38.902Z"}
{"duration":24,"level":"debug","message":"Executed query in 24ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T18:13:38.948Z"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T18:13:38.980Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T18:13:38.984Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T18:13:39.219Z"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T18:14:15.547Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T18:14:15.820Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T18:14:15.881Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T18:14:15.916Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T18:14:15.933Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T18:14:15.967Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":239,"level":"debug","message":"Executed query in 239ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T18:14:16.090Z"}
{"duration":136,"level":"debug","message":"Executed query in 136ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T18:14:16.105Z"}
{"duration":29,"level":"debug","message":"Executed query in 29ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T18:14:16.121Z"}
{"duration":20,"level":"debug","message":"Executed query in 20ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T18:14:16.148Z"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T18:14:16.163Z"}
{"duration":35,"level":"debug","message":"Executed query in 35ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T18:14:16.201Z"}
{"duration":25,"level":"debug","message":"Executed query in 25ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T18:14:16.264Z"}
{"duration":50,"level":"debug","message":"Executed query in 50ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T18:14:16.317Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T18:14:26.066Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T18:14:25.980Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T18:14:26.052Z"}
{"duration":402,"level":"debug","message":"Executed query in 402ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T18:14:26.472Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T18:14:26.473Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T18:14:26.491Z"}
{"duration":20,"level":"debug","message":"Executed query in 20ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T18:14:26.512Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T18:14:26.514Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T18:14:26.520Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T18:14:26.528Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T18:14:26.542Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T18:14:26.543Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T18:14:26.607Z"}
{"level":"info","message":"Received shutdown signal, closing server...","service":"Server","timestamp":"2025-09-14T18:15:09.888Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T18:16:47.320Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T18:16:47.308Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T18:16:47.319Z"}
{"duration":190,"level":"debug","message":"Executed query in 190ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T18:16:47.512Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T18:16:47.513Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T18:16:47.523Z"}
{"duration":25,"level":"debug","message":"Executed query in 25ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T18:16:47.549Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T18:16:47.549Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T18:16:47.553Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T18:16:47.569Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T18:16:47.576Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T18:16:47.576Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T18:16:47.623Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-14T18:16:47.624Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-14T18:16:47.635Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-14T18:16:47.636Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-14T18:16:47.637Z"}
{"level":"info","message":"Setting up API routes","service":"APIRoutes","timestamp":"2025-09-14T18:16:47.583Z"}
{"level":"info","message":"Setting up category routes","service":"CategoryRoutes","timestamp":"2025-09-14T18:16:47.592Z"}
{"level":"info","message":"Setting up service routes","service":"ServiceRoutes","timestamp":"2025-09-14T18:16:47.603Z"}
{"level":"info","message":"Setting up client routes","service":"ClientRoutes","timestamp":"2025-09-14T18:16:47.618Z"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-14T18:16:48.860Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T18:17:28.987Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T18:17:29.136Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T18:17:29.142Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T18:17:29.154Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":91,"level":"debug","message":"Executed query in 91ms","rowCount":2,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:17:29.235Z"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T18:17:29.251Z"}
{"duration":128,"level":"debug","message":"Executed query in 128ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T18:17:29.284Z"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T18:17:35.058Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T18:17:35.279Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T18:17:35.286Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T18:17:35.296Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T18:17:35.299Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T18:17:35.303Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T18:17:35.310Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T18:17:35.312Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T18:17:35.315Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T18:17:35.320Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T18:17:35.328Z"}
{"duration":19,"level":"debug","message":"Executed query in 19ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T18:17:35.349Z"}
{"duration":10,"level":"debug","message":"Executed query in 10ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T18:17:35.361Z"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T18:17:35.380Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-14T18:17:37.264Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":0,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:17:37.268Z"}
{"duration":1,"level":"debug","message":"Executed query in 1ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-14T18:17:37.270Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T18:17:39.252Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T18:17:39.255Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T18:17:40.023Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T18:17:40.026Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:17:40.032Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T18:17:40.041Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-14T18:17:41.525Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":0,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-14T18:17:41.529Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T18:17:41.534Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T18:17:41.535Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:17:41.544Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T18:17:41.548Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T18:17:41.550Z"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T18:17:41.557Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":2,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:17:41.561Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T18:17:41.566Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-14T18:17:43.309Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":0,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-14T18:17:43.314Z"}
{"ip":"::1","level":"info","message":"POST /api/emails","service":"Server","timestamp":"2025-09-14T18:17:57.604Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":1,"service":"Database","text":"INSERT INTO emails (gmail_id, subject, sender, date, body, category, processed)\n         VALUES ($1, $2, $3, $4, $5, $6, $7)\n         RETURNING *","timestamp":"2025-09-14T18:17:57.621Z"}
{"ip":"::1","level":"info","message":"POST /api/emails","service":"Server","timestamp":"2025-09-14T18:18:02.643Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":155,"level":"debug","message":"Executed query in 155ms","rowCount":1,"service":"Database","text":"INSERT INTO emails (gmail_id, subject, sender, date, body, category, processed)\n         VALUES ($1, $2, $3, $4, $5, $6, $7)\n         RETURNING *","timestamp":"2025-09-14T18:18:02.800Z"}
{"ip":"::1","level":"info","message":"POST /api/emails","service":"Server","timestamp":"2025-09-14T18:18:06.370Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":37,"level":"debug","message":"Executed query in 37ms","rowCount":1,"service":"Database","text":"INSERT INTO emails (gmail_id, subject, sender, date, body, category, processed)\n         VALUES ($1, $2, $3, $4, $5, $6, $7)\n         RETURNING *","timestamp":"2025-09-14T18:18:06.408Z"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T18:18:12.516Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-14T18:18:12.583Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:18:12.588Z"}
{"duration":1,"level":"debug","message":"Executed query in 1ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-14T18:18:12.590Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T18:18:12.609Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T18:18:12.612Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-14T18:18:15.636Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":0,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-14T18:18:15.640Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T18:18:15.648Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T18:18:15.649Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:18:15.653Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T18:18:15.656Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T18:18:15.659Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T18:18:15.670Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":2,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:18:15.676Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T18:18:15.679Z"}
{"ip":"::1","level":"info","message":"POST /api/quotations","service":"Server","timestamp":"2025-09-14T18:18:28.108Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":1,"service":"Database","text":"INSERT INTO quotations (id, client_name, client_email, client_phone, client_address, services, subtotal, discount, total, status, valid_until, notes) VALUES (gen_random_uuid(), $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING *","timestamp":"2025-09-14T18:18:28.119Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-14T18:18:28.127Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-14T18:18:28.135Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-14T18:18:28.152Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-14T18:18:28.161Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-14T18:18:32.570Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":0,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-14T18:18:32.574Z"}
{"ip":"::1","level":"info","message":"POST /api/appointments","service":"Server","timestamp":"2025-09-14T18:18:40.118Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":1,"service":"Database","text":"INSERT INTO appointments (id, client_id, client_name, service_ids, service_names, date, time, duration, address, notes, status) VALUES (gen_random_uuid(), $1, $2, $3, $4, $5, $6, $7, $8, $9, $10) RETURNING *","timestamp":"2025-09-14T18:18:40.130Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-14T18:18:40.139Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-14T18:18:40.144Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-14T18:18:40.162Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-14T18:18:40.167Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T18:18:40.179Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T18:18:40.179Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":2,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:18:40.182Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T18:18:40.190Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T18:18:43.798Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T18:18:43.801Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T18:18:43.804Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T18:18:43.807Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T18:18:43.816Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T18:18:43.818Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T18:18:43.822Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T18:18:43.824Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T18:18:43.827Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T18:18:43.833Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T18:18:43.842Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T18:18:58.855Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T18:18:58.858Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T18:18:59.859Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T18:18:59.860Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:18:59.866Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T18:18:59.869Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-14T18:23:24.525Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":149,"level":"debug","message":"Executed query in 149ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:23:24.935Z"}
{"duration":38,"level":"debug","message":"Executed query in 38ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-14T18:23:24.977Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T18:23:38.042Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T18:23:38.059Z"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T18:23:38.077Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T18:23:38.130Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":57,"level":"debug","message":"Executed query in 57ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T18:23:38.136Z"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T18:23:38.167Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T18:23:38.170Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T18:23:38.185Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T18:23:38.189Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":28,"level":"debug","message":"Executed query in 28ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T18:23:38.214Z"}
{"duration":67,"level":"debug","message":"Executed query in 67ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T18:23:38.282Z"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T18:23:58.653Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T18:23:59.129Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T18:23:59.141Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T18:23:59.152Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T18:23:59.165Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T18:23:59.181Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T18:23:59.185Z"}
{"duration":10,"level":"debug","message":"Executed query in 10ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T18:23:59.197Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T18:23:59.219Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T18:23:59.253Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":342,"level":"debug","message":"Executed query in 342ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T18:23:59.558Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T18:23:59.789Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":48,"level":"debug","message":"Executed query in 48ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T18:23:59.839Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T18:23:59.906Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T18:24:13.402Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T18:24:13.420Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T18:24:15.240Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T18:24:15.241Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:24:15.248Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T18:24:15.257Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-14T18:24:17.139Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-14T18:24:17.144Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T18:24:17.218Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T18:24:17.231Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T18:24:17.249Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T18:24:17.254Z"}
{"duration":35,"level":"debug","message":"Executed query in 35ms","rowCount":2,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:24:17.269Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T18:24:17.282Z"}
{"duration":106,"level":"debug","message":"Executed query in 106ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:24:17.364Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T18:24:17.371Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-14T18:24:19.796Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-14T18:24:19.807Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-14T18:24:26.414Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:24:26.440Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-14T18:24:26.449Z"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T18:25:23.599Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T18:25:23.751Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T18:25:23.769Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T18:25:23.797Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T18:25:23.831Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T18:25:23.854Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":135,"level":"debug","message":"Executed query in 135ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T18:25:23.888Z"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T18:25:23.908Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T18:25:23.926Z"}
{"duration":19,"level":"debug","message":"Executed query in 19ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T18:25:23.946Z"}
{"duration":21,"level":"debug","message":"Executed query in 21ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T18:25:23.968Z"}
{"duration":25,"level":"debug","message":"Executed query in 25ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T18:25:23.995Z"}
{"duration":155,"level":"debug","message":"Executed query in 155ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T18:25:24.011Z"}
{"duration":36,"level":"debug","message":"Executed query in 36ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T18:25:24.035Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T18:26:18.020Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T18:26:18.021Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T18:26:18.382Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T18:26:18.383Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-14T18:26:18.399Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":94,"level":"debug","message":"Executed query in 94ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:26:18.469Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T18:26:18.474Z"}
{"duration":132,"level":"debug","message":"Executed query in 132ms","rowCount":1,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-14T18:26:18.532Z"}
{"duration":210,"level":"debug","message":"Executed query in 210ms","rowCount":2,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:26:18.593Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T18:26:18.596Z"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T18:28:01.120Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T18:28:01.266Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T18:28:01.312Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T18:28:01.392Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T18:28:01.414Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T18:28:01.432Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":227,"level":"debug","message":"Executed query in 227ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T18:28:01.621Z"}
{"duration":27,"level":"debug","message":"Executed query in 27ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T18:28:01.649Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T18:28:01.654Z"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T18:28:01.670Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T18:28:01.677Z"}
{"duration":338,"level":"debug","message":"Executed query in 338ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T18:28:01.698Z"}
{"duration":18,"level":"debug","message":"Executed query in 18ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T18:28:01.712Z"}
{"duration":33,"level":"debug","message":"Executed query in 33ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T18:28:01.749Z"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-14T18:29:26.700Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T18:29:46.004Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T18:29:46.084Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T18:29:46.105Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T18:29:46.114Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T18:29:46.125Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T18:29:46.131Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":127,"level":"debug","message":"Executed query in 127ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T18:29:46.211Z"}
{"duration":21,"level":"debug","message":"Executed query in 21ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T18:29:46.233Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T18:29:46.236Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T18:29:46.250Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T18:29:46.259Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T18:29:46.267Z"}
{"duration":18,"level":"debug","message":"Executed query in 18ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T18:29:46.286Z"}
{"duration":180,"level":"debug","message":"Executed query in 180ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T18:29:46.312Z"}
{"ip":"::1","level":"info","message":"GET /","service":"Server","timestamp":"2025-09-14T18:29:50.973Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /favicon.ico","service":"Server","timestamp":"2025-09-14T18:29:51.140Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T18:29:59.753Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T18:29:59.885Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T18:29:59.889Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T18:29:59.892Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T18:29:59.900Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T18:29:59.905Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T18:29:59.907Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T18:29:59.909Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T18:29:59.911Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T18:29:59.915Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T18:29:59.920Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T18:29:59.922Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T18:29:59.925Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T18:29:59.929Z"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-14T18:33:17.062Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T18:33:49.133Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T18:33:49.281Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T18:33:49.307Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T18:33:49.423Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T18:33:49.471Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T18:33:49.632Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":966,"level":"debug","message":"Executed query in 966ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T18:33:50.278Z"}
{"duration":679,"level":"debug","message":"Executed query in 679ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T18:33:50.314Z"}
{"duration":84,"level":"debug","message":"Executed query in 84ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T18:33:50.365Z"}
{"duration":27,"level":"debug","message":"Executed query in 27ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T18:33:50.393Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T18:33:50.415Z"}
{"duration":33,"level":"debug","message":"Executed query in 33ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T18:33:50.448Z"}
{"duration":28,"level":"debug","message":"Executed query in 28ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T18:33:50.477Z"}
{"duration":33,"level":"debug","message":"Executed query in 33ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T18:33:50.512Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-14T18:34:05.496Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T18:34:05.557Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T18:34:05.596Z"}
{"duration":196,"level":"debug","message":"Executed query in 196ms","rowCount":1,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-14T18:34:05.723Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T18:34:05.738Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T18:34:05.759Z"}
{"duration":151,"level":"debug","message":"Executed query in 151ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:34:05.831Z"}
{"duration":103,"level":"debug","message":"Executed query in 103ms","rowCount":2,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:34:05.876Z"}
{"duration":21,"level":"debug","message":"Executed query in 21ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T18:34:05.894Z"}
{"duration":23,"level":"debug","message":"Executed query in 23ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T18:34:05.911Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T18:34:07.721Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T18:34:07.722Z"}
{"duration":31,"level":"debug","message":"Executed query in 31ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:34:07.754Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T18:34:07.759Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T18:34:07.771Z"}
{"duration":29,"level":"debug","message":"Executed query in 29ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T18:34:07.789Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-14T18:34:09.956Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:34:09.974Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-14T18:34:09.994Z"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T18:35:15.746Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T18:35:16.156Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T18:35:16.271Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T18:35:16.289Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T18:35:16.306Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T18:35:16.323Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":459,"level":"debug","message":"Executed query in 459ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T18:35:16.797Z"}
{"duration":642,"level":"debug","message":"Executed query in 642ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T18:35:16.808Z"}
{"duration":74,"level":"debug","message":"Executed query in 74ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T18:35:16.882Z"}
{"duration":24,"level":"debug","message":"Executed query in 24ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T18:35:16.907Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T18:35:16.924Z"}
{"duration":19,"level":"debug","message":"Executed query in 19ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T18:35:16.946Z"}
{"duration":46,"level":"debug","message":"Executed query in 46ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T18:35:16.993Z"}
{"duration":36,"level":"debug","message":"Executed query in 36ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T18:35:17.030Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-14T18:35:26.366Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:35:26.388Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-14T18:35:26.395Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T18:35:27.946Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T18:35:27.954Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T18:35:29.313Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T18:35:29.319Z"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:35:29.334Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T18:35:29.338Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-14T18:35:29.929Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T18:35:30.137Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T18:35:30.153Z"}
{"duration":25,"level":"debug","message":"Executed query in 25ms","rowCount":1,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-14T18:35:30.156Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T18:35:30.218Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T18:35:30.219Z"}
{"duration":171,"level":"debug","message":"Executed query in 171ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:35:30.325Z"}
{"duration":117,"level":"debug","message":"Executed query in 117ms","rowCount":2,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:35:30.338Z"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T18:35:30.340Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T18:35:30.355Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-14T18:35:31.338Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":19,"level":"debug","message":"Executed query in 19ms","rowCount":1,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-14T18:35:31.359Z"}
{"ip":"::1","level":"info","message":"POST /api/quotations","service":"Server","timestamp":"2025-09-14T18:36:50.892Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":100,"level":"debug","message":"Executed query in 100ms","rowCount":1,"service":"Database","text":"INSERT INTO quotations (id, client_name, client_email, client_phone, client_address, services, subtotal, discount, total, status, valid_until, notes) VALUES (gen_random_uuid(), $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING *","timestamp":"2025-09-14T18:36:50.996Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-14T18:36:51.026Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":91,"level":"debug","message":"Executed query in 91ms","rowCount":2,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-14T18:36:51.121Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-14T18:36:51.140Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":2,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-14T18:36:51.149Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/yearly","service":"Server","timestamp":"2025-09-14T18:37:01.214Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/weekly","service":"Server","timestamp":"2025-09-14T18:37:03.405Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/daily","service":"Server","timestamp":"2025-09-14T18:37:05.021Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T18:38:49.140Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T18:38:49.121Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T18:38:49.137Z"}
{"duration":160,"level":"debug","message":"Executed query in 160ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T18:38:49.302Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T18:38:49.303Z"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T18:38:49.315Z"}
{"duration":49,"level":"debug","message":"Executed query in 49ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T18:38:49.365Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T18:38:49.366Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T18:38:49.368Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T18:38:49.379Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T18:38:49.387Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T18:38:49.387Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T18:38:49.424Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-14T18:38:49.425Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-14T18:38:49.436Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-14T18:38:49.437Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-14T18:38:49.437Z"}
{"level":"info","message":"Setting up API routes","service":"APIRoutes","timestamp":"2025-09-14T18:38:49.390Z"}
{"level":"info","message":"Setting up client routes","service":"ClientRoutes","timestamp":"2025-09-14T18:38:49.420Z"}
{"level":"info","message":"Setting up service routes","service":"ServiceRoutes","timestamp":"2025-09-14T18:38:49.406Z"}
{"level":"info","message":"Setting up category routes","service":"CategoryRoutes","timestamp":"2025-09-14T18:38:49.396Z"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-14T18:38:49.759Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T18:39:09.553Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T18:39:09.731Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T18:39:09.810Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":136,"level":"debug","message":"Executed query in 136ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T18:39:09.894Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T18:39:09.907Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T18:39:09.912Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T18:39:09.929Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":96,"level":"debug","message":"Executed query in 96ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T18:39:09.992Z"}
{"duration":35,"level":"debug","message":"Executed query in 35ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T18:39:10.030Z"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T18:39:10.042Z"}
{"duration":56,"level":"debug","message":"Executed query in 56ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T18:39:10.098Z"}
{"duration":18,"level":"debug","message":"Executed query in 18ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T18:39:10.117Z"}
{"duration":204,"level":"debug","message":"Executed query in 204ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T18:39:10.135Z"}
{"duration":32,"level":"debug","message":"Executed query in 32ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T18:39:10.153Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-14T18:39:12.634Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":35,"level":"debug","message":"Executed query in 35ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:39:12.672Z"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-14T18:39:12.685Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T18:39:13.171Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T18:39:13.189Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T18:39:14.338Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T18:39:14.356Z"}
{"duration":27,"level":"debug","message":"Executed query in 27ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:39:14.392Z"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T18:39:14.423Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-14T18:39:15.317Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":29,"level":"debug","message":"Executed query in 29ms","rowCount":2,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-14T18:39:15.350Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T18:39:15.398Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T18:39:15.407Z"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":2,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:39:15.419Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T18:39:15.425Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T18:39:15.439Z"}
{"duration":20,"level":"debug","message":"Executed query in 20ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T18:39:15.443Z"}
{"duration":19,"level":"debug","message":"Executed query in 19ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T18:39:15.460Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T18:39:15.473Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-14T18:39:16.412Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":1,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-14T18:39:16.428Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T18:55:24.882Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T18:55:24.799Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T18:55:24.879Z"}
{"duration":537,"level":"debug","message":"Executed query in 537ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T18:55:25.432Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T18:55:25.438Z"}
{"duration":49,"level":"debug","message":"Executed query in 49ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T18:55:25.491Z"}
{"duration":71,"level":"debug","message":"Executed query in 71ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T18:55:25.574Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T18:55:25.576Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T18:55:25.578Z"}
{"duration":10,"level":"debug","message":"Executed query in 10ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T18:55:25.602Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T18:55:25.644Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T18:55:25.753Z"}
{"duration":26,"level":"debug","message":"Executed query in 26ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T18:55:25.636Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-14T18:55:25.758Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-14T18:55:25.777Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-14T18:55:25.778Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-14T18:55:25.778Z"}
{"level":"info","message":"Setting up API routes","service":"APIRoutes","timestamp":"2025-09-14T18:55:25.659Z"}
{"level":"info","message":"Setting up client routes","service":"ClientRoutes","timestamp":"2025-09-14T18:55:25.739Z"}
{"level":"info","message":"Setting up service routes","service":"ServiceRoutes","timestamp":"2025-09-14T18:55:25.708Z"}
{"level":"info","message":"Setting up category routes","service":"CategoryRoutes","timestamp":"2025-09-14T18:55:25.681Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T19:05:56.070Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T19:05:56.058Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T19:05:56.069Z"}
{"duration":168,"level":"debug","message":"Executed query in 168ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T19:05:56.240Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T19:05:56.241Z"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T19:05:56.253Z"}
{"duration":45,"level":"debug","message":"Executed query in 45ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T19:05:56.299Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T19:05:56.300Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T19:05:56.301Z"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T19:05:56.313Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T19:05:56.319Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T19:05:56.319Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T19:05:56.363Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-14T19:05:56.365Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-14T19:05:56.373Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-14T19:05:56.373Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-14T19:05:56.374Z"}
{"level":"info","message":"Setting up client routes","service":"ClientRoutes","timestamp":"2025-09-14T19:05:56.356Z"}
{"level":"info","message":"Setting up API routes","service":"APIRoutes","timestamp":"2025-09-14T19:05:56.322Z"}
{"level":"info","message":"Setting up service routes","service":"ServiceRoutes","timestamp":"2025-09-14T19:05:56.346Z"}
{"level":"info","message":"Setting up category routes","service":"CategoryRoutes","timestamp":"2025-09-14T19:05:56.334Z"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-14T19:05:56.843Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T19:06:18.890Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T19:06:19.170Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T19:06:19.210Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T19:06:19.239Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T19:06:19.267Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T19:06:19.272Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":298,"level":"debug","message":"Executed query in 298ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T19:06:19.477Z"}
{"duration":86,"level":"debug","message":"Executed query in 86ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T19:06:19.565Z"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T19:06:19.576Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T19:06:19.581Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T19:06:19.597Z"}
{"duration":28,"level":"debug","message":"Executed query in 28ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T19:06:19.628Z"}
{"duration":418,"level":"debug","message":"Executed query in 418ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T19:06:19.692Z"}
{"duration":92,"level":"debug","message":"Executed query in 92ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T19:06:19.729Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-14T19:06:39.523Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":102,"level":"debug","message":"Executed query in 102ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T19:06:39.630Z"}
{"duration":30,"level":"debug","message":"Executed query in 30ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-14T19:06:39.664Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T19:06:40.332Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T19:06:40.338Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T19:06:41.450Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T19:06:41.452Z"}
{"duration":10,"level":"debug","message":"Executed query in 10ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T19:06:41.466Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T19:06:41.472Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-14T19:06:42.203Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":2,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-14T19:06:42.217Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T19:06:42.233Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T19:06:42.235Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T19:06:42.253Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T19:06:42.255Z"}
{"duration":19,"level":"debug","message":"Executed query in 19ms","rowCount":2,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T19:06:42.264Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T19:06:42.272Z"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T19:06:42.284Z"}
{"duration":330,"level":"debug","message":"Executed query in 330ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T19:06:42.609Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-14T19:06:43.837Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":129,"level":"debug","message":"Executed query in 129ms","rowCount":1,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-14T19:06:43.969Z"}
{"ip":"::1","level":"info","message":"POST /api/appointments","service":"Server","timestamp":"2025-09-14T19:06:55.953Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":28,"level":"debug","message":"Executed query in 28ms","rowCount":1,"service":"Database","text":"INSERT INTO appointments (id, client_id, client_name, service_ids, service_names, date, time, duration, address, notes, status) VALUES (gen_random_uuid(), $1, $2, $3, $4, $5, $6, $7, $8, $9, $10) RETURNING *","timestamp":"2025-09-14T19:06:55.984Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-14T19:06:56.004Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":2,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-14T19:06:56.023Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-14T19:06:56.055Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","rowCount":2,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-14T19:06:56.075Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T19:06:56.096Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T19:06:56.098Z"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":2,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T19:06:56.115Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T19:06:56.125Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T19:09:56.684Z","userAgent":"curl/8.5.0"}
{"duration":66,"level":"debug","message":"Executed query in 66ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T19:09:56.753Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T19:09:56.757Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T19:09:56.764Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T19:09:56.771Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T19:09:56.775Z"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T19:09:56.789Z"}
{"duration":18,"level":"debug","message":"Executed query in 18ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T19:09:56.808Z"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-14T19:10:02.615Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T19:10:08.319Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T19:10:08.549Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":18,"level":"debug","message":"Executed query in 18ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T19:10:08.568Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T19:10:08.574Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T19:10:08.579Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T19:10:08.584Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T19:10:08.589Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T19:10:08.600Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T19:10:08.605Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T19:10:08.633Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T19:10:08.648Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T19:10:08.664Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T19:10:08.668Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T19:10:08.686Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T19:10:10.082Z","userAgent":"curl/8.5.0"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T19:10:10.087Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T19:10:10.092Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T19:10:10.096Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T19:10:10.101Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T19:10:10.104Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T19:10:10.112Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T19:10:10.116Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T19:11:42.544Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":153,"level":"debug","message":"Executed query in 153ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T19:11:42.699Z"}
{"duration":19,"level":"debug","message":"Executed query in 19ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T19:11:42.719Z"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T19:11:42.732Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T19:11:42.737Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T19:11:42.750Z"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T19:11:42.765Z"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T19:11:42.782Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T19:11:44.755Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":37,"level":"debug","message":"Executed query in 37ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T19:11:44.793Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T19:11:44.809Z"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T19:11:44.822Z"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T19:11:44.839Z"}
{"duration":23,"level":"debug","message":"Executed query in 23ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T19:11:44.863Z"}
{"duration":30,"level":"debug","message":"Executed query in 30ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T19:11:44.894Z"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T19:11:44.911Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T19:11:52.406Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T19:11:52.414Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":2,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T19:11:52.423Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-14T19:11:52.436Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":26,"level":"debug","message":"Executed query in 26ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T19:11:52.451Z"}
{"duration":148,"level":"debug","message":"Executed query in 148ms","rowCount":2,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-14T19:11:52.587Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T19:11:55.162Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T19:11:55.191Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-14T19:11:55.195Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":-133,"level":"debug","message":"Executed query in -133ms","rowCount":5,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T19:11:55.059Z"}
{"duration":-119,"level":"debug","message":"Executed query in -119ms","rowCount":2,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-14T19:11:55.091Z"}
{"duration":34,"level":"debug","message":"Executed query in 34ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T19:11:55.107Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-14T19:11:55.964Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":3,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T19:11:55.972Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-14T19:11:55.981Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T19:11:56.598Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T19:11:56.604Z"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T19:11:56.617Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T19:11:56.621Z"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T19:11:56.634Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T19:11:56.639Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T19:11:56.654Z"}
{"duration":10,"level":"debug","message":"Executed query in 10ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T19:11:56.665Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T19:11:58.078Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T19:11:58.085Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T19:11:58.090Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T19:11:58.106Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T19:11:58.114Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T19:11:58.117Z"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T19:11:58.130Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T19:11:58.135Z"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T19:12:17.269Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T19:12:17.568Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T19:12:17.585Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T19:12:17.590Z"}
{"duration":110,"level":"debug","message":"Executed query in 110ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T19:12:17.705Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T19:12:17.734Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":24,"level":"debug","message":"Executed query in 24ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T19:12:17.742Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T19:12:17.773Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":45,"level":"debug","message":"Executed query in 45ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T19:12:17.788Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T19:12:17.791Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":48,"level":"debug","message":"Executed query in 48ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T19:12:17.837Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T19:12:17.870Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":79,"level":"debug","message":"Executed query in 79ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T19:12:17.853Z"}
{"duration":53,"level":"debug","message":"Executed query in 53ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T19:12:17.892Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T19:12:52.858Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":84,"level":"debug","message":"Executed query in 84ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T19:12:52.955Z"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T19:12:52.969Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T19:12:52.974Z"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T19:12:52.986Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T19:12:52.990Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T19:12:53.014Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T19:12:53.029Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T19:12:53.231Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T19:12:53.236Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T19:12:53.240Z"}
{"duration":10,"level":"debug","message":"Executed query in 10ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T19:12:53.253Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T19:12:53.259Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T19:12:53.264Z"}
{"duration":10,"level":"debug","message":"Executed query in 10ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T19:12:53.276Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T19:12:53.281Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T19:12:54.092Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T19:12:54.097Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T19:12:54.104Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T19:12:54.113Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T19:12:54.117Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T19:12:54.122Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T19:12:54.127Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T19:12:54.132Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T19:13:14.316Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":26,"level":"debug","message":"Executed query in 26ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T19:13:14.344Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T19:13:14.350Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T19:13:14.353Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T19:13:14.363Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T19:13:14.366Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T19:13:14.377Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T19:13:14.380Z"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-14T19:13:25.843Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T19:14:00.008Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T19:14:00.064Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T19:14:00.119Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T19:14:00.200Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T19:14:00.216Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":164,"level":"debug","message":"Executed query in 164ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T19:14:00.229Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T19:14:00.237Z"}
{"duration":16,"level":"debug","message":"Executed query in 16ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T19:14:00.255Z"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T19:14:00.268Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T19:14:00.271Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T19:14:00.276Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T19:14:00.284Z"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T19:14:00.302Z"}
{"duration":92,"level":"debug","message":"Executed query in 92ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T19:14:00.364Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-14T19:14:04.985Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T19:14:04.990Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T19:14:04.989Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":2,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-14T19:14:04.994Z"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","rowCount":2,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T19:14:05.003Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T19:14:05.005Z"}
{"ip":"::1","level":"info","message":"POST /api/appointments","service":"Server","timestamp":"2025-09-14T19:14:13.400Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":18,"level":"debug","message":"Executed query in 18ms","rowCount":1,"service":"Database","text":"INSERT INTO appointments (id, client_id, client_name, service_ids, service_names, date, time, duration, address, notes, status) VALUES (gen_random_uuid(), $1, $2, $3, $4, $5, $6, $7, $8, $9, $10) RETURNING *","timestamp":"2025-09-14T19:14:13.419Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-14T19:14:13.431Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":3,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-14T19:14:13.440Z"}
{"ip":"::1","level":"info","message":"GET /api/appointments","service":"Server","timestamp":"2025-09-14T19:14:13.467Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":3,"service":"Database","text":"SELECT * FROM appointments WHERE 1=1 ORDER BY date DESC, time DESC","timestamp":"2025-09-14T19:14:13.473Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T19:14:13.486Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T19:14:13.488Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":2,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T19:14:13.499Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T19:14:13.503Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T19:14:16.452Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query in 1ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T19:14:16.454Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T19:14:16.457Z"}
{"duration":1,"level":"debug","message":"Executed query in 1ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T19:14:16.458Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T19:14:16.461Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T19:14:16.464Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T19:14:16.467Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":4,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T19:14:16.471Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T20:13:36.345Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T20:13:36.310Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T20:13:36.343Z"}
{"duration":132,"level":"debug","message":"Executed query in 132ms","rowCount":0,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T20:13:36.481Z"}
{"duration":28,"level":"debug","message":"Executed query in 28ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS emails (\n      id SERIAL PRIMARY KEY,\n      gmail_id VARCHAR(255) UNIQUE NOT NULL,\n      subject TEXT NOT NULL,\n      sender VARCHAR(500) NOT NULL,\n      date TIMESTAMP NOT NULL,\n      body TEXT,\n      snippet TEXT,\n      category VARCHAR(100),\n      confidence DECIMAL(3,2),\n      processed BOOLEAN DEFAULT FALSE,\n      responded BOOLEAN DEFAULT FALSE,\n      response_template VARCHAR(255),\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T20:13:36.511Z"}
{"duration":36,"level":"debug","message":"Executed query in 36ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS categories (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) UNIQUE NOT NULL,\n      description TEXT,\n      keywords JSONB NOT NULL DEFAULT '[]',\n      patterns JSONB NOT NULL DEFAULT '[]',\n      domains JSONB NOT NULL DEFAULT '[]',\n      color VARCHAR(7) NOT NULL DEFAULT '#3B82F6',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T20:13:36.550Z"}
{"duration":36,"level":"debug","message":"Executed query in 36ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS services (\n      id VARCHAR(255) PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      description TEXT NOT NULL,\n      category VARCHAR(100) NOT NULL,\n      price DECIMAL(10,2) NOT NULL DEFAULT 0,\n      unit VARCHAR(50) NOT NULL DEFAULT 'hour',\n      estimated_time VARCHAR(100),\n      materials JSONB DEFAULT '[]',\n      active BOOLEAN DEFAULT TRUE,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T20:13:36.588Z"}
{"duration":34,"level":"debug","message":"Executed query in 34ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS clients (\n      id SERIAL PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      email VARCHAR(255) NOT NULL,\n      phone VARCHAR(50),\n      address TEXT,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T20:13:36.626Z"}
{"duration":34,"level":"debug","message":"Executed query in 34ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS quotations (\n      id VARCHAR(255) PRIMARY KEY,\n      client_email VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      client_phone VARCHAR(50),\n      client_address TEXT,\n      services JSONB NOT NULL DEFAULT '[]',\n      subtotal DECIMAL(10,2) NOT NULL DEFAULT 0,\n      discount DECIMAL(10,2) NOT NULL DEFAULT 0,\n      total DECIMAL(10,2) NOT NULL DEFAULT 0,\n      status VARCHAR(50) NOT NULL DEFAULT 'draft',\n      valid_until DATE,\n      notes TEXT,\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T20:13:36.662Z"}
{"duration":34,"level":"debug","message":"Executed query in 34ms","rowCount":null,"service":"Database","text":"\n    CREATE TABLE IF NOT EXISTS appointments (\n      id VARCHAR(255) PRIMARY KEY,\n      client_id VARCHAR(255) NOT NULL,\n      client_name VARCHAR(255) NOT NULL,\n      service_ids JSONB DEFAULT '[]',\n      service_names JSONB DEFAULT '[]',\n      date DATE NOT NULL,\n      time TIME NOT NULL,\n      duration INTEGER DEFAULT 120,\n      address TEXT,\n      notes TEXT,\n      status VARCHAR(50) NOT NULL DEFAULT 'scheduled',\n      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n  ","timestamp":"2025-09-14T20:13:36.699Z"}
{"duration":64,"level":"debug","message":"Executed query in 64ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T20:13:36.766Z"}
{"duration":43,"level":"debug","message":"Executed query in 43ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T20:13:36.825Z"}
{"level":"info","message":"Migrations completed","service":"DBMigrations","timestamp":"2025-09-14T20:13:36.828Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T20:13:36.833Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T20:13:36.851Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T20:13:36.856Z"}
{"level":"info","message":"Database is empty, seeding default data...","service":"DataSeeder","timestamp":"2025-09-14T20:13:36.856Z"}
{"duration":23,"level":"debug","message":"Executed query in 23ms","rowCount":1,"service":"Database","text":"INSERT INTO categories (name, description, color) \n         VALUES ($1, $2, $3)","timestamp":"2025-09-14T20:13:36.881Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"INSERT INTO categories (name, description, color) \n         VALUES ($1, $2, $3)","timestamp":"2025-09-14T20:13:36.890Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":1,"service":"Database","text":"INSERT INTO categories (name, description, color) \n         VALUES ($1, $2, $3)","timestamp":"2025-09-14T20:13:36.901Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"INSERT INTO categories (name, description, color) \n         VALUES ($1, $2, $3)","timestamp":"2025-09-14T20:13:36.909Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":1,"service":"Database","text":"INSERT INTO categories (name, description, color) \n         VALUES ($1, $2, $3)","timestamp":"2025-09-14T20:13:36.919Z"}
{"level":"info","message":"Seeded 5 default categories","service":"DataSeeder","timestamp":"2025-09-14T20:13:36.920Z"}
{"error":"column \"duration\" of relation \"services\" does not exist","level":"error","message":"Query error","params":["Instalação Elétrica","Instalação completa de sistema elétrico residencial","Eletricista",80,"4-8 horas"],"service":"Database","text":"INSERT INTO services (name, description, category, price, duration) \n         VALUES ($1, $2, $3, $4, $5)","timestamp":"2025-09-14T20:13:36.937Z"}
{"level":"error","message":"Failed to seed default data:","service":"DataSeeder","timestamp":"2025-09-14T20:13:36.941Z"}
{"level":"error","message":"Failed to initialize database","service":"Server","timestamp":"2025-09-14T20:13:36.942Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T20:18:24.683Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T20:18:24.667Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T20:18:24.681Z"}
{"duration":77,"level":"debug","message":"Executed query in 77ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T20:18:24.762Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T20:18:24.763Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T20:18:24.768Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T20:18:24.778Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T20:18:24.779Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T20:18:24.781Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T20:18:24.785Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T20:18:24.791Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T20:18:24.792Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T20:18:24.826Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-14T20:18:24.827Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-14T20:18:24.837Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-14T20:18:24.837Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-14T20:18:24.838Z"}
{"level":"info","message":"Setting up API routes","service":"APIRoutes","timestamp":"2025-09-14T20:18:24.795Z"}
{"level":"info","message":"Setting up client routes","service":"ClientRoutes","timestamp":"2025-09-14T20:18:24.820Z"}
{"level":"info","message":"Setting up service routes","service":"ServiceRoutes","timestamp":"2025-09-14T20:18:24.813Z"}
{"level":"info","message":"Setting up category routes","service":"CategoryRoutes","timestamp":"2025-09-14T20:18:24.802Z"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-14T20:18:25.961Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T20:19:19.983Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T20:19:20.215Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T20:19:20.231Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T20:19:20.266Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T20:19:20.289Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T20:19:20.307Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":185,"level":"debug","message":"Executed query in 185ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T20:19:20.408Z"}
{"duration":106,"level":"debug","message":"Executed query in 106ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T20:19:20.415Z"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T20:19:20.423Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T20:19:20.428Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T20:19:20.433Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T20:19:20.443Z"}
{"duration":10,"level":"debug","message":"Executed query in 10ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T20:19:20.456Z"}
{"duration":23,"level":"debug","message":"Executed query in 23ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T20:19:20.483Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T20:19:27.340Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T20:19:27.345Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-14T20:19:28.524Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":0,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T20:19:28.538Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-14T20:19:28.542Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T20:19:31.432Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T20:19:31.434Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":0,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T20:19:31.439Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T20:19:31.442Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-14T20:19:38.307Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":0,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-14T20:19:38.311Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T20:19:38.315Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T20:19:38.317Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":0,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T20:19:38.321Z"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T20:19:38.337Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T20:19:38.348Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T20:19:38.327Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T20:19:38.364Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T20:19:38.370Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T20:19:39.924Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T20:19:39.928Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T20:19:39.931Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T20:19:39.935Z"}
{"duration":1,"level":"debug","message":"Executed query in 1ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T20:19:39.937Z"}
{"duration":1,"level":"debug","message":"Executed query in 1ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T20:19:39.939Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T20:19:39.948Z"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T20:19:39.955Z"}
{"ip":"::1","level":"info","message":"POST /api/emails","service":"Server","timestamp":"2025-09-14T20:20:32.445Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":52,"level":"debug","message":"Executed query in 52ms","rowCount":1,"service":"Database","text":"INSERT INTO emails (gmail_id, subject, sender, date, body, category, processed)\n         VALUES ($1, $2, $3, $4, $5, $6, $7)\n         RETURNING *","timestamp":"2025-09-14T20:20:32.498Z"}
{"ip":"::1","level":"info","message":"POST /api/emails","service":"Server","timestamp":"2025-09-14T20:20:33.804Z","userAgent":"bruno-runtime/2.10.1"}
{"error":"duplicate key value violates unique constraint \"emails_gmail_id_key\"","level":"error","message":"Query error","params":["uniquggggggggge-xxx-id-123","Assunto do Email","Nome do Remetente <remetente@email.com>","2025-09-12T13:35:49.795Z","Corpo do email...","Eletricista",false],"service":"Database","text":"INSERT INTO emails (gmail_id, subject, sender, date, body, category, processed)\n         VALUES ($1, $2, $3, $4, $5, $6, $7)\n         RETURNING *","timestamp":"2025-09-14T20:20:33.809Z"}
{"ip":"::1","level":"info","message":"POST /api/emails","service":"Server","timestamp":"2025-09-14T20:20:37.421Z","userAgent":"bruno-runtime/2.10.1"}
{"duration":30,"level":"debug","message":"Executed query in 30ms","rowCount":1,"service":"Database","text":"INSERT INTO emails (gmail_id, subject, sender, date, body, category, processed)\n         VALUES ($1, $2, $3, $4, $5, $6, $7)\n         RETURNING *","timestamp":"2025-09-14T20:20:37.451Z"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T20:20:51.985Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/clients","service":"Server","timestamp":"2025-09-14T20:20:52.050Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all clients","params":{},"service":"ClientService","timestamp":"2025-09-14T20:20:52.052Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":0,"service":"Database","text":"SELECT * FROM clients ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T20:20:52.059Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM clients","timestamp":"2025-09-14T20:20:52.069Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T20:20:52.091Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":10,"level":"debug","message":"Executed query in 10ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T20:20:52.103Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T20:20:54.612Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T20:20:54.616Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T20:20:54.621Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T20:20:54.630Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T20:20:54.636Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T20:20:54.641Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":24,"level":"debug","message":"Executed query in 24ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T20:20:54.661Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T20:20:54.679Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":35,"level":"debug","message":"Executed query in 35ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T20:20:54.699Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T20:20:54.716Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":32,"level":"debug","message":"Executed query in 32ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T20:20:54.733Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-14T20:20:56.166Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":2,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T20:20:56.169Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-14T20:20:56.171Z"}
{"ip":"::1","level":"info","message":"GET /api/quotations","service":"Server","timestamp":"2025-09-14T20:20:59.180Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T20:20:59.182Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T20:20:59.183Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":0,"service":"Database","text":"SELECT * FROM quotations WHERE 1=1 ORDER BY created_at DESC","timestamp":"2025-09-14T20:20:59.185Z"}
{"duration":54,"level":"debug","message":"Executed query in 54ms","rowCount":0,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T20:20:59.237Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T20:20:59.258Z"}
{"ip":"::1","level":"info","message":"GET /api/services","service":"Server","timestamp":"2025-09-14T20:21:00.152Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"info","message":"Getting all services","params":{},"service":"ServiceService","timestamp":"2025-09-14T20:21:00.154Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T20:21:00.156Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":0,"service":"Database","text":"SELECT * FROM services ORDER BY created_at DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T20:21:00.159Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T20:21:00.161Z"}
{"duration":9,"level":"debug","message":"Executed query in 9ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM services","timestamp":"2025-09-14T20:21:00.170Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T20:21:02.274Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T20:21:02.280Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T20:21:02.284Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T20:21:02.286Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T20:21:02.290Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T20:21:02.298Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T20:21:02.304Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T20:21:02.311Z"}
{"level":"info","message":"Received shutdown signal, closing server...","service":"Server","timestamp":"2025-09-14T20:21:13.177Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T20:49:16.038Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T20:49:16.017Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T20:49:16.037Z"}
{"duration":156,"level":"debug","message":"Executed query in 156ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T20:49:16.195Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T20:49:16.195Z"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T20:49:16.209Z"}
{"duration":37,"level":"debug","message":"Executed query in 37ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T20:49:16.246Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T20:49:16.248Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T20:49:16.249Z"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T20:49:16.262Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T20:49:16.269Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T20:49:16.270Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T20:49:16.300Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-14T20:49:16.301Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-14T20:49:16.307Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-14T20:49:16.308Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-14T20:49:16.308Z"}
{"level":"info","message":"Setting up API routes","service":"APIRoutes","timestamp":"2025-09-14T20:49:16.272Z"}
{"level":"info","message":"Setting up client routes","service":"ClientRoutes","timestamp":"2025-09-14T20:49:16.294Z"}
{"level":"info","message":"Setting up service routes","service":"ServiceRoutes","timestamp":"2025-09-14T20:49:16.288Z"}
{"level":"info","message":"Setting up category routes","service":"CategoryRoutes","timestamp":"2025-09-14T20:49:16.280Z"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-14T20:49:17.238Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T20:49:34.835Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T20:49:35.075Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":7,"level":"debug","message":"Executed query in 7ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T20:49:35.089Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T20:49:35.094Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":24,"level":"debug","message":"Executed query in 24ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T20:49:35.115Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T20:49:35.130Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":38,"level":"debug","message":"Executed query in 38ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T20:49:35.153Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T20:49:35.157Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":18,"level":"debug","message":"Executed query in 18ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T20:49:35.173Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T20:49:35.184Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":36,"level":"debug","message":"Executed query in 36ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T20:49:35.212Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T20:49:35.230Z"}
{"duration":21,"level":"debug","message":"Executed query in 21ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T20:49:35.261Z"}
{"duration":128,"level":"debug","message":"Executed query in 128ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T20:49:35.319Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T20:50:35.339Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":28,"level":"debug","message":"Executed query in 28ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T20:50:35.368Z"}
{"duration":6,"level":"debug","message":"Executed query in 6ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T20:50:35.377Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T20:50:35.382Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T20:50:35.386Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T20:50:35.393Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T20:50:35.400Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T20:50:35.406Z"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T20:50:37.825Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T20:50:37.830Z"}
{"ip":"::1","level":"info","message":"GET /api/emails","service":"Server","timestamp":"2025-09-14T20:50:39.409Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":17,"level":"debug","message":"Executed query in 17ms","rowCount":2,"service":"Database","text":"SELECT * FROM emails ORDER BY date DESC LIMIT $1 OFFSET $2","timestamp":"2025-09-14T20:50:39.428Z"}
{"duration":4,"level":"debug","message":"Executed query in 4ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as total FROM emails","timestamp":"2025-09-14T20:50:39.433Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T20:50:41.898Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T20:50:41.901Z"}
{"duration":1,"level":"debug","message":"Executed query in 1ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T20:50:41.904Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T20:50:41.906Z"}
{"duration":2,"level":"debug","message":"Executed query in 2ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T20:50:41.909Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T20:50:41.912Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T20:50:41.915Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T20:50:41.924Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T21:01:39.029Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T21:01:39.067Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T21:01:39.087Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T21:01:39.111Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":155,"level":"debug","message":"Executed query in 155ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T21:01:39.225Z"}
{"duration":21,"level":"debug","message":"Executed query in 21ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T21:01:39.248Z"}
{"duration":5,"level":"debug","message":"Executed query in 5ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T21:01:39.255Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T21:01:39.272Z"}
{"duration":14,"level":"debug","message":"Executed query in 14ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T21:01:39.287Z"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T21:01:39.300Z"}
{"duration":8,"level":"debug","message":"Executed query in 8ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T21:01:39.309Z"}
{"level":"info","message":"Received shutdown signal, closing server...","service":"Server","timestamp":"2025-09-14T21:02:44.378Z"}
{"level":"info","message":"Running database migrations...","service":"DBMigrations","timestamp":"2025-09-14T21:44:53.382Z"}
{"level":"info","message":"Starting server with PostgreSQL database...","service":"Server","timestamp":"2025-09-14T21:44:53.243Z"}
{"level":"info","message":"Running database migrations...","service":"Server","timestamp":"2025-09-14T21:44:53.377Z"}
{"duration":497,"level":"debug","message":"Executed query in 497ms","rowCount":6,"service":"Database","text":"\n    SELECT table_name \n    FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name IN ('emails', 'categories', 'services', 'clients', 'quotations', 'appointments');\n  ","timestamp":"2025-09-14T21:44:53.898Z"}
{"level":"info","message":"Tables already exist: emails, categories, services, clients, quotations, appointments. Skipping table creation.","service":"DBMigrations","timestamp":"2025-09-14T21:44:53.902Z"}
{"duration":62,"level":"debug","message":"Executed query in 62ms","service":"Database","text":"\n    CREATE INDEX IF NOT EXISTS idx_emails_gmail_id ON emails(gmail_id);\n    CREATE INDEX IF NOT EXISTS idx_emails_category ON emails(category);\n    CREATE INDEX IF NOT EXISTS idx_emails_date ON emails(date);\n    CREATE INDEX IF NOT EXISTS idx_emails_processed ON emails(processed);\n    CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);\n    CREATE INDEX IF NOT EXISTS idx_categories_active ON categories(active);\n    CREATE INDEX IF NOT EXISTS idx_services_category ON services(category);\n    CREATE INDEX IF NOT EXISTS idx_services_active ON services(active);\n    CREATE INDEX IF NOT EXISTS idx_clients_email ON clients(email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_client_email ON quotations(client_email);\n    CREATE INDEX IF NOT EXISTS idx_quotations_status ON quotations(status);\n    CREATE INDEX IF NOT EXISTS idx_appointments_client_id ON appointments(client_id);\n    CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n    CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n  ","timestamp":"2025-09-14T21:44:53.970Z"}
{"duration":124,"level":"debug","message":"Executed query in 124ms","service":"Database","text":"\n    CREATE OR REPLACE FUNCTION update_updated_at_column()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      NEW.updated_at = CURRENT_TIMESTAMP;\n      RETURN NEW;\n    END;\n    $$ language 'plpgsql';\n\n    DROP TRIGGER IF EXISTS update_emails_updated_at ON emails;\n    CREATE TRIGGER update_emails_updated_at\n      BEFORE UPDATE ON emails\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;\n    CREATE TRIGGER update_categories_updated_at\n      BEFORE UPDATE ON categories\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_services_updated_at ON services;\n    CREATE TRIGGER update_services_updated_at\n      BEFORE UPDATE ON services\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_clients_updated_at ON clients;\n    CREATE TRIGGER update_clients_updated_at\n      BEFORE UPDATE ON clients\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_quotations_updated_at ON quotations;\n    CREATE TRIGGER update_quotations_updated_at\n      BEFORE UPDATE ON quotations\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n\n    DROP TRIGGER IF EXISTS update_appointments_updated_at ON appointments;\n    CREATE TRIGGER update_appointments_updated_at\n      BEFORE UPDATE ON appointments\n      FOR EACH ROW\n      EXECUTE FUNCTION update_updated_at_column();\n  ","timestamp":"2025-09-14T21:44:54.097Z"}
{"level":"info","message":"Migrations completed - indexes and triggers updated","service":"DBMigrations","timestamp":"2025-09-14T21:44:54.100Z"}
{"level":"info","message":"Checking if database needs seeding...","service":"DataSeeder","timestamp":"2025-09-14T21:44:54.117Z"}
{"duration":30,"level":"debug","message":"Executed query in 30ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM categories","timestamp":"2025-09-14T21:44:54.149Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services","timestamp":"2025-09-14T21:44:54.182Z"}
{"level":"info","message":"Database already contains data, skipping seed","service":"DataSeeder","timestamp":"2025-09-14T21:44:54.190Z"}
{"level":"info","message":"Database connection initialized, migrations applied, and all routes enabled.","service":"Server","timestamp":"2025-09-14T21:44:54.502Z"}
{"level":"info","message":"Default data automatically loaded if database was empty.","service":"Server","timestamp":"2025-09-14T21:44:54.512Z"}
{"level":"info","message":"Server running on port 3001","service":"Server","timestamp":"2025-09-14T21:44:54.597Z"}
{"level":"info","message":"Health check: http://localhost:3001/health","service":"Server","timestamp":"2025-09-14T21:44:54.598Z"}
{"level":"info","message":"API base URL: http://localhost:3001/api","service":"Server","timestamp":"2025-09-14T21:44:54.602Z"}
{"level":"info","message":"Setting up API routes","service":"APIRoutes","timestamp":"2025-09-14T21:44:54.231Z"}
{"level":"info","message":"Setting up service routes","service":"ServiceRoutes","timestamp":"2025-09-14T21:44:54.370Z"}
{"level":"info","message":"Setting up client routes","service":"ClientRoutes","timestamp":"2025-09-14T21:44:54.462Z"}
{"level":"info","message":"Setting up category routes","service":"CategoryRoutes","timestamp":"2025-09-14T21:44:54.296Z"}
{"ip":"::1","level":"info","message":"GET /health","service":"Server","timestamp":"2025-09-14T21:44:55.978Z","userAgent":"curl/8.5.0"}
{"ip":"::1","level":"info","message":"GET /api/health","service":"Server","timestamp":"2025-09-14T21:46:02.435Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T21:46:03.864Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/revenue/monthly","service":"Server","timestamp":"2025-09-14T21:46:03.945Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/appointments","service":"Server","timestamp":"2025-09-14T21:46:04.017Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/stats/clients","service":"Server","timestamp":"2025-09-14T21:46:04.112Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/categories","service":"Server","timestamp":"2025-09-14T21:46:04.131Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":366,"level":"debug","message":"Executed query in 366ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T21:46:04.269Z"}
{"duration":66,"level":"debug","message":"Executed query in 66ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T21:46:04.337Z"}
{"duration":50,"level":"debug","message":"Executed query in 50ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T21:46:04.388Z"}
{"duration":303,"level":"debug","message":"Executed query in 303ms","rowCount":5,"service":"Database","text":"SELECT * FROM categories ORDER BY name ASC LIMIT 5","timestamp":"2025-09-14T21:46:04.450Z"}
{"duration":80,"level":"debug","message":"Executed query in 80ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T21:46:04.479Z"}
{"duration":57,"level":"debug","message":"Executed query in 57ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T21:46:04.540Z"}
{"duration":38,"level":"debug","message":"Executed query in 38ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T21:46:04.580Z"}
{"duration":25,"level":"debug","message":"Executed query in 25ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T21:46:04.607Z"}
{"ip":"::1","level":"info","message":"GET /api/stats/business","service":"Server","timestamp":"2025-09-14T21:47:12.449Z","userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"duration":137,"level":"debug","message":"Executed query in 137ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM clients","timestamp":"2025-09-14T21:47:12.597Z"}
{"duration":13,"level":"debug","message":"Executed query in 13ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_quotations,\n          COALESCE(SUM(total), 0) as total_revenue,\n          COUNT(CASE WHEN status = 'accepted' THEN 1 END) as accepted_quotations,\n          COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending_quotations,\n          COUNT(CASE WHEN status = 'rejected' THEN 1 END) as rejected_quotations\n        FROM quotations\n      ","timestamp":"2025-09-14T21:47:12.611Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_appointments,\n          COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled,\n          COUNT(CASE WHEN status = 'confirmed' THEN 1 END) as confirmed,\n          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed,\n          COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled\n        FROM appointments\n      ","timestamp":"2025-09-14T21:47:12.618Z"}
{"duration":3,"level":"debug","message":"Executed query in 3ms","rowCount":1,"service":"Database","text":"SELECT COUNT(*) as count FROM services WHERE active = true","timestamp":"2025-09-14T21:47:12.623Z"}
{"duration":12,"level":"debug","message":"Executed query in 12ms","rowCount":1,"service":"Database","text":"\n        SELECT \n          COUNT(*) as total_emails,\n          COUNT(CASE WHEN processed = true THEN 1 END) as processed_emails,\n          COUNT(CASE WHEN responded = true THEN 1 END) as responded_emails\n        FROM emails\n      ","timestamp":"2025-09-14T21:47:12.635Z"}
{"duration":11,"level":"debug","message":"Executed query in 11ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          DATE_TRUNC('month', created_at) as month,\n          COALESCE(SUM(total), 0) as revenue,\n          COUNT(*) as quotations_count\n        FROM quotations \n        WHERE created_at >= CURRENT_DATE - INTERVAL '6 months'\n        GROUP BY DATE_TRUNC('month', created_at)\n        ORDER BY month DESC\n      ","timestamp":"2025-09-14T21:47:12.659Z"}
{"duration":15,"level":"debug","message":"Executed query in 15ms","rowCount":0,"service":"Database","text":"\n        SELECT \n          s.category,\n          COUNT(DISTINCT s.id) as service_count,\n          COUNT(DISTINCT q.id) as quotations_count,\n          COALESCE(SUM(q.total), 0) as total_revenue\n        FROM services s\n        LEFT JOIN quotations q ON q.services::text LIKE '%' || s.id || '%'\n        WHERE s.active = true\n        GROUP BY s.category\n        ORDER BY total_revenue DESC\n      ","timestamp":"2025-09-14T21:47:12.675Z"}
{"level":"info","message":"Received shutdown signal, closing server...","service":"Server","timestamp":"2025-09-14T21:47:27.298Z"}
