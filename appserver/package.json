{
  "name": "portal-services-server",
  "version": "2.0.0",
  "description": "Backend server para sistema de gestão de serviços e orçamentos",
  "main": "server.ts",
  "scripts": {
    "start": "./start-project.sh",
    "dev": "./start-project.sh",
    "dev:local": "tsx watch server.ts",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:status": "docker-compose ps",
    "db:setup": "tsx scripts/db-setup.ts",
    "build": "tsc -p tsconfig.production.json && echo 'Build completed successfully' && ls -la dist/",
    "build:dev": "tsc && echo 'Build completed successfully' && ls -la dist/",
    "build:clean": "rm -rf dist && npm run build",
    "build:verify": "npm run build && node -e \"console.log('Build verification: OK')\" && ls -la dist/",
    "start": "node dist/server.js",
    "start:dev": "tsx server.ts",
    "start:categories": "DB_HOST=localhost DB_PORT=5432 DB_NAME=portalservicesdb DB_USER=admin DB_PASSWORD=admin PORT=3001 tsx server-categories.ts",
    "start:complete": "DB_HOST=localhost DB_PORT=5432 DB_NAME=portalservicesdb DB_USER=admin DB_PASSWORD=admin PORT=3001 tsx server-complete.ts",
    "start:simple": "DB_HOST=localhost DB_PORT=5432 DB_NAME=portalservicesdb DB_USER=admin DB_PASSWORD=admin PORT=3001 tsx server-simple.ts",
    "typecheck": "tsc --noEmit",
    "setup": "tsx setup.ts",
    "init-db": "node scripts/init-database.js",
    "postbuild": "echo 'Post-build: Checking compiled files' && ls -la dist/ && echo 'Build verification completed'",
    "prestart": "echo 'Starting server...' && node -e \"console.log('Node version:', process.version)\"",
    "healthcheck": "node healthcheck.js",
    "deploy:check": "npm run typecheck && npm run build:verify && echo 'Deploy check passed'",
    "test": "node --experimental-vm-modules node_modules/jest/bin/jest.js",
    "test:watch": "node --experimental-vm-modules node_modules/jest/bin/jest.js --watch",
    "test:integration": "node --experimental-vm-modules node_modules/jest/bin/jest.js --testPathPattern=integration",
    "test:unit": "node --experimental-vm-modules node_modules/jest/bin/jest.js --testPathPattern=unit",
    "test:coverage": "node --experimental-vm-modules node_modules/jest/bin/jest.js --coverage",
    "test:summary": "node run-tests-summary.js",
    "test:all": "node test-runner.js",
    "test:quick": "node --experimental-vm-modules node_modules/jest/bin/jest.js --testPathPattern=integration --verbose --no-coverage",
    "test:failures": "node test-failures-only.js"
  },
  "dependencies": {
    "@types/inquirer": "^9.0.9",
    "bcryptjs": "^2.4.3",
    "cors": "^2.8.5",
    "date-fns": "^2.30.0",
    "dotenv": "^16.4.5",
    "express": "^4.18.2",
    "googleapis": "^129.0.0",
    "inquirer": "^12.9.2",
    "jsonwebtoken": "^9.0.2",
    "node-cron": "^3.0.3",
    "pg": "^8.11.3",
    "uuid": "^9.0.1",
    "winston": "^3.11.0",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@types/bcryptjs": "^2.4.6",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.8",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/node": "^20.10.0",
    "@types/pg": "^8.10.7",
    "@types/supertest": "^2.0.16",
    "@types/uuid": "^9.0.8",
    "jest": "^29.7.0",
    "supertest": "^7.1.3",
    "ts-jest": "^29.1.1",
    "tsx": "^4.20.4",
    "typescript": "^5.3.2"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  }
}
